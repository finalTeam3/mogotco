import { HttpWithJSONRpc } from '../../utils/http-with-json-rpc';
import EventEmitter from 'eventemitter3';
export declare class RoomApiClient extends HttpWithJSONRpc {
    private roomId;
    private participantId;
    private sign;
    protected emitter: EventEmitter;
    constructor();
    setRoomId(roomId: string): Promise<void>;
    setParticipantId(participantId: string): Promise<void>;
    sendEnterRoom(): Promise<Omit<import("jsonrpc-lite").SuccessObject, "result"> & {
        result: EnterRoomResponse;
    }>;
    sendCreateSession(direction: string, index: number, sdp: CreateSessionParams['desc']): Promise<Omit<import("jsonrpc-lite").SuccessObject, "result"> & {
        result: CreateSessionResponse;
    }>;
    sendAddCandidate(direction: string, index: number, candidate: AddCandidateParams['candidate']): Promise<Omit<import("jsonrpc-lite").SuccessObject, "result"> & {
        result: AddCandidateResponse;
    }>;
    sendRestartIce(direction: string, index: number, sdp: RestartIceParams['desc']): Promise<Omit<import("jsonrpc-lite").SuccessObject, "result"> & {
        result: CreateSessionResponse;
    }>;
    sendDestroySession(direction: string, index: number): Promise<Omit<import("jsonrpc-lite").SuccessObject, "result"> & {
        result: DestroySessionResponse;
    }>;
    on<T = any>(name: string, callback: (eventData: T) => void): void;
}
declare type EnterRoomResponse = {
    roomId: string;
    participantId: string;
    sign: string;
};
declare type CreateSessionParams = {
    roomId: string;
    participantId: string;
    sign: string;
    direction: string;
    index: number;
    desc: RTCSessionDescriptionInit;
};
declare type CreateSessionResponse = {
    desc: RTCSessionDescriptionInit;
};
declare type AddCandidateParams = {
    roomId: string;
    participantId: string;
    sign: string;
    direction: string;
    index: number;
    candidate: RTCIceCandidate;
};
declare type AddCandidateResponse = {};
declare type RestartIceParams = {
    roomId: string;
    participantId: string;
    sign: string;
    direction: string;
    index: number;
    desc: RTCSessionDescriptionInit;
};
declare type DestroySessionResponse = {};
export {};
