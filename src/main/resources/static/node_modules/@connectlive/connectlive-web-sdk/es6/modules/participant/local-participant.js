var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { objectToArray } from '../../utils/object-util';
import { Loggable } from '../../utils/logger';
export class LocalParticipant {
    constructor() {
        this.id = '';
        this.audioMap = {};
        this.videoMap = {};
    }
    get hasAudio() {
        return objectToArray(this.audioMap).length > 0;
    }
    get hasVideo() {
        return objectToArray(this.videoMap).length > 0;
    }
    _setLocalAudio(audio) {
        this.audioMap[audio.streamId] = audio;
    }
    _setLocalVideo(video) {
        this.videoMap[video.streamId] = video;
    }
    getAudio(streamId) {
        return this.audioMap[streamId] || null;
    }
    getVideo(streamId) {
        return this.videoMap[streamId] || null;
    }
    _setLocalParticipantId(participantId) {
        this.id = participantId;
    }
    stop() {
        objectToArray(this.audioMap).forEach(audio => audio.stop());
        objectToArray(this.videoMap).forEach(video => video.stop());
    }
    /**
     * @internal
     */
    _removeStream(streamId) {
        delete this.audioMap[streamId];
        delete this.videoMap[streamId];
    }
}
__decorate([
    Loggable('info')
], LocalParticipant.prototype, "_setLocalAudio", null);
__decorate([
    Loggable('info')
], LocalParticipant.prototype, "_setLocalVideo", null);
__decorate([
    Loggable('info')
], LocalParticipant.prototype, "getAudio", null);
__decorate([
    Loggable('info')
], LocalParticipant.prototype, "getVideo", null);
__decorate([
    Loggable('info')
], LocalParticipant.prototype, "_setLocalParticipantId", null);
__decorate([
    Loggable('info')
], LocalParticipant.prototype, "stop", null);
__decorate([
    Loggable('debug')
], LocalParticipant.prototype, "_removeStream", null);
