var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Loggable } from "../../utils/logger";
export class Remote {
    constructor(participantId) {
        this.extraValue = '';
        this.participantId = '';
        this.participantId = participantId;
    }
    getParticipantId() {
        return this.participantId;
    }
    getExtraValue() {
        return this.extraValue;
    }
    _setExtraValue(extraValue = '') {
        this.extraValue = extraValue;
    }
    _setParticipantId(participantId) {
        this.participantId = participantId;
    }
}
__decorate([
    Loggable('info')
], Remote.prototype, "getParticipantId", null);
__decorate([
    Loggable('info')
], Remote.prototype, "getExtraValue", null);
__decorate([
    Loggable('info')
], Remote.prototype, "_setExtraValue", null);
__decorate([
    Loggable('debug')
], Remote.prototype, "_setParticipantId", null);
