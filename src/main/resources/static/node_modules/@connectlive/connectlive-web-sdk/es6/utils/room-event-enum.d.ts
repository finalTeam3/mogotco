import { RemoteParticipant } from '../modules/participant/remote-participant';
import { RemoteAudio } from '../modules/remote/remote-audio';
import { RemoteVideo } from '../modules/remote/remote-video';
import { LocalVideo } from '../modules/local/local-video';
import { LocalAudio } from '../modules/local/local-audio';
import { QualityStat } from '../modules/room/room';
export declare enum RoomEventName {
    CONNECTING = "connecting",
    CONNECTED = "connected",
    DISCONNECTED = "disconnected",
    PARTICIPANTENTERED = "participantEntered",
    PARTICIPANTLEFT = "participantLeft",
    LOCALVIDEOPUBLISHED = "localVideoPublished",
    LOCALVIDEOUNPUBLISHED = "localVideoUnpublished",
    LOCALAUDIOPUBLISHED = "localAudioPublished",
    LOCALAUDIOUNPUBLISHED = "localAudioUnpublished",
    REMOTEVIDEOPUBLISHED = "remoteVideoPublished",
    REMOTEVIDEOUNPUBLISHED = "remoteVideoUnpublished",
    REMOTEAUDIOPUBLISHED = "remoteAudioPublished",
    REMOTEAUDIOUNPUBLISHED = "remoteAudioUnpublished",
    REMOTEAUDIOLEVELUPDATED = "remoteAudioLevelUpdated",
    REMOTEAUDIOSUBSCRIBED = "remoteAudioSubscribed",
    REMOTEAUDIOUNSUBSCRIBED = "remoteAudioUnsubscribed",
    REMOTEVIDEOSTATECHANGED = "remoteVideoStateChanged",
    REMOTEAUDIOSTATECHANGED = "remoteAudioStateChanged",
    ERROR = "error",
    RECORDFAILED = "recordFailed",
    USERMESSAGE = "userMessage",
    STAT = "stat"
}
export declare type RoomEventConnecting = {
    readonly progress: number;
};
export declare type RoomEventConnected = {
    readonly remoteParticipants: RemoteParticipant[];
};
export declare type RoomEventDisconnected = 'disconnected' | 'destroyed' | 'kicked';
export declare type RoomEventParticipantEntered = {
    readonly remoteParticipant: RemoteParticipant;
};
export declare type RoomEventParticipantLeft = {
    readonly remoteParticipantId: string;
};
export declare type RoomEventLocalAudioPublished = {
    readonly localAudio: LocalAudio;
};
export declare type RoomEventLocalAudioUnpublished = {
    readonly localAudio: LocalAudio;
};
export declare type RoomEventLocalVideoPublished = {
    readonly localVideo: LocalVideo;
};
export declare type RoomEventLocalVideoUnpublished = {
    readonly localVideo: LocalVideo;
};
export declare type RoomEventRemoteVideoPublished = {
    readonly remoteParticipant: RemoteParticipant;
    readonly remoteVideo: RemoteVideo;
};
export declare type RoomEventRemoteVideoUnpublished = {
    readonly remoteParticipant: RemoteParticipant;
    readonly remoteVideo: RemoteVideo;
};
export declare type RoomEventRemoteAudioPublished = {
    readonly remoteParticipant: RemoteParticipant;
    readonly remoteAudio: RemoteAudio;
};
export declare type RoomEventRemoteAudioUnpublished = {
    readonly remoteParticipant: RemoteParticipant;
    readonly remoteAudio: RemoteAudio;
};
export declare type RoomEventRemoteAudioSubscribed = {
    readonly remoteParticipant: RemoteParticipant;
};
export declare type RoomEventRemoteAudioUnsubscribed = {
    readonly remoteParticipant: RemoteParticipant;
};
export declare type RoomEventRemoteAudioStateChanged = {
    readonly remoteParticipant: RemoteParticipant;
    readonly remoteAudio: RemoteAudio;
};
export declare type RoomEventRemoteVideoStateChanged = {
    readonly remoteParticipant: RemoteParticipant;
    readonly remoteVideo: RemoteVideo;
};
export declare type RoomEventRecordFailed = {
    readonly negotiationId: string;
    readonly reason: 'NotPermitted' | 'LimitExceeded';
};
export declare type RoomEventUserMessage = {
    readonly senderId: string;
    readonly message: string;
    readonly type: string;
};
export declare type RoomEventStat = {
    qualityStat: QualityStat;
};
