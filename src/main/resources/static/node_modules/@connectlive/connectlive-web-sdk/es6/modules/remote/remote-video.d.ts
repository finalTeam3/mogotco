import { RemoteParticipant } from '../participant/remote-participant';
import { ParticipantStream } from '../session/down-session';
import { VideoTrackType } from '../session/up-session';
import { Remote, StatusUpdateFn } from './remote';
export declare class RemoteVideo extends Remote {
    type: VideoTrackType;
    extraValue: string;
    videoElements: HTMLVideoElement[];
    mediaStreamTrack?: MediaStreamTrack;
    videoId: number;
    receiverId: string;
    paused: boolean;
    active: boolean;
    profile: 'l' | 'm' | 'h';
    statusUpdateFn: StatusUpdateFn;
    constructor(stream: ParticipantStream, participant: RemoteParticipant);
    get isEnabled(): boolean | undefined;
    _setType(type: VideoTrackType): void;
    _setRemoteTrack(mediaStreamTrack: MediaStreamTrack): void;
    attach(element?: HTMLVideoElement | undefined): HTMLVideoElement | undefined;
    detach(): void;
    getMediaStreamTrack(): MediaStreamTrack | undefined;
    getMediaStream(): MediaStream | undefined;
    getVideoId(): number;
    _setVideoId(streamId: number): void;
    _setReceiverId(receiverId: string, statusUpdateFn: StatusUpdateFn): void;
    _setActive(enabled: boolean): void;
    setPaused(enabled: boolean): Promise<void>;
    setQuality(quality: 'l' | 'm' | 'h'): Promise<void>;
}
