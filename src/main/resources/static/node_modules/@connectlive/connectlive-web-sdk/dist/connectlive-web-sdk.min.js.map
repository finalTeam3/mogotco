{"version":3,"file":"connectlive-web-sdk.min.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/config.ts","../src/utils/hash.ts","../../../node_modules/jsonrpc-lite/dist/esnext/jsonrpc.js","../src/utils/indexer.ts","../../../node_modules/ua-parser-js/src/ua-parser.js","../src/utils/user-agent.ts","../src/utils/delay.ts","../src/utils/log-send.ts","../src/utils/logger.ts","../src/utils/error-exception.ts","../src/utils/http-with-json-rpc.ts","../src/modules/room/auth-api-client.ts","../../../node_modules/eventemitter3/index.js","../src/modules/room/room-api-client.ts","../src/utils/json-rpc.ts","../src/utils/noop.ts","../src/modules/session/session.ts","../src/utils/object-util.ts","../src/modules/session/down-session.ts","../src/modules/session/up-session.ts","../src/modules/remote/remote.ts","../src/modules/remote/remote-video.ts","../src/modules/remote/remote-audio.ts","../src/modules/participant/remote-participant.ts","../src/modules/participant/local-participant.ts","../src/modules/local/local.ts","../src/modules/local/local-video.ts","../src/modules/local/local-audio.ts","../src/modules/local/local-media.ts","../src/modules/remote/remote-audio-elements.ts","../src/modules/local/local-screen.ts","../src/utils/room-event-enum.ts","../src/modules/room/room.ts","../src/utils/make-array.ts","../src/index.ts","../src/utils/storage.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export const SDK_VERSION = '2.2.3';\nexport const PROVISIONING_SERVER_URL = 'https://icl2-provisioning-ap2.k9ertc.io/api/rpc';\nexport const PROVISIONING_API_VERSION = '1.0';\nexport const ROOM_API_VERSION = '2.0';\nexport const CNL_API_VERSION = '1.0';","export const hash = async (message: string) => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(message);\n  const hashArray = await crypto.subtle.digest('SHA-256', data);\n  return [...new Uint8Array(hashArray)].map(x => x.toString(16).padStart(2, '0')).join('');\n};\n","// **Github:** https://github.com/teambition/jsonrpc-lite\n//\n// http://www.jsonrpc.org/specification\n// **License:** MIT\n'use strict';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst isInteger = typeof Number.isSafeInteger === 'function'\n    ? Number.isSafeInteger // ECMAScript 2015\n    : function (num) {\n        return typeof num === 'number' && isFinite(num) && num === Math.floor(num) && Math.abs(num) <= 9007199254740991;\n    };\nexport class JsonRpc {\n    constructor() {\n        this.jsonrpc = '2.0';\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n}\nJsonRpc.VERSION = '2.0';\nexport class RequestObject extends JsonRpc {\n    constructor(id, method, params) {\n        super();\n        this.id = id;\n        this.method = method;\n        if (params !== undefined) {\n            this.params = params;\n        }\n    }\n}\nexport class NotificationObject extends JsonRpc {\n    constructor(method, params) {\n        super();\n        this.method = method;\n        if (params !== undefined) {\n            this.params = params;\n        }\n    }\n}\nexport class SuccessObject extends JsonRpc {\n    constructor(id, result) {\n        super();\n        this.id = id;\n        this.result = result;\n    }\n}\nexport class ErrorObject extends JsonRpc {\n    // tslint:disable-next-line:no-shadowed-variable\n    constructor(id, error) {\n        super();\n        this.id = id;\n        this.error = error;\n        this.id = id;\n        this.error = error;\n    }\n}\nexport class JsonRpcParsed {\n    constructor(payload, type) {\n        this.payload = payload;\n        this.type = type;\n        this.payload = payload;\n        this.type = type;\n    }\n}\n/**\n * JsonRpcError Class\n *\n * @param  {String} message\n * @param  {Integer} code\n * @return {String} name: optional\n * @api public\n */\nexport class JsonRpcError {\n    constructor(message, code, data) {\n        this.message = message;\n        this.code = isInteger(code) ? code : 0;\n        if (data != null) {\n            this.data = data;\n        }\n    }\n}\nJsonRpcError.invalidRequest = function (data) {\n    return new JsonRpcError('Invalid request', -32600, data);\n};\nJsonRpcError.methodNotFound = function (data) {\n    return new JsonRpcError('Method not found', -32601, data);\n};\nJsonRpcError.invalidParams = function (data) {\n    return new JsonRpcError('Invalid params', -32602, data);\n};\nJsonRpcError.internalError = function (data) {\n    return new JsonRpcError('Internal error', -32603, data);\n};\nJsonRpcError.parseError = function (data) {\n    return new JsonRpcError('Parse error', -32700, data);\n};\n/**\n * Creates a JSON-RPC 2.0 request object\n *\n * @param  {String|Integer} id\n * @param  {String} method\n * @param  {Object|Array} [params]: optional\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function request(id, method, params) {\n    const object = new RequestObject(id, method, params);\n    validateMessage(object, true);\n    return object;\n}\n/**\n * Creates a JSON-RPC 2.0 notification object\n *\n * @param  {String} method\n * @param  {Object|Array} [params]: optional\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function notification(method, params) {\n    const object = new NotificationObject(method, params);\n    validateMessage(object, true);\n    return object;\n}\n/**\n * Creates a JSON-RPC 2.0 success response object\n *\n * @param  {String|Integer} id\n * @param  {Mixed} result\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function success(id, result) {\n    const object = new SuccessObject(id, result);\n    validateMessage(object, true);\n    return object;\n}\n/**\n * Creates a JSON-RPC 2.0 error response object\n *\n * @param  {String|Integer} id\n * @param  {Object} JsonRpcError error\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function error(id, err) {\n    const object = new ErrorObject(id, err);\n    validateMessage(object, true);\n    return object;\n}\nexport function parse(message) {\n    if (!isString(message)) {\n        return new JsonRpcParsed(JsonRpcError.invalidRequest(message), \"invalid\" /* invalid */);\n    }\n    let jsonrpcObj;\n    try {\n        jsonrpcObj = JSON.parse(message);\n    }\n    catch (err) {\n        return new JsonRpcParsed(JsonRpcError.parseError(message), \"invalid\" /* invalid */);\n    }\n    return parseJsonRpcObject(jsonrpcObj);\n}\n/**\n * Takes a JSON-RPC 2.0 payload (Object) or batch (Object[]) and tries to parse it.\n * If successful, determine what objects are inside (response, notification,\n * success, error, or invalid), and return their types and properly formatted objects.\n *\n * @param  {Object|Array} jsonrpcObj\n * @return {Object|Array} a single object or an array of `JsonRpcParsed` objects with `type` and `payload`:\n *\n *  {\n *    type: <Enum, 'request'|'notification'|'success'|'error'|'invalid'>\n *    payload: <JsonRpc|JsonRpcError>\n *  }\n *\n * @api public\n */\nexport function parseJsonRpcObject(jsonrpcObj) {\n    if (!Array.isArray(jsonrpcObj)) {\n        return parseObject(jsonrpcObj);\n    }\n    if (jsonrpcObj.length === 0) {\n        return new JsonRpcParsed(JsonRpcError.invalidRequest(jsonrpcObj), \"invalid\" /* invalid */);\n    }\n    const parsedObjectArray = [];\n    for (let i = 0, len = jsonrpcObj.length; i < len; i++) {\n        parsedObjectArray[i] = parseObject(jsonrpcObj[i]);\n    }\n    return parsedObjectArray;\n}\n/**\n * Alias for `parse` method.\n * Takes a JSON-RPC 2.0 payload (String) and tries to parse it into a JSON.\n * @api public\n */\nexport const parseJsonRpcString = parse;\n/**\n * Takes a JSON-RPC 2.0 payload (Object) and tries to parse it into a JSON.\n * If successful, determine what object is it (response, notification,\n * success, error, or invalid), and return it's type and properly formatted object.\n *\n * @param  {Object} obj\n * @return {Object} an `JsonRpcParsed` object with `type` and `payload`:\n *\n *  {\n *    type: <Enum, 'request'|'notification'|'success'|'error'|'invalid'>\n *    payload: <JsonRpc|JsonRpcError>\n *  }\n *\n * @api public\n */\nexport function parseObject(obj) {\n    let err = null;\n    let payload = null;\n    let payloadType = \"invalid\" /* invalid */;\n    if (obj == null || obj.jsonrpc !== JsonRpc.VERSION) {\n        err = JsonRpcError.invalidRequest(obj);\n        payloadType = \"invalid\" /* invalid */;\n    }\n    else if (!hasOwnProperty.call(obj, 'id')) {\n        const tmp = obj;\n        payload = new NotificationObject(tmp.method, tmp.params);\n        err = validateMessage(payload);\n        payloadType = \"notification\" /* notification */;\n    }\n    else if (hasOwnProperty.call(obj, 'method')) {\n        const tmp = obj;\n        payload = new RequestObject(tmp.id, tmp.method, tmp.params);\n        err = validateMessage(payload);\n        payloadType = \"request\" /* request */;\n    }\n    else if (hasOwnProperty.call(obj, 'result')) {\n        const tmp = obj;\n        payload = new SuccessObject(tmp.id, tmp.result);\n        err = validateMessage(payload);\n        payloadType = \"success\" /* success */;\n    }\n    else if (hasOwnProperty.call(obj, 'error')) {\n        const tmp = obj;\n        payloadType = \"error\" /* error */;\n        if (tmp.error == null) {\n            err = JsonRpcError.internalError(tmp);\n        }\n        else {\n            const errorObj = new JsonRpcError(tmp.error.message, tmp.error.code, tmp.error.data);\n            if (errorObj.message !== tmp.error.message || errorObj.code !== tmp.error.code) {\n                err = JsonRpcError.internalError(tmp);\n            }\n            else {\n                payload = new ErrorObject(tmp.id, errorObj);\n                err = validateMessage(payload);\n            }\n        }\n    }\n    if (err == null && payload != null) {\n        return new JsonRpcParsed(payload, payloadType);\n    }\n    return new JsonRpcParsed(err != null ? err : JsonRpcError.invalidRequest(obj), \"invalid\" /* invalid */);\n}\n// if error, return error, else return null\nfunction validateMessage(obj, throwIt) {\n    let err = null;\n    if (obj instanceof RequestObject) {\n        err = checkId(obj.id);\n        if (err == null) {\n            err = checkMethod(obj.method);\n        }\n        if (err == null) {\n            err = checkParams(obj.params);\n        }\n    }\n    else if (obj instanceof NotificationObject) {\n        err = checkMethod(obj.method);\n        if (err == null) {\n            err = checkParams(obj.params);\n        }\n    }\n    else if (obj instanceof SuccessObject) {\n        err = checkId(obj.id);\n        if (err == null) {\n            err = checkResult(obj.result);\n        }\n    }\n    else if (obj instanceof ErrorObject) {\n        err = checkId(obj.id, true);\n        if (err == null) {\n            err = checkError(obj.error);\n        }\n    }\n    if (throwIt && err != null) {\n        throw err;\n    }\n    return err;\n}\nfunction checkId(id, maybeNull) {\n    if (maybeNull && id === null) {\n        return null;\n    }\n    return isString(id) || isInteger(id)\n        ? null\n        : JsonRpcError.internalError('\"id\" must be provided, a string or an integer.');\n}\nfunction checkMethod(method) {\n    return isString(method) ? null : JsonRpcError.invalidRequest(method);\n}\nfunction checkResult(result) {\n    return result === undefined\n        ? JsonRpcError.internalError('Result must exist for success Response objects')\n        : null;\n}\nfunction checkParams(params) {\n    if (params === undefined) {\n        return null;\n    }\n    if (Array.isArray(params) || isObject(params)) {\n        // ensure params can be stringify\n        try {\n            JSON.stringify(params);\n            return null;\n        }\n        catch (err) {\n            return JsonRpcError.parseError(params);\n        }\n    }\n    return JsonRpcError.invalidParams(params);\n}\nfunction checkError(err) {\n    if (!(err instanceof JsonRpcError)) {\n        return JsonRpcError.internalError('Error must be an instance of JsonRpcError');\n    }\n    if (!isInteger(err.code)) {\n        return JsonRpcError.internalError('Invalid error code. It must be an integer.');\n    }\n    if (!isString(err.message)) {\n        return JsonRpcError.internalError('Message must exist or must be a string.');\n    }\n    return null;\n}\nfunction isString(obj) {\n    return obj !== '' && typeof obj === 'string';\n}\nfunction isObject(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\nconst jsonrpc = {\n    JsonRpc,\n    JsonRpcError,\n    request,\n    notification,\n    success,\n    error,\n    parse,\n    parseObject,\n    parseJsonRpcObject,\n    parseJsonRpcString,\n};\nexport default jsonrpc;\nexport { jsonrpc };\n//# sourceMappingURL=jsonrpc.js.map","class Indexer {\n  private id = 0;\n  get() {\n    this.id += 1;\n    return this.id;\n  }\n  reset() {\n    this.id = 0;\n  }\n}\n\nexport const indexer = new Indexer();\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.2\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.2',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 255;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK   = 'Facebook';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY).replace(/\\s\\s*$/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,               // Avant/IEMobile/SlimBrowser\n            /(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,                                  // Baidu Browser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale|qqbrowserlite|qq)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /\\bqbcore\\/([\\w\\.]+)/i                                              // WeChat Desktop for Windows Built-in Browser\n            ], [VERSION, [NAME, 'WeChat(Win) Desktop']], [\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /yabrowser\\/([\\w\\.]+)/i                                             // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 '+BROWSER]], [\n            /(oculus|samsung|sailfish)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 '+BROWSER], VERSION], [                      // Oculus/Samsung/Sailfish Browser\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i            // QQBrowser/Baidu App/2345 Browser\n            ], [NAME, VERSION], [\n            /(metasr)[\\/ ]?([\\w\\.]+)/i,                                         // SouGouBrowser\n            /(lbbrowser)/i                                                      // LieBao Browser\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(chromium|instagram)[\\/ ]([-\\w\\.]+)/i                              // Chromium/Instagram\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.]+) .*mobile\\/\\w+ (safari)/i                        // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w\\.]+) .*(mobile ?safari|safari)/i                     // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, VERSION]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            // Ordered by popularity\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[pt]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /\\((ip(?:hone|od)[\\w ]*);/i                                         // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}-[atu]?[ln][01259x][012359][an]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+)(?: bui|\\))/i,                                       // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[12]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ ([c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi)( bui|\\))/i,                                         // Kindle Fire without Silk\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic|sony)[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w)( bui|\\))/i                                          // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i                                              // Sharp\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w ]*; *(\\w[^;]*);([^;]*)/i               // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( 2)?)/i                                                     // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i           // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| safari)|pda(?=.+windows ce))/i              // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i                                       // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows) nt 6\\.2; (arm)/i,                                        // Windows RT\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,            // Windows Phone\n            /(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, strMapper, windowsVersionMap]], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86)/i                              // Android-x86\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+ ([\\w\\.]+\\w)/i                                         // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,            // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _ua = ua || ((typeof window !== UNDEF_TYPE && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser.major = majorize(_browser.version);\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","import UAParser from 'ua-parser-js';\nexport default new UAParser();","export const delay = (timeout: number) => {\n  return new Promise<void>(resolve => {\n    window.setTimeout(resolve, timeout);\n  });\n};\n","import * as jsonrpc from 'jsonrpc-lite';\nimport { indexer } from './indexer';\nimport userAgentParser from './user-agent';\nimport { CNL_API_VERSION, SDK_VERSION } from '../config';\nimport { delay } from './delay';\nimport ConnectLive, { SignStatus } from '../index';\n\ntype VersionParam = {\n  version?: string;\n};\ntype RequestParams = VersionParam & jsonrpc.RpcParams;\n\ntype JSONRpcRequestBody = {\n  method: string;\n  params: RequestParams;\n};\n\ntype LogLevelNumber = {\n  verbose: number;\n  trace: number;\n  debug: number;\n  information: number;\n  warning: number;\n  error: number;\n};\n\nconst LogLevel: LogLevelNumber = {\n  verbose: 0,\n\ttrace: 1,\n  debug: 2,\n\tinformation: 3,\n\twarning: 4,\n  error: 5\n};\n\ntype LogLevelDesc = 'verbose' | 'trace' | 'debug' | 'information' | 'warning' | 'error';\n\nexport class LogSender {\n  private ws: WebSocket | null = null;\n  private keepAliveInterval = -1;\n  private host: string = '';\n  private token: string = '';\n  private logLevelNumber: number = 3;\n  private reconnectPeriod: number = -1;\n  private reconnectTimeGap: number = 1000;\n  collectionPeriod: number = 5;\n\n  createWebSocket(host: string, token: string) {\n    this.host = host;\n    this.token = token;\n\n    this.close();\n    this.clearKeepAliveTimer();\n    \n    return new Promise((resolve)=>{\n      this.ws = new WebSocket(host);\n      this.ws.onopen = ()=>{\n        const os = userAgentParser.getOS();\n        const browser = userAgentParser.getBrowser();\n        const device = userAgentParser.getDevice();\n\n        const method = 'CnL.Registration';\n        const params = {\n          token: token,\n          userInfo: {\n            sdkVersion: SDK_VERSION,\n            platform: 'web',\n            platformVersion: `${browser.name}/${browser.version}`,\n            osName: os.name,\n            osVersion: os.version,\n            deviceModel: device.model || '',\n          }\n        };\n        this.send({ method, params });\n\n        this.keepAliveInterval = window.setInterval(()=>{\n          this.send({\n            method: 'CnL.KeepAlive',\n            params: {}\n          });\n        }, 50000);\n\n        resolve(true);\n      };\n      this.ws.onerror = ()=>{\n        if(ConnectLive.signStatus === SignStatus.SIGN_IN) {\n          this.reconnect();\n        }\n      };\n      this.ws.onclose = ()=>{\n        if(ConnectLive.signStatus === SignStatus.SIGN_IN) {\n          this.reconnect();\n        }\n      };\n      this.ws.onmessage = (evt) => {\n        const data = JSON.parse(evt.data);\n        if(data.method === 'CnL.Push') {\n          this.setLevel(data.params.config.log_level);\n        }\n\n        if(data.result) {\n          if(data.result.config) {\n            if(data.result.config.cnl) {\n              this.reconnectPeriod = data.result.config.cnl.reconnect_period;\n            }\n            if(data.result.config.quality_metrics) {\n              this.collectionPeriod = data.result.config.quality_metrics.collection_period;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  async reconnect() {\n    this.close();\n    \n    if(this.reconnectPeriod > -1) {\n      await delay(this.reconnectPeriod)\n    }\n    \n    window.setTimeout(()=>{\n      this.createWebSocket(this.host, this.token);\n    }, this.reconnectTimeGap);\n    if(this.reconnectTimeGap >= 16000) {\n      this.reconnectTimeGap = 16000;\n    } else {\n      this.reconnectTimeGap = this.reconnectTimeGap * 2;\n    }\n  }\n\n  async send<R = jsonrpc.Defined, E = jsonrpc.JsonRpcError>(body: JSONRpcRequestBody, isLog: boolean = false) {\n    if(!this.ws) {\n      return;\n    }\n\n    const method = body.method;\n    const params: any = body.params;\n\n    params.version = CNL_API_VERSION;\n\n    if(method === 'CnL.Log') {\n      const level: LogLevelDesc = params.logs[0].level;\n      if(LogLevel[level] < this.logLevelNumber) {\n        return;\n      }\n    }\n\n    const id = indexer.get().toString();\n    let stringified = '';\n    if(!isLog) {\n      stringified = JSON.stringify(jsonrpc.request(id, method, params));\n    } else {\n      stringified = JSON.stringify(jsonrpc.notification(method, params));  \n    }\n\n    if(this.ws.readyState !== this.ws.CONNECTING) {\n      if(this.ws.readyState !== this.ws.CLOSED && this.ws.readyState !== this.ws.CLOSING) {\n        this.ws.send(stringified);\n      }\n    } else {\n      const timer = window.setInterval(()=>{\n        if(this.ws?.readyState === this.ws?.OPEN) {\n          window.clearInterval(timer);\n\n          this.ws?.send(stringified);\n        }\n      }, 10);\n    }\n  }\n\n  clearKeepAliveTimer() {\n    window.clearInterval(this.keepAliveInterval);\n    this.keepAliveInterval = -1;\n  }\n\n  close() {\n    this.ws?.close();\n    this.ws = null;\n  }\n\n  destroy() {\n    this.close();\n    this.clearKeepAliveTimer();\n\n    this.logLevelNumber = 3;\n    this.reconnectPeriod = -1;\n    this.reconnectTimeGap = 1000;\n  }\n\n  setLevel (logLevel: LogLevelDesc): void {\n\t\tthis.logLevelNumber = LogLevel[logLevel];\n\t}\n}\n\nexport type LogParams = {\n  sdkVersion: string;\n  logs: Array<{\n    date: string;\n    level: string;\n    message: string;\n  }>;\n};\n\nexport type LocalAudioQualityMetricReport = {\n  type: 'audio';\n  streamId: number;\n  bytesSent: number;\n  packetsSent: number;\n  srcAudioLevel: number;\n};\n\nexport type LocalVideoQualityMetricReport = {\n  type: 'video';\n  streamId: number;\n  profile: 'l' | 'm' | 'h';\n  bytesSent: number;\n  framesEncoded: number;\n  framesSent: number;\n  pliCount: number;\n  srcFrames: number;\n};\n\nexport type RemoteAudioQualityMetricReport = {\n  type: 'audio';\n  receiverId: number;\n  streamId: number;\n  bytesReceived: number;\n  totalSamplesReceived: number;\n  audioLevel: number;\n  packetsLost: number;\n};\n\nexport type RemoteVideoQualityMetricReport = {\n  type: 'video';\n  receiverId: number;\n  streamId: number;\n  bytesReceived: number;\n  framesReceived: number;\n  framesDecoded: number;\n  packetsLost: number;\n  pliCount: number;\n};\n\nexport type QualityMetricReport = {\n  direction: 'up' | 'down';\n  index: number;\n  metrics: Array<LocalAudioQualityMetricReport | LocalVideoQualityMetricReport | RemoteAudioQualityMetricReport | RemoteVideoQualityMetricReport>\n}\n\nexport type QualityMetricReportParams = {\n  serviceId: string;\n  roomId: string;\n  participantId: string;\n  sessions: QualityMetricReport[];\n};","import { LogParams, LogSender } from './log-send';\nimport { SDK_VERSION } from '../config';\n\n\n/*\ntrace : 서버 req/res\ndebug : client 생성 정보, offer/answer, \ninfo : 메서드 call 정보\n//warn : 카메라 권한 에러, 음... 그 외 서비스가 멈추지 않아도 되는 에러는??\nerror : 서버 에러, 그 외 모든 에러\n*/\n\nexport const loggerSender = new LogSender();\n\ntype LogLevelNumber = {\n  trace: number;\n  debug: number;\n  info: number;\n  error: number;\n  off: number\n};\n\nconst LogLevel: LogLevelNumber = {\n  trace: 0,\n\tdebug: 1,\n  info: 2,\n\terror: 3,\n\toff: 4,\n}\n\ntype LogLevelDesc = 'trace' | 'debug' | 'info' | 'error' | 'off';\n\nconst toNowDateString = (): string => {\n\tconst now = new Date();\n\tconst year = now.getFullYear();\n\tconst month = now.getMonth() + 1;\n\tconst date = now.getDate();\n\n\tconst hour = now.getHours();\n\tconst min = now.getMinutes();\n\tconst sec = now.getSeconds();\n\tconst millisecond = now.getMilliseconds();\n\n\treturn `${year}.${month >= 10 ? month : '0' + month}.${date >= 10 ? date : '0' + date} ` \n\t\t+ `${hour >= 10 ? hour : '0' + hour}:${min >= 10 ? min : '0' + min}:${sec >= 10 ? sec : '0' + sec}.${millisecond}`;\n};\n\nconst toISOString = (): string => {\n\tconst now = new Date();\n\treturn now.toISOString();\n}\n\nconst toMsgString = (msg: any[], level: string): string => {\n\tconst log = msg.map((log: any)=>{\n\t\tif (typeof log === 'object') {\n\t\t\tlog = JSON.stringify(log);\n\t\t}\n    return log;\n\t}).join(' ');\n\n  const method = 'CnL.Log';\n  const params: LogParams = {\n    sdkVersion: 'web_' + SDK_VERSION,\n    logs: [{\n      date: toISOString(),\n      level: level,\n      message: log\n    }]\n  };\n  loggerSender.send({ method, params}, true);\n\n  return log;\n};\n\nexport interface Logger {\n\tlogLevelNumber: number;\n\tsetLevel (logLevel: LogLevelDesc): void;\n\ttrace (...msg: any[]): void;\n  debug (...msg: any[]): void;\n  info (...msg: any[]): void;\n\terror (...msg: any[]): void;\n};\n\nexport const logger: Logger = {\n\tlogLevelNumber: 0,\n\tsetLevel (logLevel: LogLevelDesc): void {\n\t\tthis.logLevelNumber = LogLevel[logLevel];\n\t},\n  trace(...msg: any[]) {\n    if (this.logLevelNumber <= LogLevel.trace) {\n      console.log(`[TRACE] [${toNowDateString()}]`, toMsgString(msg, 'trace'));\n    } else {\n      toMsgString(msg, 'trace');\n    }\n  },\n  debug (...msg: any[]): void {\n\t\tif (this.logLevelNumber <= LogLevel.debug) {\n\t\t\tconsole.log(`[DEBUG] [${toNowDateString()}]`, toMsgString(msg, 'debug'));\n\t\t} else {\n      toMsgString(msg, 'debug');\n    }\n\t},\n  info(...msg: any[]) {\n    if (this.logLevelNumber <= LogLevel.info) {\n      console.log(`[INFO] [${toNowDateString()}]`, toMsgString(msg, 'information'));\n    } else {\n      toMsgString(msg, 'information');\n    }\n  },\n\terror (...msg: any[]): void {\n\t\tif (this.logLevelNumber <= LogLevel.error) {\n\t\t\tconsole.error(`[ERROR] [${toNowDateString()}]`, toMsgString(msg, 'error'));\n\t\t} else {\n      toMsgString(msg, 'error');\n    }\n\t}\n};\n\nexport const Loggable = (level: 'trace' | 'debug' | 'info' | 'error') => {\n  return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = function(...args: any[]) {\n      let log = '';\n      try{\n        log = '[method][' + target.constructor.name + '.' + propertyKey + ']' + ' arguments = ' + JSON.stringify(args);\n      } catch(err) {\n        const message = (err as Error).message;\n        log = '[method][' + target.constructor.name + '.' + propertyKey + ']' + ' arguments = ' + message;\n      }\n\n      logger[level](log);\n\n      return originalMethod.apply(this, args);\n    };\n\n    return descriptor;\n  };\n}\n\n","abstract class ErrorException extends Error {\n  code: number;\n\n  constructor(code: number, message: string) {\n    super(message);\n    this.code = code;\n\n    Object.setPrototypeOf(this, ErrorException.prototype);\n  }\n\n  getCode() {\n    return this.code;\n  }\n\n  getMessage() {\n    return this.message;\n  }\n}\n\nexport { ErrorException };\n\nclass ServerError extends ErrorException {\n  constructor(code: number, message: string) {\n    super(code, message);\n    this.name = 'ServerError';\n  }\n}\n\nexport { ServerError };\n\nclass ClientError extends ErrorException {\n  origin?: Error;\n\n  constructor(code: number, message: string, origin?: Error) {\n    super(code, message);\n    this.name = 'ClientError';\n    this.origin = origin;\n  }\n}\n\nexport { ClientError };\n","import * as jsonrpc from 'jsonrpc-lite';\nimport { indexer } from './indexer';\nimport { logger } from './logger';\nimport { ClientError, ServerError } from './error-exception';\nimport { ROOM_API_VERSION } from '../config';\n\ntype HttpHeaders = RequestInit;\ntype HttpMethod = RequestInit['method'];\ntype RequestOptions = {\n  httpMethod?: RequestInit['method'];\n  path?: string;\n};\n\ntype VersionParam = {\n  version?: string;\n};\ntype RequestParams = VersionParam & jsonrpc.RpcParams;\ntype JSONRpcRequestBody = {\n  method: string;\n  params: RequestParams;\n};\ntype SuccessObject<T> = Omit<jsonrpc.SuccessObject, 'result'> & { result: T };\ntype ErrorObject<T> = Omit<jsonrpc.ErrorObject, 'error'> & { error: T };\n\ntype ServerErrorObject = {\n  code: number;\n  data: any;\n  message: string;\n};\n\nexport class HttpWithJSONRpc {\n  private headers: HttpHeaders = {};\n  private host: string = '';\n\n  setHost(host: string) {\n    this.host = host;\n  }\n\n  setHeaders(headers: HttpHeaders) {\n    this.headers = headers;\n  }\n\n  protected async request<R = jsonrpc.Defined, E = jsonrpc.JsonRpcError>(\n    body: JSONRpcRequestBody,\n    options: RequestOptions = {},\n  )\n   {\n    try{\n      const { method, params } = body;\n      if(method !== 'Provision' && method !== 'ExtendTTL') {\n        params.version = ROOM_API_VERSION;\n      }\n      const { httpMethod = 'post', path = '' } = options;\n      const id = indexer.get().toString();\n      const stringified = JSON.stringify(jsonrpc.request(id, method, params));\n      const url = this.host + path;\n      logger.trace(`[${method}] ${stringified}`);\n      const res = await fetch(url, { ...this.headers, method: httpMethod, body: stringified });\n      const data = (await res.json()) as SuccessObject<R> | ErrorObject<ServerErrorObject>;\n\n      if(method !== 'Provision' && method !== 'ExtendTTL') {\n        if ('error' in data) {\n          logger.error(data);\n          const error: Error = new ServerError(data.error.code, data.error.message);\n          throw error;\n        }\n      }\n\n      logger.trace(`[RESULT] ${JSON.stringify(data)}`);\n      return data;\n    } catch(err){\n      const e = err as Error;\n      const message = e.message;\n      logger.error(message);\n      \n      const error: Error = new ClientError(1904, 'HTTP 세션에 오류가 발생했습니다.', e);\n      throw error;\n    }\n  }\n}\n","import { PROVISIONING_API_VERSION, PROVISIONING_SERVER_URL } from '../../config';\nimport { hash } from '../../utils/hash';\nimport { HttpWithJSONRpc } from '../../utils/http-with-json-rpc';\nimport { Loggable, logger } from '../../utils/logger';\nimport { ClientError, ServerError } from '../../utils/error-exception';\n\nexport class AuthApiClient extends HttpWithJSONRpc {\n  constructor() {\n    super();\n\n    this.setHeaders({ method: 'post', headers: { 'Content-Type': 'application/json' } });\n  }\n\n  @Loggable('info')\n  authorize(authConfig: AuthConfig, fingerprint: string = ''): Promise<AuthResponse> {\n    const host = authConfig.endpoint || PROVISIONING_SERVER_URL;\n    this.setHost(host);\n\n    if (!('token' in authConfig)) return this.internally(authConfig as InternalAuthConfig, fingerprint);\n    else return this.externally(authConfig, fingerprint);    \n  };\n\n  @Loggable('info')\n  async refreshToken(serviceId: string, oldToken: string): Promise<RefreshTokenResponse> {\n    const method = 'ExtendTTL';\n    const params: RefreshTokenParams = { serviceId: serviceId, token: oldToken };\n    const response = await this.request<RefreshTokenResponse>({ method, params });\n\n    if ('error' in response) {\n      logger.error('refreshToken', response);\n      const error: Error = new ServerError(response.error.code, response.error.message);\n      throw error;\n    }\n\n    const { result } = response;\n    return result;\n  };\n\n  @Loggable('info')\n  private async internally (config: InternalAuthConfig, fingerprint: string): Promise<AuthResponse> {\n    const { serviceId, serviceSecret } = config;\n    const texts = serviceSecret.split(':');\n    const serviceKey = texts[0];\n    const secret = texts[1];\n\n    if(!serviceId || !serviceKey || !secret) {\n      throw new ClientError(1103, '인증을 위한 서비스 정보가 입력되지 않았습니다.');\n    }\n\n    const scheme = 'internal';\n    const method = 'Provision';\n    const firstParams: InternalFirstTransactionParams = {\n      scheme,\n      serviceId,\n      version: PROVISIONING_API_VERSION\n    };\n    const firstResponse = await this.request<void, InternalFirstTransactionError>({\n      method,\n      params: firstParams,\n    });\n\n    if ('result' in firstResponse) {\n      logger.error('internally', firstResponse);\n      throw new Error('Provisioning Failed');\n    }\n\n    if (!('data' in firstResponse.error)) {\n      logger.error('internally', firstResponse);\n      const error: Error = new ServerError(firstResponse.error.code, firstResponse.error.message);\n      throw error;\n    }\n\n    const { nonce } = firstResponse.error.data;\n    const ha = await hash([serviceId, serviceKey, secret].join(':'));\n    const value = await hash([ha, nonce].join(':'));\n    const secondParams: InternalSecondTransactionParams = {\n      version: PROVISIONING_API_VERSION,\n      serviceId,\n      scheme,\n      fingerprint,\n      auth: {\n        nonce,\n        key: serviceKey,\n        value,\n      },\n    };\n    const secondResponse = await this.request<AuthResponse>({ method, params: secondParams });\n\n    if ('error' in secondResponse) {\n      logger.error('internally', secondResponse);\n      const error: Error = new ServerError(secondResponse.error.code, secondResponse.error.message);\n      throw error;\n    }\n\n    const { result } = secondResponse;\n    return result;\n  };\n\n  @Loggable('info')\n  private async externally(config: ExternalAuthConfig, fingerprint: string): Promise<AuthResponse> {\n    const { token, serviceId } = config;\n    if(!serviceId || !token) {\n      throw new ClientError(1103, '인증을 위한 서비스 정보가 입력되지 않았습니다.');\n    }\n\n    const scheme = 'external';\n    const method = 'Provision';\n    const params: ExternalTransactionParams = {\n      serviceId,\n      scheme,\n      fingerprint,\n      auth: { value: token }\n    };\n    const response = await this.request<AuthResponse>({ method, params });\n\n    if ('error' in response) {\n      logger.error('externally', response);\n      const error: Error = new ServerError(response.error.code, response.error.message);\n      throw error;\n    }\n\n    const { result } = response;\n    return result;\n  };\n}\n\nexport type InternalAuthConfig = {\n  endpoint?: string;\n  serviceId: string;\n  serviceSecret: string;\n};\nexport type ExternalAuthConfig = {\n  endpoint?: string;\n  serviceId: string;\n  token: string;\n};\nexport type AuthConfig = InternalAuthConfig | ExternalAuthConfig;\nexport type AuthResponse = {\n  uuid: string;\n  token: string;\n  ttl: number; // token ttl in second. ex) 3600 = 1 hour\n  api: string; // api server urls\n  cnl: string; // configuration and logging server url\n  fingerprint: string;\n  iceServers: Array<{\n    urls: string[];\n    username?: string;\n    credential?: string;\n  }>;\n};\ntype InternalFirstTransactionParams = {\n  version?: string;\n  serviceId: string;\n  scheme: 'internal';\n};\ntype InternalFirstTransactionError = {\n  code: number;\n  message: string;\n  data: { nonce: string };\n};\ntype InternalSecondTransactionParams = {\n  version?: string;\n  serviceId: string;\n  scheme: 'internal';\n  fingerprint?: string;\n  auth: {\n    nonce: string;\n    key: string;\n    value: string;\n  };\n};\ntype ExternalTransactionParams = {\n  version?: string;\n  serviceId: string;\n  scheme: 'external';\n  fingerprint?: string;\n  auth: {\n    value: string;\n  };\n};\ntype RefreshTokenParams = {\n  serviceId: string;\n  token: string;\n};\ntype RefreshTokenResponse = {\n  token: string;\n  ttl: number;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { HttpWithJSONRpc } from '../../utils/http-with-json-rpc';\nimport userAgentParser from '../../utils/user-agent';\nimport { SDK_VERSION } from '../../config';\nimport { Loggable } from '../../utils/logger';\nimport EventEmitter from 'eventemitter3';\nimport { ServerError } from '../../utils/error-exception';\n\nexport class RoomApiClient extends HttpWithJSONRpc {\n  private roomId!: string;\n  private participantId!: string;\n  private sign!: string;\n  protected emitter: EventEmitter;\n\n  constructor() {\n    super();\n\n    this.emitter = new EventEmitter();\n  }\n\n  @Loggable('info')\n  async setRoomId (roomId: string) {\n    this.roomId = roomId;\n  };\n\n  @Loggable('info')\n  async setParticipantId (participantId: string) {\n    this.participantId = participantId;\n  };\n\n  @Loggable('info')\n  async sendEnterRoom () {\n    const os = userAgentParser.getOS();\n    const browser = userAgentParser.getBrowser();\n\n    const method = 'Room.EnterRoom';\n    const params: EnterRoomParams = {\n      roomId: this.roomId,\n      userInfo: {\n        sdkVersion: SDK_VERSION,\n        platform: 'web',\n        platformVersion: `${browser.name}/${browser.version}`,\n        osName: os.name,\n        osVersion: os.version,\n        deviceModel: '',\n      }\n    };\n    const response = await this.request<EnterRoomResponse>({ method, params });\n\n    if ('error' in response) {\n      throw new Error(JSON.stringify(response.error));\n    }\n\n    this.sign = response.result.sign;\n    return response;\n  };\n\n  @Loggable('debug')\n  async sendCreateSession (direction: string, index: number, sdp: CreateSessionParams['desc']) {\n    const method = 'Room.CreateSession';\n    const params: CreateSessionParams = {\n      roomId: this.roomId,\n      participantId: this.participantId,\n      sign: this.sign,\n      direction,\n      index,\n      desc: sdp,\n    };\n    const response = await this.request<CreateSessionResponse>({ method, params });\n    if ('error' in response) {\n      //에러시 복구 불가능 에러로 에러 이벤트 호출\n      const error = new ServerError(response.error.code, response.error.message);\n      this.emitter.emit('error', error);\n      throw error;\n    }\n    return response;\n  };\n\n  @Loggable('debug')\n  async sendAddCandidate (direction: string, index: number, candidate: AddCandidateParams['candidate']) {\n    const method = 'Room.AddCandidate';\n    const params: AddCandidateParams = {\n      roomId: this.roomId,\n      participantId: this.participantId,\n      sign: this.sign,\n      direction,\n      index,\n      candidate,\n    };\n    const response = await this.request<AddCandidateResponse>({ method, params });\n    if ('error' in response) {\n      const error = new ServerError(response.error.code, response.error.message);\n      if(response.error.code === -23005) {\n        //에러시 복구 불가능 에러로 에러 이벤트 호출\n        this.emitter.emit('error', error);\n      }\n      throw error;\n    }\n    return response;\n  };\n\n  @Loggable('debug')\n  async sendRestartIce (direction: string, index: number, sdp: RestartIceParams['desc']) {\n    const method = 'Room.RestartIce';\n    const params: RestartIceParams = {\n      roomId: this.roomId,\n      participantId: this.participantId,\n      sign: this.sign,\n      direction,\n      index,\n      desc: sdp\n    };\n    const response = await this.request<RestartIceResponse>({ method, params });\n    if ('error' in response) {\n      const error = new ServerError(response.error.code, response.error.message);\n      if(response.error.code === -23005) {\n        //에러시 복구 불가능 에러로 에러 이벤트 호출\n        this.emitter.emit('error', error);\n      }\n      throw error;\n    }\n    return response;\n  };\n\n  @Loggable('info')\n  async sendDestroySession (direction: string, index: number) {\n    const method = 'Room.DestroySession';\n    const params: DestroySessionParams = {\n      roomId: this.roomId,\n      participantId: this.participantId,\n      sign: this.sign,\n      direction,\n      index,\n    };\n    const response = await this.request<DestroySessionResponse>({ method, params });\n    if ('error' in response) {\n      const error = new ServerError(response.error.code, response.error.message);\n      if(response.error.code === -23005) {\n        //에러시 복구 불가능 에러로 에러 이벤트 호출\n        this.emitter.emit('error', error);\n      }\n      throw error;\n    }\n    return response;\n  };\n\n  on<T = any>(name: string, callback: (eventData: T) => void) {\n    this.emitter.on(name, callback);\n  }\n}\n\ntype EnterRoomParams = {\n  roomId: string;\n  userInfo?: {\n    sdkVersion?: string;\n    platform?: string;\n    platformVersion?: string;\n    osName?: string;\n    osVersion?: string;\n    deviceModel?: string;\n  }\n};\ntype EnterRoomResponse = {\n  roomId: string;\n  participantId: string;\n  sign: string;\n};\n\ntype CreateSessionParams = {\n  roomId: string;\n  participantId: string;\n  sign: string;\n  direction: string;\n  index: number;\n  desc: RTCSessionDescriptionInit;\n};\ntype CreateSessionResponse = {\n  desc: RTCSessionDescriptionInit;\n};\n\ntype AddCandidateParams = {\n  roomId: string;\n  participantId: string;\n  sign: string;\n  direction: string;\n  index: number;\n  candidate: RTCIceCandidate;\n};\ntype AddCandidateResponse = {};\n\ntype RestartIceParams = {\n  roomId: string;\n  participantId: string;\n  sign: string;\n  direction: string;\n  index: number;\n  desc: RTCSessionDescriptionInit;\n};\ntype RestartIceResponse = CreateSessionResponse;\n\ntype DestroySessionParams = {\n  roomId: string;\n  participantId: string;\n  sign: string;\n  direction: string;\n  index: number;\n};\ntype DestroySessionResponse = {};\n","import EventEmitter from 'eventemitter3';\nimport * as jsonrpc from 'jsonrpc-lite';\nimport { ROOM_API_VERSION } from '../config';\nimport { indexer } from './indexer';\n\nexport type RequestObject = jsonrpc.RequestObject | jsonrpc.NotificationObject;\nexport type SuccessObject<T> = Omit<jsonrpc.SuccessObject, 'result'> & { result: T };\nexport type ErrorObject<T> = Omit<jsonrpc.ErrorObject, 'error'> & { error: T };\nexport type NotificationObject<T> = Omit<jsonrpc.NotificationObject, 'params'> & { params: T };\nexport type NotificationCallback<T> = (notification: NotificationObject<T>) => void;\n\ntype VersionParam = {\n  version?: string;\n};\ntype RequestParams = VersionParam & jsonrpc.RpcParams;\n\nexport class JSONRpc {\n  private emitter: EventEmitter;\n  private methodMap: Map<string, string>;\n  toStream: (payload: RequestObject) => void;\n\n  constructor() {\n    this.emitter = new EventEmitter();\n    this.methodMap = new Map();\n    this.toStream = () => console.warn('Please set toStream function!');\n  }\n\n  /**\n   * handle stringified message.\n   * parse -> emit\n   */\n  handleMessage(stringified: string) {\n    const parsedObjects = jsonrpc.parse(stringified);\n    const isArray = Array.isArray(parsedObjects);\n\n    const handleParsedObject = (parsedObject: jsonrpc.IParsedObject) => {\n      const { payload } = parsedObject;\n      const hasId = 'id' in payload;\n      const hasMethod = 'method' in payload;\n\n      if (hasId && !hasMethod) {\n        // = success or error\n        const id = String(payload.id);\n        const method = this.methodMap.get(id);\n\n        this.emitter.emit(id, payload);\n        // FIXME: 아래 꼭 필요한건지 확인할 필요 있음\n        if (method) this.emitter.emit(method, payload);\n        return;\n      }\n\n      if (hasMethod && !hasId) {\n        // = notification\n        const method = payload.method;\n        return this.emitter.emit(method, payload);\n      }\n\n      console.error('invalid message', parsedObject);\n    };\n\n    if (!isArray) {\n      handleParsedObject(parsedObjects);\n    } else {\n      parsedObjects.forEach(handleParsedObject);\n    }\n  }\n\n  /**\n   * Send json rpc message by using `toStream` function,\n   * and receive result\n   */\n  call<R = jsonrpc.Defined, E = jsonrpc.JsonRpcError>(method: string, params: RequestParams) {\n    params.version = ROOM_API_VERSION;\n    return new Promise<SuccessObject<R> | ErrorObject<E>>(resolve => {\n      const id = indexer.get().toString();\n      this.methodMap.set(id, method);\n      this.emitter.once(id, resolve);\n\n      const requestObject = jsonrpc.request(id, method, params);\n      this.toStream(requestObject);\n    });\n  }\n\n  on<T = jsonrpc.RpcParams>(method: string, callback: NotificationCallback<T>) {\n    this.emitter.on(method, callback);\n  }\n\n  off<T = jsonrpc.RpcParams>(method: string, callback: NotificationCallback<T>) {\n    this.emitter.off(method, callback);\n  }\n}\n","export const noop = () => null;\n","import EventEmitter from 'eventemitter3';\nimport { JSONRpc } from '../../utils/json-rpc';\nimport { RoomApiClient } from '../room/room-api-client';\nimport { Loggable, logger } from '../../utils/logger';\nimport { noop } from '../../utils/noop';\nimport userAgentParser from '../../utils/user-agent';\nimport { ClientError } from '../../utils/error-exception';\nimport { UpStats } from './up-session';\nimport { DownStats } from './down-session';\n\ntype SessionDirection = 'up' | 'down';\ntype ExtendRTCConfiguration = RTCConfiguration & {\n  sdpSemantics?: 'plan-b' | 'unified-plan'; \n  extmapAllowMixed?: boolean; \n};\n\nconst browser = userAgentParser.getBrowser();\n\nexport abstract class Session {\n  protected peerConnection!: RTCPeerConnection;\n  protected dataChannel!: RTCDataChannel;\n  protected emitter: EventEmitter;\n  protected jsonrpc: JSONRpc;\n  protected roomApiClient: RoomApiClient;\n  protected direction: SessionDirection;\n  index: number;\n  private restartIceInterval: number = -1;\n  config: SessionConfig = {\n    cpuOveruseDetection: true,\n    maxFramerate: {\n      l: 10,\n      m: 20,\n      h: 30\n    },\n    voiceMode: true\n  };\n\n  constructor(apiClient: RoomApiClient, direction: SessionDirection, config: SessionConfig) {\n    this.emitter = new EventEmitter();\n    this.jsonrpc = new JSONRpc();\n    this.roomApiClient = apiClient;\n    this.direction = direction;\n    this.index = 0;\n\n    Object.assign(this.config, config);\n\n    this.jsonrpc.toStream = message => {\n      if (this.dataChannel && this.dataChannel.readyState === 'open') {\n        logger.trace(`[${this.direction}] [SEND]`, message);\n        this.dataChannel.send(JSON.stringify(message));\n      }\n    };\n  }\n\n  @Loggable('info')\n  create(rtcConfig?: RTCConfiguration) {\n    return new Promise<void>((resolve, reject) => {\n      // TODO: 이벤트 네이밍 규칙적으로 설정하기\n      this.emitter.once('SessionCreated', () => {\n        resolve();\n      });\n\n      try {\n        this.createPeerConnection(rtcConfig);\n      } catch(err) {\n        const e = err as Error;\n        reject(new ClientError(1401, 'PeerConnection 생성이 실패했습니다.', e));\n      }\n\n      try {\n        this.createDataChannel();\n      } catch(err) {\n        const e = err as Error;\n        reject(new ClientError(1402, '데이터 채널 생성이 실패했습니다.', e));\n      }\n    });\n  }\n\n  @Loggable('info')\n  async destroy() {\n    this.close();\n    await this.roomApiClient.sendDestroySession(this.direction, this.index);\n  }\n\n  @Loggable('info')\n  async close() {\n    this.peerConnection.close();\n    this.dataChannel.close();\n  }\n\n  on<T = any>(name: string, callback: (eventData: T) => void) {\n    this.emitter.on(name, callback);\n  }\n\n  off<T = any>(name: string, callback: (eventData: T) => void) {\n    this.emitter.off(name, callback);\n  }\n\n  protected abstract addListeners(): void;\n\n  @Loggable('info')\n  private createPeerConnection(rtcConfig?: RTCConfiguration) {\n    if (this.peerConnection) this.peerConnection.close();\n\n    const _rtcConfig: ExtendRTCConfiguration = {\n      ...rtcConfig,\n      bundlePolicy: 'max-bundle',\n      iceTransportPolicy: 'all',\n      rtcpMuxPolicy: 'require',\n      iceCandidatePoolSize: 0,\n      sdpSemantics: 'unified-plan', \n      extmapAllowMixed: true \n    };\n\n    const opt: any = {\n      mandatory: { },\n      optional: [\n        //{ googHighStartBitrate: 0 }, //실제로 의미가 있는가?\n        //{ googPayloadPadding: true }, //추천하지 않음\n        //{ googScreencastMinBitrate: 100 }, //의미없음\n        { enableDscp: true }\n      ]\n    };\n\n    if(this.config.cpuOveruseDetection) {\n      opt.optional.push({ googCpuOveruseDetection: true });\n      opt.optional.push({ googCpuOveruseEncodeUsage: true }); \n      opt.optional.push({ googCpuUnderuseThreshold: 55 }); \n      opt.optional.push({ googCpuOveruseThreshold: 85 });\n    } else {\n      opt.optional.push({ googCpuOveruseDetection: false });\n    }\n\n    if(!this.config.voiceMode) {\n      opt.mandatory.googHighpassFilter = false;\n      opt.mandatory.googEchoCancellation = false;\n      opt.mandatory.googEchoCancellation2 = false;\n      opt.mandatory.googAutoGainControl = false;\n      opt.mandatory.googAutoGainControl2 = false;\n      opt.mandatory.googNoiseSuppression = false;\n      opt.mandatory.googNoiseSuppression2 = false;\n      opt.mandatory.googTypingNoiseDetection = false;\n      opt.mandatory.echoCancellation = false;\n    }\n\n    /* @ts-ignore */\n    this.peerConnection = new RTCPeerConnection(_rtcConfig, opt);\n\n    logger.debug(`[${this.direction}] peerConnection = ${JSON.stringify(_rtcConfig)}`);\n\n    this.peerConnection.onicecandidate = ice => {\n      if (ice.candidate) {\n        //if(ice.candidate.candidate) {\n          this.roomApiClient.sendAddCandidate(this.direction, this.index, ice.candidate);\n          logger.debug(`[${this.direction}] candidate = ${JSON.stringify(ice.candidate)}`);\n       //}\n      }\n    };\n\n    this.peerConnection.onnegotiationneeded = async () => {\n      logger.debug(`[${this.direction}] onnegotiationneeded`);\n\n      try {\n        const offer = await this.peerConnection.createOffer();\n        await this.peerConnection.setLocalDescription(offer);\n        logger.debug(`[${this.direction}] create offer = ${JSON.stringify(offer)}`);\n\n        const res = await this.roomApiClient.sendCreateSession(this.direction, this.index, offer);\n        const answer = new RTCSessionDescription(res.result.desc);\n        await this.peerConnection.setRemoteDescription(answer);\n\n        logger.debug(`[${this.direction}] receive answer = ${JSON.stringify(answer)}`);\n      } catch (err) {\n        const message = (err as Error).message;\n        logger.error(`[${this.direction}] onnegotiationneeded = ${message}`);\n      }\n    };\n\n    this.peerConnection.onconnectionstatechange = async (event: Event | any) => {\n      logger.debug(`[${this.direction}] onconnectionstatechange = ${event.target.connectionState}`);\n\n      this._restartIceTimerStop();\n\n      if(event.target.connectionState === 'disconnected') {\n        this._restartIceTimerStart();\n      } else if (event.target.connectionState === 'failed') {\n        logger.error(`[${this.direction}] onconnectionstatechange = ${event.target.connectionState}`);\n\n        //연결 실패\n        this.emitter.emit('error', new ClientError(1411, 'PeerConnection 연결 상태가 failed 입니다.'));\n      }\n    };\n\n    this.peerConnection.oniceconnectionstatechange = (event: Event | any) => {\n      logger.debug(`[${this.direction}] oniceconnectionstatechange = ${event.target.iceConnectionState}`);\n\n      if(browser.name === 'Firefox') {\n        this._restartIceTimerStop();\n\n        if(event.target.iceConnectionState === 'disconnected') {\n          this._restartIceTimerStart();\n        } else if (event.target.iceConnectionState === 'failed') {\n          logger.error(`[${this.direction}] onconnectionstatechange = ${event.target.iceConnectionState}`);\n\n          //연결 실패.\n          this.emitter.emit('error', new ClientError(1411, 'PeerConnection 연결 상태가 failed 입니다.'));\n        }\n      };\n    };\n\n    this.peerConnection.ontrack = noop;\n  }\n\n  @Loggable('info')\n  private createDataChannel() {\n    if (this.dataChannel) this.dataChannel.close();\n\n    this.dataChannel = this.peerConnection.createDataChannel(this.direction);\n\n    this.dataChannel.onopen = () => {\n      logger.debug(`[${this.direction}] dataChannel is opened`);\n    };\n    this.dataChannel.onclose = () => {\n      logger.debug(`[${this.direction}] dataChannel is closed`);\n    };\n    this.dataChannel.onerror = (evt: any) => {\n      let error = evt.error;\n      logger.error(`[${this.direction}] dataChannel occurred error. reason=${JSON.stringify(error)}`);\n    };\n\n    this.dataChannel.onmessage = async event => {\n      const message = await new Response(event.data).text();\n      logger.trace(`[${this.direction}] [RECEIVE] dataChannel.onmessage = ${message}`);\n\n      this.jsonrpc.handleMessage(message);\n    };\n  }\n\n  private _restartIceTimerStart() {\n    this.restartIceInterval = window.setInterval(()=>{\n      if(navigator.onLine) {\n        this._restartIceTimerStop();\n\n        this._restartIce();\n      }\n    }, 100);\n  }\n\n  private _restartIceTimerStop() {\n    window.clearInterval(this.restartIceInterval);\n    this.restartIceInterval = -1;\n  }\n\n  @Loggable('info')\n  private async _restartIce() {\n    try {\n      const offer = await this.peerConnection.createOffer({ iceRestart: true });\n      await this.peerConnection.setLocalDescription(offer);\n      logger.debug(`[${this.direction}](RestartICE) create offer = ${JSON.stringify(offer)}`);\n\n      const res = await this.roomApiClient.sendRestartIce(this.direction, this.index, offer);\n      const answer = new RTCSessionDescription(res.result.desc);\n      await this.peerConnection.setRemoteDescription(answer);\n\n      logger.debug(`[${this.direction}](RestartICE) receive answer = ${JSON.stringify(answer)}`);\n    } catch(err) {\n      const message = (err as Error).message;\n      logger.error(`[${this.direction}](RestartICE) onconnectionstatechange = ${message}`);\n    }\n  }\n\n  async getAllStats() {\n    const stats = await this.peerConnection.getStats();\n    const item: Stats = { };\n    stats.forEach((stat) => {\n      item[stat.id] = stat;\n    });\n\n    return item;\n  }\n\n  abstract getStats(): Promise<UpStats | DownStats>;\n}\n\nexport type Stats = {\n  [index: string]: any;\n};\n\nexport type SessionConfig = {\n  cpuOveruseDetection?: boolean;\n  maxFramerate?: {\n    l: number,\n    m: number,\n    h: number\n  },\n  voiceMode: boolean;\n};\n\nexport type CustomRTCIceCandidatePairStats = RTCIceCandidatePairStats & {\n  packetsSent: number;\n  packetsReceived: number;\n}","export const some = <K extends string | number, V>(object: Record<K, V>, fn: (value: V) => boolean): boolean => {\n  for (const key in object) {\n    if (fn(object[key])) return true;\n  }\n  return false;\n};\n\nexport const filterToArray = <K extends string | number, V>(object: Record<K, V>, fn: (value: V) => boolean): V[] => {\n  const filtered: V[] = [];\n  for (const key in object) {\n    if (fn(object[key])) filtered.push(object[key]);\n  }\n  return filtered;\n};\n\nexport const filter = <K extends string | number, V>(object: Record<K, V>, fn: (value: V) => boolean): Record<K, V> => {\n  const filtered = {} as Record<K, V>;\n  for (const key in object) {\n    if (fn(object[key])) filtered[key] = object[key];\n  }\n  return filtered;\n};\n\nexport const size = <K extends string | number, V>(object: Record<K, V>): number => {\n  return Object.keys(object).length;\n};\n\nexport const objectToArray = (object: any): any[] => {\n  return Object.values(object);\n}","import { RoomApiClient } from '../room/room-api-client';\nimport { CustomRTCIceCandidatePairStats, Session, SessionConfig } from './session';\nimport { indexer } from '../../utils/indexer';\nimport { Loggable, logger } from '../../utils/logger';\nimport { ClientError, ServerError } from '../../utils/error-exception';\nimport { objectToArray } from '../../utils/object-util';\n\n// NOTE: receiverId = transceiver.mid\n\nexport class DownSession extends Session {\n  receiverTrackMap: ReceiverTrackMap = {};\n  private fixedAudioReceiver: RTCRtpReceiver[] = []; //shared or exclusive\n  audioTransceivers: RTCRtpTransceiver[] = []; //stats의 오디오 rtp와 비교하기 위한 변수\n  oldAudioStats: DownStat[] = [];\n  oldVideoStats: DownStat[] = [];\n  oldCandidatePair: CustomRTCIceCandidatePairStats | null = null;\n  \n  constructor(roomApiClient: RoomApiClient, config: SessionConfig) {\n    super(roomApiClient, 'down', config);\n    this.addListeners();\n  }\n\n  @Loggable('info')\n  addListeners() {\n    this.jsonrpc.on<OnParticipantsInfoParams>('Room.OnParticipantsInfo', notification => {\n      const { params } = notification;\n      this.emitter.emit('ChangedParticipantsInfo', params);\n    });\n    this.jsonrpc.on<OnOfferParams>('Room.OnOffer', notification => {\n      const { params } = notification;\n      // @NOTE: negotiationId가 (system)인 경우는, addStream 호출과 상관없이 세션 생성하자마자 내려오는 이벤트이다\n      this.emitter.emit(params.negotiationId, params);\n    });\n    this.jsonrpc.on<OnErrorParams>('Room.OnError', notification => {\n      const { params } = notification;\n      if (params.negotiationId) {\n        this.emitter.emit(params.negotiationId, params);\n      }\n    });\n    this.jsonrpc.on<OnMessageParams>('Room.OnMessage', notification => {\n      const { params } = notification;\n      this.emitter.emit(params.type, params.data);\n    });\n    this.jsonrpc.on<OnStreamChangedParams>('Room.OnStreamChanged', notification => {\n      this.emitter.emit('StreamChanged', notification);\n    });\n\n    // 처음 room과 연결되면 OnOffer가 내려온다.\n    // FIXME: event name 및 로직 위치 이동(addReceiver와 같은 부분이기 때문)\n    this.emitter.on('(system)', async (params: OnOfferParams) => {\n      const { negotiationId, receivers, desc: offer } = params;\n\n      await this.peerConnection.setRemoteDescription(offer);\n\n      const answer = await this.peerConnection.createAnswer();\n      await this.peerConnection.setLocalDescription(answer);\n\n      await this.callSetAnswer({ negotiationId, desc: answer });\n\n      const transceivers = this.peerConnection.getTransceivers();\n      this.receiverTrackMap = transceivers.reduce<ReceiverTrackMap>((receiverTrackMap, transceiver) => {\n        const receiverId = transceiver.mid;\n        if (receiverId) {\n          if (transceiver.receiver.track.kind === 'video') {\n            receiverTrackMap[receiverId] = transceiver.receiver.track;\n          }\n        }\n        return receiverTrackMap;\n      }, {});\n\n      this.audioTransceivers = transceivers.filter(receiverTrackMap => receiverTrackMap.receiver.track.kind === 'audio');\n\n      this.fixedAudioReceiver = this.audioTransceivers.map(transceiver => transceiver.receiver);\n\n      const payload: OnUpdatedReceivers = {\n        name: 'init',\n        receivers,\n      };\n      this.emitter.emit('UpdatedReceivers', payload);\n    });\n  }\n\n  @Loggable('info')\n  getTrack(receiverId: string) {\n    return this.receiverTrackMap[receiverId] as MediaStreamTrack | undefined;\n  }\n\n  @Loggable('info')\n  getTracks() {\n    return objectToArray(this.receiverTrackMap);\n  }\n\n  @Loggable('info')\n  addReceiver(receivers: AddReceiverParams['receivers']) {\n    return new Promise<void>((resolve, reject) => {\n      const negotiationId = indexer.get().toString();\n\n      this.emitter.once(negotiationId, async (params: OnOfferParams | OnErrorParams) => {\n        if('code' in params) {\n          logger.error('addReceiver', params);\n          const error = new ServerError(params.code, params.message);\n          return reject(error);\n        }\n\n        try {\n          const { receivers, desc: offer } = params;\n\n          await this.peerConnection.setRemoteDescription(offer);\n\n          const answer = await this.peerConnection.createAnswer();\n          await this.peerConnection.setLocalDescription(answer);\n\n          await this.callSetAnswer({ negotiationId, desc: answer });\n\n          // update receivers\n          const transceivers = this.peerConnection.getTransceivers();\n          transceivers.reduce<ReceiverTrackMap>((receiverTrackMap, transceiver) => {\n            const receiverId = transceiver.mid;\n            const addReceiver = receivers.find(receiver => receiver.receiverId === receiverId);\n            if (addReceiver) {\n              if (transceiver.receiver.track.kind === 'video') {\n                this.receiverTrackMap[addReceiver.receiverId] = transceiver.receiver.track;\n              }\n            }\n            return receiverTrackMap;\n          }, {});\n\n          const payload: OnUpdatedReceivers = {\n            name: 'add',\n            receivers,\n          };\n          this.emitter.emit('UpdatedReceivers', payload);\n\n          resolve();\n        } catch (err) {\n          const e = err as Error;\n          const message = e.message;\n          reject(new ClientError(1448, `리시버 추가 에러(${message})`, e));\n        }\n      });\n\n      try{\n        this.callAddReceiver({ negotiationId, receivers });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  getFixedAudioReceiver(): RTCRtpReceiver[] {\n    return this.fixedAudioReceiver;\n  }\n\n  // TODO: 뭔가 어려워보이니 일단 두고보기\n  // configureReceiver(){}\n  // 실제로 사용되지 않는다.\n  @Loggable('info')\n  removeReceiver(receiverIds: string[]) {\n    return new Promise<void>((resolve, reject) => {\n      const negotiationId = indexer.get().toString();\n      const receivers = receiverIds.map(receiverId => ({ receiverId }));\n\n      this.emitter.once(negotiationId, async (params: OnOfferParams | OnErrorParams) => {\n        if('code' in params) {\n          logger.error('removeReceiver', params);\n          const error = new ServerError(params.code, params.message);\n          return reject(error);\n        }\n\n        try {\n          const { receivers, desc: offer } = params;\n\n          await this.peerConnection.setRemoteDescription(offer);\n\n          const answer = await this.peerConnection.createAnswer();\n          await this.peerConnection.setLocalDescription(answer);\n\n          await this.callSetAnswer({ negotiationId, desc: answer });\n\n          const transceivers = this.peerConnection.getTransceivers();\n          this.receiverTrackMap = transceivers.reduce<ReceiverTrackMap>((receiverTrackMap, transceiver) => {\n            const receiverId = transceiver.mid;\n            if (receiverId) {\n              if (transceiver.receiver.track.kind === 'video') {\n                receiverTrackMap[receiverId] = transceiver.receiver.track;\n              }\n            }\n            return receiverTrackMap;\n          }, {});\n\n          const payload: OnUpdatedReceivers = {\n            name: 'remove',\n            receivers,\n          };\n          this.emitter.emit('UpdatedReceivers', payload);\n\n          resolve();\n        } catch (err) {\n          const e = err as Error;\n          const message = e.message;\n          reject(new ClientError(0, message, e));\n        }\n      });\n      \n      try{\n        this.callRemoveReceiver({ negotiationId, receivers });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  @Loggable('info')\n  async assignStream(receivers: AssignStreamParams['receivers']) {\n    await this.callAssignStream({ receivers });\n  }\n\n  @Loggable('info')\n  async configureReceiver(receivers: ConfigureReceiverParams['receivers']) {\n    await this._callConfigureReceiver({ receivers });\n  }\n\n  @Loggable('info')\n  private async callAddReceiver(params: AddReceiverParams) {\n    const method = 'Room.AddReceiver';\n    const result = await this.jsonrpc.call<AddReceiverResponse>(method, params);\n    if ('error' in result) {\n      throw new ServerError(result.error.code, result.error.message);\n    }\n    return result;\n  }\n\n  @Loggable('info')\n  private async callRemoveReceiver(params: RemoveReceiverParams) {\n    const method = 'Room.RemoveReceiver';\n    const result = await this.jsonrpc.call<RemoveReceiverResponse>(method, params);\n    if ('error' in result) {\n      throw new ServerError(result.error.code, result.error.message);\n    }\n    return result;\n  }\n\n  @Loggable('debug')\n  private async callSetAnswer(params: SetAnswerParams) {\n    const method = 'Room.SetAnswer';\n    const result = await this.jsonrpc.call<SetAnswerResponse>(method, params);\n    if ('error' in result) {\n      throw new ServerError(result.error.code, result.error.message);\n    }\n    return result;\n  }\n\n  @Loggable('info')\n  private async callAssignStream(params: AssignStreamParams) {\n    const method = 'Room.AssignStream';\n    const result = await this.jsonrpc.call<AssignStreamResponse>(method, params);\n    if ('error' in result) {\n      throw new ServerError(result.error.code, result.error.message);\n    }\n    return result;\n  }\n\n  @Loggable('debug')\n  private async _callConfigureReceiver(params: ConfigureReceiverParams) {\n    const method = 'Room.ConfigureReceiver';\n    const result = await this.jsonrpc.call<ConfigureReceiverResponse>(method, params);\n    if ('error' in result) {\n      throw new ServerError(result.error.code, result.error.message);\n    }\n    return result;\n  }\n\n  async getStats(): Promise<DownStats> {\n    const transceivers = this.peerConnection.getTransceivers();\n    const _audioStats: any[] = [];\n    const _videoStats: any[] = [];\n    let candidatePair: CustomRTCIceCandidatePairStats = {} as CustomRTCIceCandidatePairStats;\n\n    for (const t of transceivers) {\n      const stats = await t.receiver.getStats();\n      const item: any = {\n        mid: t.mid,\n        items: []\n      };\n      \n      stats.forEach((stat) => {\n        item.items.push(stat);\n\n        if(stat.type === 'candidate-pair') {\n          candidatePair = stat;\n        }\n      });\n\n      if(t.receiver.track?.kind === 'audio') {\n        _audioStats.push(item);\n      } else {\n        _videoStats.push(item);\n      }\n    }\n\n    const audioStats: DownStat[] = [];\n    _audioStats.forEach((item)=>{\n      const result = {\n        mid: item.mid,\n        inboundRtp: null,\n        track: null\n      };\n      item.items.forEach((stat: any)=>{\n        if(stat.type === 'inbound-rtp') {\n          result.inboundRtp = stat;\n        } else if(stat.type === 'track') {\n          result.track = stat;\n        }\n      });\n\n      if(result.inboundRtp && result.track) {\n        audioStats.push(result);\n      }\n    });\n\n    const videoStats: DownStat[] = [];\n    _videoStats.forEach((item)=>{\n      const result = {\n        mid: item.mid,\n        inboundRtp: null,\n        track: null\n      };\n      item.items.forEach((stat: any)=>{\n        if(stat.type === 'inbound-rtp') {\n          result.inboundRtp = stat;\n        } else if(stat.type === 'track') {\n          result.track = stat;\n        }\n      });\n\n      if(result.inboundRtp && result.track) {\n        videoStats.push(result);\n      }\n    });\n\n    return {\n      audioStats,\n      videoStats,\n      candidatePair\n    };\n  }\n\n  _setOldAudioStats(stats: DownStat[]) {\n    this.oldAudioStats = stats;\n  }\n\n  _setOldVideoStats(stats: DownStat[]) {\n    this.oldVideoStats = stats;\n  }\n\n  _setOldCandidatePairStats(candidatePair: CustomRTCIceCandidatePairStats) {\n    this.oldCandidatePair = candidatePair;\n  }\n}\n\n// Room.OnParticipantsInfo\nexport type OnParticipantsInfoParams = {\n  change: {\n    fullData?: ParticipantsInfo_InitItem[];\n    streamsAdded?: ParticipantsInfo_StreamsAddedItem[];\n    streamsUpdated?: ParticipantsInfo_StreamsUpdatedItem[];\n    streamsRemoved?: ParticipantsInfo_StreamsRemovedItem[];\n    participantsEnter?: string[]; // participant ID 의 배열\n    participantsLeave?: string[]; // participant ID 의 배열\n  };\n};\n\nexport type OnStreamChangedParams = {\n  params: {\n    receiverId: string;\n    type: 'video' | 'audio';\n    participantId: string;\n    streamId: number;\n  };\n};\n\nexport type OnAudioLevelParams = {\n  lvl: number;\n  streamId: number;\n}[];\n\ntype ParticipantsInfo_InitItem = {\n  participantId: string;\n  streams?: ParticipantStream[];\n};\n\ntype ParticipantsInfo_StreamsAddedItem = {\n  participantId: string;\n} & ParticipantStream;\n\ntype ParticipantsInfo_StreamsUpdatedItem = {\n  participantId: string;\n} & Pick<ParticipantStream, 'streamId' | 'property'>;\n\ntype ParticipantsInfo_StreamsRemovedItem = {\n  participantId: string;\n} & Pick<ParticipantStream, 'streamId'>;\n\nexport type ParticipantStream = {\n  streamId: number;\n  media: 'video';\n  type: 'none' | 'single' | 'multiple';\n  extraValue?: string;\n  property: {\n    active: boolean;\n    alwaysOn?: boolean; //비디오의 경우 타입세이프를 위해 추가\n  };\n} | {\n  streamId: number;\n  media: 'audio';\n  type: 'none' | 'single';\n  extraValue?: string;\n  property: {\n    active: boolean;\n    alwaysOn?: boolean;\n  };\n};\n\n// Room.SetAnswer\ntype SetAnswerParams = {\n  negotiationId: string;\n  desc: RTCSessionDescriptionInit;\n};\ntype SetAnswerResponse = {\n  negotiationId: string;\n};\n\n// Room.AssignStream\ntype AssignStreamParams = {\n  receivers: Array<{\n    receiverId: string;\n    streamId: number;\n  }>;\n};\ntype AssignStreamResponse = {};\n\n// Room.AddReceiver\ntype AddReceiverParams = {\n  negotiationId: string;\n  receivers: Array<{\n    type: 'audio' | 'video';\n    streamId?: number;\n  }>;\n};\ntype AddReceiverResponse = {\n  negotiationId: string;\n};\n\n// Room.RemoveReceiver\ntype RemoveReceiverParams = {\n  negotiationId: string;\n  receivers: Array<{\n    receiverId: string;\n  }>;\n};\ntype RemoveReceiverResponse = {\n  negotiationId: string;\n};\n\n// Room.OnOffer\ntype OnOfferParams = {\n  negotiationId: string;\n  desc: RTCSessionDescription;\n  receivers: Receiver[];\n};\ntype Receiver = {\n  receiverId: string;\n  type: 'audio' | 'video';\n};\n\n// Room.OnError\ntype OnErrorParams = {\n  code: number;\n  message: string;\n  negotiationId?: string;\n  data?: object;\n};\n\n// Room.OnMessage\ntype OnMessageParams = {\n  type: string;\n  data?: object;\n};\n\nexport type OnUserMessageParams = {\n  sender: string;\n  message: string;\n  type: string;\n}[];\n\n// etc.\nexport type OnUpdatedReceivers = {\n  name: 'init' | 'add' | 'remove';\n  receivers: Receiver[];\n};\n\ntype ReceiverTrackMap = {\n  [receiverId: string]: MediaStreamTrack;\n};\n\ntype ConfigureReceiverParams = {\n  receivers: Array<{\n    receiverId: string;\n    pause?: boolean;\n    profile?: 'l' | 'm' | 'h';\n  }>;\n};\ntype ConfigureReceiverResponse = {};\n\ntype DownStat = {\n  mid: string;\n  inboundRtp: any;\n  track: any;\n}\n\nexport type DownStats = {\n  candidatePair: CustomRTCIceCandidatePairStats;\n  audioStats: DownStat[];\n  videoStats: DownStat[];\n};","import { RoomApiClient } from '../room/room-api-client';\nimport { CustomRTCIceCandidatePairStats, Session, SessionConfig } from './session';\nimport { indexer } from '../../utils/indexer';\nimport { Loggable, logger } from '../../utils/logger';\nimport { ClientError, ServerError } from '../../utils/error-exception';\nimport { LocalVideo } from '../local/local-video';\nimport userAgent from '../../utils/user-agent';\n\n// @FIXME: event emit/on 시 name 규칙 정하기\n\nexport class UpSession extends Session {\n  streamIdMidMap: StreamIdMidMap = {};\n  activeProfile: string = 'l';\n  oldAudioStats: UpStat[] = [];\n  oldVideoStats: UpStat[] = [];\n  oldCandidatePair: CustomRTCIceCandidatePairStats | null = null;\n\n  constructor(roomApiClient: RoomApiClient, config: SessionConfig) {\n    super(roomApiClient, 'up', config);\n\n    this.addListeners();\n  }\n\n  /**\n   * 송출 스트림 등록 요청 API. 송출 스트림은 Audio, Video 총 2개를 조합으로 요청할 수 있다.\n   */\n  @Loggable('info')\n  addStream({ audioType, audioTrack, audioExtraValue, videoType, localVideo, videoExtraValue, videoHd, record }: AddStreamOptions) {\n    return new Promise<AddStreamReturn>((resolve, reject) => {\n      const negotiationId = indexer.get().toString();\n\n      this.emitter.once(negotiationId, async (params: OnOfferParams | OnErrorParams) => {\n        if('code' in params) {\n          logger.error('addStream', params);\n          const error = new ServerError(params.code, params.message);\n          return reject(error);\n        }\n\n        try {\n          const { desc: offer, audio: audioOffer, video: videoOffer } = params;\n\n          // 1. setRemoteDescription\n          await this.peerConnection.setRemoteDescription(offer);\n\n          // 2. replace tracks\n          audioOffer && (await this._replaceAudioTrack(audioOffer, audioTrack));\n          videoOffer && (await this._replaceVideoTrack(videoOffer, localVideo));\n\n          // 3. createAnswer & setLocalDescription\n          const answer = await this.peerConnection.createAnswer();\n          await this.peerConnection.setLocalDescription(answer);\n\n          // 4. if multiple, set profiles equally\n          //if (videoOffer && videoOffer.type === 'multiple') {\n          if (videoOffer) {\n            this._setVideoProfiles(videoOffer);\n          }\n\n          // 5. call setAnswer\n          await this._callSetAnswer({ negotiationId, desc: answer });\n\n          // 6. save streamId : mid data\n          // Q. type이 none일 때, streamId와 mid는 어떻게 나타날까?\n          if (audioOffer && audioOffer.type !== 'none') {\n            const prev = this.streamIdMidMap[audioOffer.streamId] ?? {};\n            this.streamIdMidMap[audioOffer.streamId] = { ...prev, default: audioOffer.mid };\n          }\n          if (videoOffer && videoOffer.type !== 'none') {\n            videoOffer.profiles.forEach(p => {\n              const prev = this.streamIdMidMap[videoOffer.streamId] ?? {};\n              this.streamIdMidMap[videoOffer.streamId] = { ...prev, [p.profile]: p.mid };\n            });\n          }\n\n          // finally, resolve\n          resolve({ audioOffer, videoOffer });\n        } catch (err) {\n          const e = err as Error;\n          const message = e.message;\n          reject(new ClientError(1442, `스트림 추가 에러(${message})`, e));\n        }\n      });\n\n      try{\n        this._callAddStream({\n          negotiationId,\n          audio: { type: audioType, extraValue: audioExtraValue },\n          video: { type: videoType, extraValue: videoExtraValue, hd: videoHd },\n          record\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * 송출 스트림 속성 변경 API.\n   */\n  @Loggable('info')\n  async configureStream(streams: ConfigureStreamParams['streams']) {\n    await this._callConfigureStream({ streams });\n  }\n\n  @Loggable('info')\n  removeStream(streamIds: number[]) {\n    return new Promise<void>((resolve, reject) => {\n      const negotiationId = indexer.get().toString();\n      const streams = streamIds.map(streamId => ({ streamId }));\n      \n      this.emitter.once(negotiationId, async (params: OnOfferParams | OnErrorParams) => {\n        if('code' in params) {\n          logger.error('removeStream', params);\n          const error = new ServerError(params.code, params.message);\n          return reject(error);\n        }\n\n        try {\n          const { desc: offer } = params;\n          // 1. setRemoteDescription\n          await this.peerConnection.setRemoteDescription(offer);\n\n          // 2. remove tracks\n          this._removeTracks(streamIds);\n\n          // 3. createAnswer & setLocalDescription\n          const answer = await this.peerConnection.createAnswer();\n          await this.peerConnection.setLocalDescription(answer);\n\n          // 4. call setAnswer\n          await this._callSetAnswer({ negotiationId, desc: answer });\n\n          // finally, resolve\n          resolve();\n        } catch (err) {\n          const e = err as Error;\n          const message = e.message;\n          reject(new ClientError(1446, `스트림 제거 에러(${message})`, e));\n        }\n      });\n\n      try {\n        this._callRemoveStream({ negotiationId, streams });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  @Loggable('info')\n  addListeners() {\n    this.jsonrpc.on<OnOfferParams>('Room.OnOffer', notification => {\n      const { params } = notification;\n      this.emitter.emit(params.negotiationId, params);\n    });\n    this.jsonrpc.on<OnErrorParams>('Room.OnError', notification => {\n      const { params } = notification;\n      if (params.negotiationId) {\n        this.emitter.emit(params.negotiationId, params);\n      }\n    });\n    this.jsonrpc.on<OnMessageParams>('Room.OnMessage', notification => {\n      const { params } = notification;\n      this.emitter.emit(params.type, params.data);\n    });\n    this.jsonrpc.on<OnProfileParams>('Room.OnProfile', notification => {\n      const { params } = notification;\n      this._replaceVideoProfiles(params.streams);\n    });\n  }\n\n  @Loggable('debug')\n  private async _callAddStream(params: AddStreamParams) {\n    const method = 'Room.AddStream';\n    const result = await this.jsonrpc.call<AddStreamResponse>(method, params);\n    if ('error' in result) {\n      throw new ServerError(result.error.code, result.error.message);\n    }\n    return result;\n  }\n\n  @Loggable('debug')\n  private async _callSetAnswer(params: SetAnswerParams) {\n    const method = 'Room.SetAnswer';\n    const result = await this.jsonrpc.call<SetAnswerResponse>(method, params);\n    if ('error' in result) {\n      throw new ServerError(result.error.code, result.error.message);\n    }\n    return result;\n  }\n\n  @Loggable('debug')\n  private async _callConfigureStream(params: ConfigureStreamParams) {\n    const method = 'Room.ConfigureStream';\n    const result = await this.jsonrpc.call<ConfigureStreamResponse>(method, params);\n    if ('error' in result) {\n      throw new ServerError(result.error.code, result.error.message);\n    }\n    return result;\n  }\n\n  @Loggable('debug')\n  private async _callRemoveStream(params: RemoveStreamParams) {\n    const method = 'Room.RemoveStream';\n    const result = await this.jsonrpc.call<RemoveStreamResponse>(method, params);\n    if ('error' in result) {\n      throw new ServerError(result.error.code, result.error.message);\n    }\n    return result;\n  }\n\n  @Loggable('debug')\n  async _callSendMessage(params: SendMessageParams) {\n    const method = 'Room.SendMessage';\n    const result = await this.jsonrpc.call<SendMessageResponse>(method, params);\n    if ('error' in result) {\n      throw new ServerError(result.error.code, result.error.message);\n    }\n    return result;\n  }\n\n  @Loggable('debug')\n  private async _replaceAudioTrack(audioOffer: NonNullable<OnOfferParams['audio']>, audioTrack?: MediaStreamTrack) {\n    const transceivers = this.peerConnection.getTransceivers();\n\n    const audioTransceiver = transceivers.find(t => t.mid === audioOffer.mid);\n    if (audioTrack && audioTransceiver) {\n      await audioTransceiver.sender.replaceTrack(audioTrack);\n      audioTransceiver.direction = 'sendonly';\n    }\n  }\n\n  @Loggable('debug')\n  private async _replaceVideoTrack(videoOffer: NonNullable<OnOfferParams['video']>, localVideo?: LocalVideo) {\n    const transceivers = this.peerConnection.getTransceivers();\n\n    for (const profile of videoOffer.profiles) {\n      const videoTransceiver = transceivers.find(t => t.mid === profile.mid);\n      if (localVideo?.getMediaStreamTrack() && videoTransceiver) {\n        const cloneTrack = localVideo._getCloneTrack();\n        await videoTransceiver.sender.replaceTrack(cloneTrack);\n        videoTransceiver.direction = 'sendonly';\n      }\n    }\n  }\n\n  /**\n   * multiple video 스트림의 profile 활성화 상태 통지.\n   * 활성화 상태의 기본은  l = 활성, m = 비활성, h = 비활성으로 한다.\n   * 이후 \"l\"  profile을 제외하고(\"l\" profile은 항상 활성 상태) 수신측의 profile 요청이 생기거나 없어져서 상태변경이 필요할때 통지한다.\n   * 대역폭을 효율적으로 사용하기 위해 클라이언트는 이 상태 값에 Tranceiver의 송출상태를 동기화하여 관리한다.\n   */\n  @Loggable('debug')\n  private _replaceVideoProfiles(streams: OnProfileParams['streams']) {\n    const transceivers = this.peerConnection.getTransceivers();\n\n    streams.forEach(stream => {\n      stream.profiles.forEach(profile => {\n        const videoTransceiver = transceivers.find(t => t.mid === profile.mid);\n        if (videoTransceiver) {\n          const params = videoTransceiver.sender.getParameters();\n          params.encodings[0].active = profile.active;\n          videoTransceiver.sender.setParameters(params);\n\n          this.activeProfile = profile.profile;\n        }\n      });\n    });\n  }\n\n  @Loggable('debug')\n  private _removeTracks(streamIds: number[]) {\n    const transceivers = this.peerConnection.getTransceivers();\n\n    streamIds.forEach(streamId => {\n      for (const name in this.streamIdMidMap[streamId]) {\n        const mid = this.streamIdMidMap[streamId][name];\n        const transceiver = transceivers.find(t => t.mid === mid);\n        if (transceiver) {\n          this.peerConnection.removeTrack(transceiver.sender);\n          delete this.streamIdMidMap[streamId][name];\n        }\n      }\n    });\n  }\n\n  /**\n   * MultipleVideoStream의 경우 SDP Answer 생성 뒤\n   * Transceiver.sender의 bitrate 파라미터를 OnOffer의 profiles내 정보와 동일하게 세팅해야 한다.\n   */\n  @Loggable('debug')\n  private _setVideoProfiles(videoOffer: NonNullable<OnOfferParams['video']>) {\n    const transceivers = this.peerConnection.getTransceivers();\n\n    for (const profile of videoOffer.profiles) {\n      const videoTransceiver = transceivers.find(t => t.mid === profile.mid);\n      if (videoTransceiver) {\n        const params = videoTransceiver.sender.getParameters();\n        const active = profile.active;\n        const maxBitrate = Number(profile.bitrate);\n        const maxFramerate = profile.profile === 'l' ? this.config.maxFramerate?.l : profile.profile === 'm' ? this.config.maxFramerate?.m : this.config.maxFramerate?.h;\n        //const scaleResolutionDownBy = profile.profile === 'l' ? 3.0 : profile.profile === 'm' ? 2.0 : undefined;\n\n        if(userAgent.getBrowser().name === 'Safari') {\n          const settings = videoTransceiver.sender.track?.getSettings();\n          if(settings?.width) {\n            const scaleResolutionDownBy = profile.profile === 'l' ? settings.width / 240 : profile.profile === 'm' ? settings.width / 480 : settings.width / 640;\n\n            // @ts-ignore\n            params.encodings = [{ active, maxBitrate, maxFramerate, scaleResolutionDownBy }];\n          }\n        } else {\n          // @ts-ignore\n          params.encodings = [{ active, maxBitrate, maxFramerate }];\n        }\n        \n        videoTransceiver.sender.setParameters(params);\n\n        if(active) {\n          this.activeProfile = profile.profile;\n        }\n      }\n    }\n  }\n\n  async getStats(): Promise<UpStats> {\n    const transceivers = this.peerConnection.getTransceivers();\n    const _audioStats: any[] = [];\n    const _videoStats: any[] = [];\n    let candidatePair: CustomRTCIceCandidatePairStats = {} as CustomRTCIceCandidatePairStats;\n\n    for (const t of transceivers) {\n      const stats = await t.sender.getStats();\n      const item: any = {\n        mid: t.mid,\n        items: []\n      };\n      \n      stats.forEach((stat) => {\n        item.items.push(stat);\n\n        if(stat.type === 'candidate-pair') {\n          candidatePair = stat;\n        }\n      });\n\n      if(t.sender.track?.kind === 'audio') {\n        _audioStats.push(item);\n      } else {\n        _videoStats.push(item);\n      }\n    }\n\n    const audioStats: UpStat[] = [];\n    _audioStats.forEach((item)=>{\n      const result = {\n        mid: item.mid,\n        mediaSource: null,\n        outboundRtp: null,\n        track: null\n      };\n      item.items.forEach((stat: any)=>{\n        if(stat.type === 'media-source') {\n          result.mediaSource = stat;\n        } else if(stat.type === 'outbound-rtp') {\n          result.outboundRtp = stat;\n        } else if(stat.type === 'track') {\n          result.track = stat;\n        }\n      });\n\n      if(result.mediaSource && result.outboundRtp && result.track) {\n        audioStats.push(result);\n      }\n    });\n\n    const videoStats: UpStat[] = [];\n    _videoStats.forEach((item)=>{\n      const result = {\n        mid: item.mid,\n        mediaSource: null,\n        outboundRtp: null,\n        track: null\n      };\n      item.items.forEach((stat: any)=>{\n        if(stat.type === 'media-source') {\n          result.mediaSource = stat;\n        } else if(stat.type === 'outbound-rtp') {\n          result.outboundRtp = stat;\n        } else if(stat.type === 'track') {\n          result.track = stat;\n        }\n      });\n      \n      if(result.mediaSource && result.outboundRtp && result.track) {\n        videoStats.push(result);\n      }\n    });\n\n    return {\n      audioStats,\n      videoStats,\n      candidatePair\n    };\n  }\n\n  _setOldAudioStats(stats: UpStat[]) {\n    this.oldAudioStats = stats;\n  }\n\n  _setOldVideoStats(stats: UpStat[]) {\n    this.oldVideoStats = stats;\n  }\n\n  _setOldCandidatePairStats(candidatePair: CustomRTCIceCandidatePairStats) {\n    this.oldCandidatePair = candidatePair;\n  }\n}\n\ntype StreamIdMidMap = {\n  [streamId: number]: {\n    [name: string]: string;\n  };\n};\n\ntype OnOfferParams = {\n  negotiationId: string;\n  desc: RTCSessionDescription;\n  audio?: {\n    streamId: number;\n    type: AudioTrackType;\n    mid: string; // 오디오 스트림을 전송할 WebRTC Transceiver Mid 정보\n  };\n  video?: {\n    streamId: number;\n    type: VideoTrackType;\n    profiles: Array<{\n      mid: string; // 비디오 스트림을 전송할 WebRTC Transceiver Mid 정보. mid = media id\n      profile: VideoProfile;\n      bitrate: string; // 비디오 송출 비트레이트. \"\"이면 무시한다.\n      active: boolean;\n    }>;\n  };\n};\ntype VideoProfile = '' | 'l' | 'm' | 'h';\n\ntype OnErrorParams = {\n  code: number;\n  message: string;\n  negotiationId?: string;\n  data?: object;\n};\n\nexport type AudioTrackType = 'none' | 'single';\nexport type VideoTrackType = 'none' | 'single' | 'multiple';\n\ntype AddStreamOptions = {\n  audioType: AudioTrackType;\n  audioTrack?: MediaStreamTrack;\n  audioExtraValue?: string;\n  videoType: VideoTrackType;\n  localVideo?: LocalVideo;\n  videoExtraValue?: string;\n  videoHd?: boolean;\n  record: boolean\n};\ntype AddStreamParams = {\n  negotiationId: string;\n  audio: {\n    type: AudioTrackType;\n    extraValue?: string;\n  };\n  video: {\n    type: VideoTrackType;\n    extraValue?: string;\n    hd?: boolean;\n  };\n  record: boolean;\n};\ntype AddStreamResponse = {\n  negotiationId: string;\n};\ntype AddStreamReturn = {\n  audioOffer: OnOfferParams['audio'];\n  videoOffer: OnOfferParams['video'];\n};\n\ntype SetAnswerParams = {\n  negotiationId: string;\n  desc: RTCSessionDescriptionInit;\n};\ntype SetAnswerResponse = {\n  negotiationId: string;\n};\n\ntype ConfigureStreamParams = {\n  streams: Array<{\n    streamId: number;\n    active?: boolean;\n    alwaysOn?: boolean;\n  }>;\n};\ntype ConfigureStreamResponse = {};\n\ntype RemoveStreamParams = {\n  negotiationId: string;\n  streams: Array<{\n    streamId: number;\n  }>;\n};\ntype RemoveStreamResponse = {\n  negotiationId: string;\n};\n\ntype SendMessageParams = {\n  targets: string[];\n  message: string;\n  type: string;\n};\ntype SendMessageResponse = {\n  \n};\n\ntype OnMessageParams = {\n  type: string;\n  data?: object;\n};\n\ntype OnProfileParams = {\n  streams: Array<{\n    streamId: number;\n    profiles: Array<{\n      profile: VideoProfile;\n      active: boolean;\n      mid: string;\n    }>;\n  }>;\n};\n\ntype UpStat = {\n  mid: string;\n  mediaSource: any;\n  outboundRtp: any;\n  track: any;\n}\n\nexport type UpStats = {\n  candidatePair: CustomRTCIceCandidatePairStats;\n  audioStats: UpStat[];\n  videoStats: UpStat[];\n};","import { Loggable } from \"../../utils/logger\";\n\nexport abstract class Remote {\n  extraValue: string = '';\n  participantId: string = '';\n\n  constructor(participantId: string) {\n    this.participantId = participantId;\n  }\n\n  @Loggable('info')\n  getParticipantId() {\n    return this.participantId;\n  }\n\n  @Loggable('info')\n  getExtraValue() {\n    return this.extraValue;\n  }\n\n  @Loggable('info')\n  _setExtraValue(extraValue: string = '') {\n    this.extraValue = extraValue;\n  }\n\n  @Loggable('debug')\n  _setParticipantId(participantId: string) {\n    this.participantId = participantId;\n  }\n}\n\nexport type StatusUpdateFn = (config: { receiverId: string; pause?: boolean; profile?: 'l' | 'm' | 'h' }) => Promise<void>;","import { ClientError } from '../../utils/error-exception';\nimport { Loggable } from '../../utils/logger';\nimport { RemoteParticipant } from '../participant/remote-participant';\nimport { ParticipantStream } from '../session/down-session';\nimport { VideoTrackType } from '../session/up-session';\nimport { Remote, StatusUpdateFn } from './remote';\n\nexport class RemoteVideo extends Remote{\n  type: VideoTrackType = 'none';\n  extraValue: string = '';\n  videoElements: HTMLVideoElement[];\n  mediaStreamTrack?: MediaStreamTrack;\n  videoId: number = -1;\n  receiverId: string = '';\n  paused: boolean = false; //내가 수신하지 않음\n  active: boolean = true; //해당 참여자가 자신의 비디오의 active를 변경함\n  profile: 'l' | 'm' | 'h' = 'l';\n  statusUpdateFn: StatusUpdateFn = () => Promise.resolve();\n\n  constructor(stream: ParticipantStream, participant: RemoteParticipant) {\n    super(participant.id);\n\n    this.videoId = stream.streamId;\n    this.videoElements = [];\n\n    this.type = stream.type;\n    this.extraValue = stream.extraValue || '';\n  }\n\n  get isEnabled() {\n    return this.mediaStreamTrack?.enabled;\n  }\n\n  @Loggable('info')\n  _setType(type: VideoTrackType) {\n    this.type = type;\n  }\n\n  @Loggable('info')\n  _setRemoteTrack(mediaStreamTrack: MediaStreamTrack) {\n    this.mediaStreamTrack = mediaStreamTrack;\n  }\n\n  @Loggable('info')\n  attach(element: HTMLVideoElement | undefined = undefined) {\n    if(!this.mediaStreamTrack) {\n      return;\n    }\n    let videoElement;\n    if(element) {\n      videoElement = element;\n    } else {\n      videoElement = document.createElement('video');\n    }\n\n    const mediaStream = this.getMediaStream();\n    videoElement.srcObject = mediaStream ? mediaStream : null;\n    videoElement.autoplay = true;\n    videoElement.playsInline = true;\n    this.videoElements.push(videoElement);\n    return videoElement;\n  }\n\n  @Loggable('info')\n  detach() {\n    this.videoElements.forEach(element => element.remove());\n    this.videoElements = [];\n  }\n\n  @Loggable('info')\n  getMediaStreamTrack() {\n    return this.mediaStreamTrack;\n  }\n\n  @Loggable('info')\n  getMediaStream() {\n    if(this.mediaStreamTrack) {\n      return new MediaStream([this.mediaStreamTrack]);\n    }\n  }\n\n  @Loggable('info')\n  getVideoId() {\n    return this.videoId;\n  }\n\n  @Loggable('info')\n  _setVideoId(streamId: number) {\n    this.videoId = streamId;\n  }\n\n  @Loggable('debug')\n  _setReceiverId(receiverId: string, statusUpdateFn: StatusUpdateFn) {\n    this.receiverId = receiverId;\n    this.statusUpdateFn = statusUpdateFn;\n  }\n\n  @Loggable('info')\n  _setActive(enabled: boolean) {\n    this.active = enabled;\n  }\n\n  @Loggable('info')\n  async setPaused(enabled: boolean) {\n    if(this.mediaStreamTrack) {\n      enabled = typeof enabled === 'boolean' ? enabled : true;\n\n      this.paused = enabled;\n      if (enabled !== this.mediaStreamTrack.enabled) {\n        this.mediaStreamTrack.enabled = enabled;\n        await this.statusUpdateFn({\n          receiverId: this.receiverId,\n          pause: enabled,\n        });\n      }\n    }\n  }\n\n  @Loggable('info')\n  async setQuality(quality: 'l' | 'm' | 'h') {\n    if(quality !== 'l' && quality !== 'm' && quality !== 'h') {\n      throw new ClientError(1207, \"비디오 품질 변경 인자는 'l', 'm', ''h 중 하나여야 합니다.\");\n    }\n    if (quality) {      \n      this.profile = quality;\n      await this.statusUpdateFn({\n        receiverId: this.receiverId,\n        profile: quality,\n      });\n    }\n  }\n}","import { Loggable } from \"../../utils/logger\";\nimport { RemoteParticipant } from \"../participant/remote-participant\";\nimport { ParticipantStream } from \"../session/down-session\";\nimport { AudioTrackType } from \"../session/up-session\";\nimport { Remote } from \"./remote\";\n\nexport class RemoteAudio extends Remote {\n  type: AudioTrackType = 'none';\n  extraValue: string = '';\n  audioId: number = -1;\n  receiverId: string = '';\n  isAlwaysOn?: boolean;\n  active: boolean = true; //해당 참여자가 자신의 오디오의 active를 변경함\n\n  constructor(stream: ParticipantStream, participant: RemoteParticipant) {\n    super(participant.id);\n\n    this.audioId = stream.streamId;\n    this.type = stream.type as AudioTrackType;\n    this.extraValue = stream.extraValue as string;\n    this.isAlwaysOn = stream.property.alwaysOn;\n    this.active = stream.property.active;\n  }\n\n  @Loggable('info')\n  getAudioId() {\n    return this.audioId;\n  }\n\n  @Loggable('debug')\n  _setReceiverId(receiverId: string) {\n    this.receiverId = receiverId;\n  }\n\n  @Loggable('info')\n  _setAlwaysOn(alwaysOn?: boolean) {\n    this.isAlwaysOn = alwaysOn;\n  }\n\n  @Loggable('info')\n  _setActive(active: boolean) {\n    this.active = active;\n  }\n}\n","import { filterToArray, some, objectToArray } from '../../utils/object-util';\nimport { ParticipantStream } from '../session/down-session';\nimport { RemoteVideo } from '../remote/remote-video';\nimport { RemoteAudio } from '../remote/remote-audio';\nimport { Loggable } from '../../utils/logger';\n\nexport class RemoteParticipant {\n  id: string;\n  streamIdMap: StreamIdMap = {};\n  audioMap: RemoteAudioMap = {};\n  videoMap: RemoteVideoMap = {};\n  getTrackFn: GetRemoteVideoMediaStreamTrackFn; // @NOTE: down session에서 갖고 있는 track을 가져오기 위한 함수\n\n  constructor(participantId: string, trackFn: GetRemoteVideoMediaStreamTrackFn, streams: ParticipantStream[] = []) {\n    this.id = participantId;\n    this.getTrackFn = trackFn;\n    this.streamIdMap = streams.reduce<StreamIdMap>((streamIdMap, stream) => {\n      streamIdMap[stream.streamId] = stream;\n      if(stream.media === 'video') {\n        this.videoMap[stream.streamId] = new RemoteVideo(stream, this);\n      } else if(stream.media === 'audio') {\n        this.audioMap[stream.streamId] = new RemoteAudio(stream, this);\n      }\n      return streamIdMap;\n    }, {});\n  }\n\n  get hasAudio() {\n    return some(this.streamIdMap, s => s.media === 'audio');\n  }\n  \n  get hasVideo() {\n    return some(this.streamIdMap, s => s.media === 'video');\n  }\n\n  get audios() {\n    const remoteAudios = objectToArray(this.audioMap);\n    return remoteAudios;\n  }\n\n  get videos() {\n    const remoteVideos = objectToArray(this.videoMap);\n    return remoteVideos;\n  }\n\n  get isEnabledVideo() {\n    return some(this.streamIdMap, s => s.media === 'video' && s.property.active);\n  }\n\n  get isEnabledAudio() {\n    return some(this.streamIdMap, s => s.media === 'audio' && s.property.active);\n  }\n\n  @Loggable('debug')\n  _getSubscribedStreamIds() {\n    return this._getFilterStreamIds().assigned;\n  }\n\n  @Loggable('debug')\n  _getUnsubscribedStreamIds() {\n    return this._getFilterStreamIds().notAssigned;\n  }\n\n  @Loggable('info')\n  getSubscribedVideos(): RemoteVideo[] {\n    const videoStreams = this._getFilterStreams().assigned;\n    const videos = videoStreams.map(stream => this.videoMap[stream.streamId]);\n    return videos;\n  }\n\n  @Loggable('info')\n  getUnsubscribedVideos(): RemoteVideo[] {\n    const videoStreams = this._getFilterStreams().notAssigned;\n    const videos = videoStreams.map(stream => this.videoMap[stream.streamId]);\n    return videos;\n  }\n\n  @Loggable('debug')\n  getAudio(streamId: number): RemoteAudio {\n    return this.audioMap[streamId];\n  }\n\n  @Loggable('debug')\n  getVideo(streamId: number): RemoteVideo {\n    return this.videoMap[streamId];\n  }\n\n  @Loggable('debug')\n  private _getVideoStreamIdAll(): number[] {\n    const streamIds = filterToArray(this.streamIdMap, s => s.media === 'video').map(s => s.streamId);\n    return streamIds;\n  }\n\n  @Loggable('debug')\n  private _getVideoStreamAll(): ParticipantStream[] {\n    const streams = filterToArray(this.streamIdMap, s => s.media === 'video');\n    return streams;\n  }\n\n  @Loggable('debug')\n  private _getFilterStreamIds() {\n    const videoStreams = this._getVideoStreamIdAll();\n    const videoTracks = videoStreams.map(id => this.getTrackFn(id));\n    return {\n      assigned: videoStreams.filter((_, i) => !!videoTracks[i]),\n      notAssigned: videoStreams.filter((_, i) => !videoTracks[i]),\n    };\n  }\n\n  @Loggable('debug')\n  private _getFilterStreams() {\n    const videoStreams = this._getVideoStreamAll();\n    const videoTracks = videoStreams.map(stream => this.getTrackFn(stream.streamId));\n    return {\n      assigned: videoStreams.filter((_, i) => !!videoTracks[i]),\n      notAssigned: videoStreams.filter((_, i) => !videoTracks[i]),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  @Loggable('debug')\n  _addStream(stream: ParticipantStream) {\n    this.streamIdMap[stream.streamId] = stream;\n    if(stream.media === 'video') {\n      this.videoMap[stream.streamId] = new RemoteVideo(stream, this);\n    } else if(stream.media === 'audio') {\n      this.audioMap[stream.streamId] = new RemoteAudio(stream, this);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  @Loggable('debug')\n  _updateStream({ streamId, property }: Pick<ParticipantStream, 'streamId' | 'property'>) {\n    const next = { ...this.streamIdMap[streamId], property };\n    this.streamIdMap[streamId] = next;\n  }\n\n  /**\n   * @internal\n   */\n  @Loggable('debug')\n  _removeStream(streamId: number) {\n    delete this.streamIdMap[streamId];\n    delete this.videoMap[streamId];\n    delete this.audioMap[streamId];\n  }\n}\n\ntype StreamIdMap = {\n  [streamId: ParticipantStream['streamId']]: ParticipantStream;\n};\ntype RemoteAudioMap = {\n  [streamId: ParticipantStream['streamId']]: RemoteAudio;\n};\ntype RemoteVideoMap = {\n  [streamId: ParticipantStream['streamId']]: RemoteVideo;\n};\n\nexport type GetRemoteVideoMediaStreamTrackFn = (streamId: number) => MediaStreamTrack | undefined;\n","import { LocalAudio } from '../local/local-audio';\nimport { LocalVideo } from '../local/local-video';\nimport { ParticipantStream } from '../session/down-session';\nimport { objectToArray } from '../../utils/object-util';\nimport { Loggable } from '../../utils/logger';\n\nexport class LocalParticipant {\n  id: string = '';\n\n  audioMap: LocalAudioMap = {};\n  videoMap: LocalVideoMap = {};\n\n  get hasAudio() {\n    return objectToArray(this.audioMap).length > 0;\n  }\n\n  get hasVideo() {\n    return objectToArray(this.videoMap).length > 0;\n  }\n\n  @Loggable('info')\n  _setLocalAudio(audio: LocalAudio) {\n    this.audioMap[audio.streamId] = audio;\n  }\n\n  @Loggable('info')\n  _setLocalVideo(video: LocalVideo) {\n    this.videoMap[video.streamId] = video;\n  }\n\n  @Loggable('info')\n  getAudio(streamId: number): LocalAudio | null {\n    return this.audioMap[streamId] || null;\n  }\n\n  @Loggable('info')\n  getVideo(streamId: number): LocalVideo | null {\n    return this.videoMap[streamId] || null;\n  }\n\n  @Loggable('info')\n  _setLocalParticipantId(participantId: string) {\n    this.id = participantId;\n  }\n\n  @Loggable('info')\n  stop() {\n    objectToArray(this.audioMap).forEach(audio => audio.stop());\n    objectToArray(this.videoMap).forEach(video => video.stop());\n  }\n\n  /**\n   * @internal\n   */\n  @Loggable('debug')\n   _removeStream(streamId: number) {\n    delete this.audioMap[streamId];\n    delete this.videoMap[streamId];\n  }\n}\n\ntype LocalAudioMap = {\n  [streamId: ParticipantStream['streamId']]: LocalAudio;\n};\ntype LocalVideoMap = {\n  [streamId: ParticipantStream['streamId']]: LocalVideo;\n};","import { Loggable } from \"../../utils/logger\";\n\nexport abstract class Local {\n  extraValue?: string;\n  protected mediaStreamTrack: MediaStreamTrack;\n  streamId: number = -1;\n  protected statusUpdateFn: StatusUpdateFn = () => Promise.resolve();\n\n  constructor(mediaStreamTrack: MediaStreamTrack, extraValue?: string) {\n    this.mediaStreamTrack = mediaStreamTrack;\n\n    this.extraValue = extraValue;\n  }\n\n  get isEnabled() {\n    return this.mediaStreamTrack.enabled;\n  }\n\n  get kind() {\n    return this.mediaStreamTrack.kind;\n  }\n\n  @Loggable('debug')\n  getMediaStreamTrack() {\n    return this.mediaStreamTrack;\n  }\n\n  @Loggable('debug')\n  getMediaStream() {\n    return new MediaStream([this.mediaStreamTrack]);\n  }\n\n  @Loggable('info')\n  getStreamId() {\n    return this.streamId;\n  }\n\n  @Loggable('info')\n  getExtraValue() {\n    return this.extraValue;\n  }\n\n  @Loggable('info')\n  setExtraValue (value: string) {\n    this.extraValue = value;\n  }\n\n  @Loggable('info')\n  async setEnabled(enabled: boolean) {\n    enabled = typeof enabled === 'boolean' ? enabled : true;\n    if (enabled !== this.mediaStreamTrack.enabled) {\n      this.mediaStreamTrack.enabled = enabled;\n      await this.statusUpdateFn({\n        streamId: this.streamId,\n        active: enabled,\n      });\n    }\n  }\n\n  abstract stop(): void;\n\n  /**\n   * @internal mute on/off 정보를 미디어 서버에 반영하기 위한 setup\n   */\n  _setStreamId(streamId: number, statusUpdateFn: StatusUpdateFn) {\n    this.streamId = streamId;\n    this.statusUpdateFn = statusUpdateFn;\n  }\n}\n\nexport type StatusUpdateFn = (config: { streamId: number; active?: boolean; alwaysOn?: boolean }) => Promise<void>;\n","import { Loggable } from '../../utils/logger';\nimport { VideoTrackType } from '../session/up-session';\nimport { Local } from './local';\n\nexport class LocalVideo extends Local {\n  videoElements: HTMLVideoElement[];\n  type: VideoTrackType;\n  hd: boolean = false;\n  cloneMediaStreamTracks: MediaStreamTrack[];\n\n  constructor(mediaStreamTrack: MediaStreamTrack, type: VideoTrackType, extraValue?: string) {\n    super(mediaStreamTrack, extraValue);\n    this.type = type;\n    this.videoElements = [];\n    this.cloneMediaStreamTracks = [];\n  }\n\n  @Loggable('debug')\n  attach(element: HTMLVideoElement | undefined = undefined) {\n    if(!this.mediaStreamTrack) {\n      return;\n    }\n    let videoElement;\n    if(element) {\n      videoElement = element;\n    } else {\n      videoElement = document.createElement('video');\n    }\n\n    const mediaStream = this.getMediaStream();\n    videoElement.srcObject = mediaStream ? mediaStream : null;\n    videoElement.autoplay = true;\n    videoElement.playsInline = true;\n    this.videoElements.push(videoElement);\n    return videoElement;\n  }\n\n  @Loggable('debug')\n  detach() {\n    this.videoElements.forEach(element => element.remove());\n    this.videoElements = [];\n  }\n\n  @Loggable('info')\n  stop() {\n    this.mediaStreamTrack.stop();\n    this.cloneMediaStreamTracks.forEach(track => track.stop());\n\n    this.cloneMediaStreamTracks = [];\n  }\n\n  @Loggable('info')\n  setHd(enabled: boolean) {\n    this.hd = enabled;\n  }\n\n  @Loggable('debug')\n  _getCloneTrack() {\n    const cloneTrack = this.getMediaStreamTrack().clone();\n    this.cloneMediaStreamTracks.push(cloneTrack);\n    return cloneTrack;\n  }\n}\n","import { Loggable } from '../../utils/logger';\nimport { AudioTrackType } from '../session/up-session';\nimport { Local } from './local';\n\nexport class LocalAudio extends Local {\n  type: AudioTrackType;\n  isAlwaysOn: boolean = false;\n\n  constructor(mediaStreamTrack: MediaStreamTrack, type: AudioTrackType, extraValue?: string) {\n    super(mediaStreamTrack, extraValue);\n    this.type = type;\n  }\n\n  @Loggable('info')\n  stop() {\n    this.mediaStreamTrack.stop();\n  }\n\n  @Loggable('info')\n  async setAlwaysOn(enabled: boolean) {\n    this.isAlwaysOn = typeof enabled === 'boolean' ? enabled : true;\n    await this.statusUpdateFn({\n      streamId: this.streamId,\n      alwaysOn: this.isAlwaysOn,\n    });\n  }\n}\n","import { ClientError } from '../../utils/error-exception';\nimport { logger, Loggable } from '../../utils/logger';\nimport { Room } from '../room/room';\nimport { LocalAudio } from './local-audio';\nimport { LocalVideo } from './local-video';\n\nclass LocalMedia {\n  room: Room | null = null;\n  constraints: MediaStreamConstraints;\n  audio: LocalAudio | undefined = undefined;\n  video: LocalVideo | undefined = undefined;\n\n  constructor(constraints: MediaStreamConstraints = {}) {\n    if(constraints.video) {\n      if(constraints.video === true) constraints.video = {};\n    }\n\n    if(constraints.audio) {\n      if(constraints.audio === true) constraints.audio = {};\n    }\n    this.constraints = constraints;\n  }\n\n  @Loggable('debug')\n  async getDevices(): Promise<MediaDeviceInfo[]> {\n    return await navigator.mediaDevices.enumerateDevices();\n  }\n\n  @Loggable('debug')\n  async getMicDevices(): Promise<MediaDeviceInfo[]> {\n    return (await this.getDevices()).filter(device => device.kind === 'audioinput' && device.deviceId);\n  }\n\n  @Loggable('debug')\n  async getSpeakerDevices(): Promise<MediaDeviceInfo[]> {\n    return (await this.getDevices()).filter(device => device.kind === 'audiooutput' && device.deviceId);\n  }\n\n  @Loggable('debug')\n  async getCameraDevices(): Promise<MediaDeviceInfo[]> {\n    return (await this.getDevices()).filter(device => device.kind === 'videoinput' && device.deviceId);\n  }\n\n  @Loggable('info')\n  async switchCamera(deviceId: string) {\n    if(this.constraints) {\n      if(this.constraints.video) {\n        this.constraints.video = Object.assign(this.constraints.video, { deviceId: { exact: deviceId } });\n\n        if(this.room && this.video) {\n          this.video.stop();\n          await this.room.unpublish([this.video]);\n        }\n\n        let mediaStream: MediaStream;\n        try {\n          mediaStream = await navigator.mediaDevices.getUserMedia({\n            video: this.constraints.video,\n            audio: false\n          });\n        } catch(err) {\n          const e = err as Error;\n          const message = e.message;\n          logger.error('Failed to switchCamera. ', e.name, message);\n    \n          throw new ClientError(1203, `getUserMedia 실패(${message})`, e);\n        }\n\n        const [videoTrack] = mediaStream.getVideoTracks();\n        if(videoTrack) {\n          if(videoTrack.readyState === 'ended') {\n            throw new ClientError(1206, '비디오 트랙을 획득했지만 종료 상태입니다.'); \n          }\n          \n          this.video = new LocalVideo(videoTrack, 'multiple');\n          logger.debug('switch video track', 'id=' + videoTrack.id, 'label=' + videoTrack.label, 'enabled=' + videoTrack.enabled, 'kind=' + videoTrack.kind, 'muted=' + videoTrack.muted, 'readyState=' + videoTrack.readyState);\n\n          if(this.room) await this.room.publish([this.video]);\n        }\n      }\n    }\n  }\n\n  @Loggable('info')\n  async switchMic(deviceId: string) {\n    if(this.constraints) {\n      if(this.constraints.audio) {\n        this.constraints.audio = Object.assign(this.constraints.audio, { deviceId: { exact: deviceId } });\n\n        if(this.room && this.audio) {\n          this.audio.stop();\n          await this.room.unpublish([this.audio]);\n        }\n        \n        let mediaStream: MediaStream;\n        try {\n          mediaStream = await navigator.mediaDevices.getUserMedia({\n            video: false,\n            audio: this.constraints.audio\n          });\n        } catch(err) {\n          const e = err as Error;\n          const message = e.message;\n          logger.error('Failed to switchMic. ', e.name, message);\n    \n          throw new ClientError(1203, `getUserMedia 실패(${message})`, e);\n        }\n        const [audioTrack] = mediaStream.getAudioTracks();\n\n        if(audioTrack) {\n          if(audioTrack.readyState === 'ended') {\n            throw new ClientError(1205, '오디오 트랙을 획득했지만 종료 상태입니다.'); \n          }\n\n          this.audio = new LocalAudio(audioTrack, 'single');\n          logger.debug('switch audio track', 'id=' + audioTrack.id, 'label=' + audioTrack.label, 'enabled=' + audioTrack.enabled, 'kind=' + audioTrack.kind, 'muted=' + audioTrack.muted, 'readyState=' + audioTrack.readyState);\n\n          if(this.room) await this.room.publish([this.audio]);\n        }\n      }\n    }\n  }\n\n  @Loggable('info')\n  async _getUserMedia() {\n    this.stop();\n\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia(this.constraints);\n      const [audioTrack] = mediaStream.getAudioTracks();\n      const [videoTrack] = mediaStream.getVideoTracks();\n\n      logger.debug('got mediaStream', 'id=' + mediaStream.id, 'active=' + mediaStream.active);\n      \n      if(audioTrack) {\n        logger.debug('got audio track', 'id=' + audioTrack.id, 'label=' + audioTrack.label, 'enabled=' + audioTrack.enabled, 'kind=' + audioTrack.kind, 'muted=' + audioTrack.muted, 'readyState=' + audioTrack.readyState);\n\n        if(audioTrack.readyState === 'ended') {\n          throw new ClientError(1205, '오디오 트랙을 획득했지만 종료 상태입니다.'); \n        }\n      }\n\n      if(videoTrack) {\n        logger.debug('got video track', 'id=' + videoTrack.id, 'label=' + videoTrack.label, 'enabled=' + videoTrack.enabled, 'kind=' + videoTrack.kind, 'muted=' + videoTrack.muted, 'readyState=' + videoTrack.readyState);\n\n        if(videoTrack.readyState === 'ended') {\n          throw new ClientError(1206, '비디오 트랙을 획득했지만 종료 상태입니다.'); \n        }\n      }\n\n      this.audio = audioTrack ? new LocalAudio(audioTrack, 'single') : undefined;\n      this.video = videoTrack ? new LocalVideo(videoTrack, 'multiple') : undefined;\n    } catch(err) {\n      const e = err as Error;\n      const message = e.message;\n      logger.error('Failed to getUserMedia. ', e.name, message);\n\n      throw new ClientError(1203, `getUserMedia 실패(${message})`, e);\n    }\n  }\n\n  @Loggable('info')\n  stop() {\n    this.audio?.stop();\n    this.video?.stop();\n  }\n\n  _setRoom(room: Room) {\n    this.room = room;\n  }\n\n  @Loggable('info')\n  setMediaStream(mediaStream: MediaStream) {\n    const [audioTrack] = mediaStream.getAudioTracks();\n    const [videoTrack] = mediaStream.getVideoTracks();\n\n    this.audio = audioTrack ? new LocalAudio(audioTrack, 'single') : undefined;\n    this.video = videoTrack ? new LocalVideo(videoTrack, 'multiple') : undefined; \n\n    if(audioTrack) logger.debug('set media stream track', 'id=' + audioTrack.id, 'label=' + audioTrack.label, 'enabled=' + audioTrack.enabled, 'kind=' + audioTrack.kind, 'muted=' + audioTrack.muted, 'readyState=' + audioTrack.readyState);\n    if(videoTrack) logger.debug('set media stream track', 'id=' + videoTrack.id, 'label=' + videoTrack.label, 'enabled=' + videoTrack.enabled, 'kind=' + videoTrack.kind, 'muted=' + videoTrack.muted, 'readyState=' + videoTrack.readyState);\n  }\n}\n\nexport { LocalMedia };","import { Loggable } from \"../../utils/logger\";\n\nexport class RemoteAudioElements {\n  audioElements: HTMLAudioElement[];\n  audioReceivers: RTCRtpReceiver[] = [];\n\n  constructor() {\n    this.audioElements = [];\n  }\n\n  @Loggable('debug')\n  _setReceivers(audioReceivers: RTCRtpReceiver[]) {\n    this.audioReceivers = audioReceivers;\n  }\n\n  @Loggable('debug')\n  attach() {\n    const audioElements = this.audioReceivers.map((audioReceiver: RTCRtpReceiver)=>{\n      const audioElement = document.createElement('audio');\n      audioElement.srcObject = this._getMediaStream(audioReceiver);\n      audioElement.autoplay = true;\n      return audioElement;\n    });\n    this.audioElements = this.audioElements.concat(audioElements);\n\n    return this.audioElements;\n  }\n\n  @Loggable('debug')\n  detach() {\n    this.audioElements.forEach(element => element.remove());\n    this.audioElements = [];\n  }\n\n  @Loggable('debug')\n  _getMediaStream(audioReceiver: RTCRtpReceiver): MediaStream {\n    const ms = new MediaStream();\n    ms.addTrack(audioReceiver.track);\n    return ms;\n  }\n\n  @Loggable('info')\n  stop() {\n    this.audioReceivers.forEach(audioReceiver => audioReceiver.track.stop());\n  }\n}\n","import { ClientError } from '../../utils/error-exception';\nimport { Loggable, logger } from '../../utils/logger';\nimport { Room } from '../room/room';\nimport { LocalAudio } from './local-audio';\nimport { LocalVideo } from './local-video';\n\nclass LocalScreen {\n  room: Room | null = null;\n  constraints: MediaStreamConstraints;\n  audio: LocalAudio | undefined = undefined;\n  video: LocalVideo | undefined = undefined;\n\n  constructor(constraints: MediaStreamConstraints = {}) {\n    if(constraints.video) {\n      if(constraints.video === true) constraints.video = {};\n    }\n\n    if(constraints.audio) {\n      if(constraints.audio === true) constraints.audio = {};\n    }\n    this.constraints = constraints;\n  }\n\n  @Loggable('debug')\n  async switchDisplay() {\n    if(this.constraints) {\n      if(this.constraints.video) {\n\n        if(this.room && this.video) {\n          await this.room.unpublish([this]);\n        }\n\n        await this._getDisplayMedia();\n\n        if(this.room && this.video)\n          this.room.publish([this]);\n      }\n    }\n  }\n\n  @Loggable('info')\n  async _getDisplayMedia () {\n    this.stop();\n    \n    try {\n      const mediaStream = await navigator.mediaDevices.getDisplayMedia(this.constraints);\n    \n      const [audioTrack] = mediaStream.getAudioTracks();\n      const [videoTrack] = mediaStream.getVideoTracks();\n\n      this.audio = audioTrack ? new LocalAudio(audioTrack, 'single') : undefined;\n      this.video = videoTrack ? new LocalVideo(videoTrack, 'single') : undefined;\n\n      logger.debug('got display stream', 'id=' + mediaStream.id, 'active=' + mediaStream.active);\n\n      if(audioTrack) {\n        logger.debug('got display audio track', 'id=' + audioTrack.id, 'label=' + audioTrack.label, 'enabled=' + audioTrack.enabled, 'kind=' + audioTrack.kind, 'muted=' + audioTrack.muted, 'readyState=' + audioTrack.readyState);\n\n        if(audioTrack.readyState === 'ended') {\n          throw new ClientError(1205, '오디오 트랙을 획득했지만 종료 상태입니다.'); \n        }\n      }\n\n      if(videoTrack) {\n        logger.debug('got display video track', 'id=' + videoTrack.id, 'label=' + videoTrack.label, 'enabled=' + videoTrack.enabled, 'kind=' + videoTrack.kind, 'muted=' + videoTrack.muted, 'readyState=' + videoTrack.readyState);\n\n        if(videoTrack.readyState === 'ended') {\n          throw new ClientError(1205, '비디오 트랙을 획득했지만 종료 상태입니다.'); \n        }\n      }\n\n      this.video?.setHd(true);\n\n      if(audioTrack) logger.debug('got display media track', 'id=' + audioTrack.id, 'label=' + audioTrack.label, 'enabled=' + audioTrack.enabled, 'kind=' + audioTrack.kind, 'muted=' + audioTrack.muted, 'readyState=' + audioTrack.readyState);\n      if(videoTrack) logger.debug('got display media track', 'id=' + videoTrack.id, 'label=' + videoTrack.label, 'enabled=' + videoTrack.enabled, 'kind=' + videoTrack.kind, 'muted=' + videoTrack.muted, 'readyState=' + videoTrack.readyState);\n    } catch(err) {\n      const e = err as Error;\n      const message = e.message;\n      logger.error('Failed to getDisplayMedia. ', e.name, message);\n\n      throw new ClientError(1204, `getDisplayMedia 실패(${message})`, e);\n    }\n  }\n\n  @Loggable('info')\n  stop() {\n    this.audio?.stop();\n    this.video?.stop();\n  }\n\n  _setRoom(room: Room) {\n    this.room = room;\n  }\n}\n\nexport { LocalScreen };","import { RemoteParticipant } from '../modules/participant/remote-participant';\nimport { RemoteAudio } from '../modules/remote/remote-audio';\nimport { RemoteVideo } from '../modules/remote/remote-video';\nimport { LocalVideo } from '../modules/local/local-video';\nimport { LocalAudio } from '../modules/local/local-audio';\nimport { QualityStat } from '../modules/room/room';\n\nexport enum RoomEventName {\n  CONNECTING = 'connecting',\n  CONNECTED = 'connected',\n  DISCONNECTED =  'disconnected',\n  PARTICIPANTENTERED = 'participantEntered',\n  PARTICIPANTLEFT = 'participantLeft',\n\n  LOCALVIDEOPUBLISHED = 'localVideoPublished',\n  LOCALVIDEOUNPUBLISHED = 'localVideoUnpublished',\n  LOCALAUDIOPUBLISHED = 'localAudioPublished',\n  LOCALAUDIOUNPUBLISHED = 'localAudioUnpublished',\n\n  REMOTEVIDEOPUBLISHED = 'remoteVideoPublished',\n  REMOTEVIDEOUNPUBLISHED = 'remoteVideoUnpublished',\n  REMOTEAUDIOPUBLISHED = 'remoteAudioPublished',\n  REMOTEAUDIOUNPUBLISHED = 'remoteAudioUnpublished',\n\n  REMOTEAUDIOLEVELUPDATED = 'remoteAudioLevelUpdated',\n\n  REMOTEAUDIOSUBSCRIBED = 'remoteAudioSubscribed',\n  REMOTEAUDIOUNSUBSCRIBED = 'remoteAudioUnsubscribed',\n  REMOTEVIDEOSTATECHANGED = 'remoteVideoStateChanged',\n  REMOTEAUDIOSTATECHANGED = 'remoteAudioStateChanged',\n  \n  ERROR = 'error',\n  RECORDFAILED = 'recordFailed',\n\n  USERMESSAGE = 'userMessage',\n\n  STAT = 'stat',\n};\n\nexport type RoomEventConnecting = {\n  readonly progress: number;\n};\n\nexport type RoomEventConnected = {\n  readonly remoteParticipants: RemoteParticipant[];\n};\n\nexport type RoomEventDisconnected = 'disconnected' | 'destroyed' | 'kicked';\n\nexport type RoomEventParticipantEntered = {\n  readonly remoteParticipant: RemoteParticipant;\n};\n\nexport type RoomEventParticipantLeft = {\n  readonly remoteParticipantId: string;\n};\n\nexport type RoomEventLocalAudioPublished = {\n    readonly localAudio: LocalAudio;\n};\n\nexport type RoomEventLocalAudioUnpublished = {\n  readonly localAudio: LocalAudio;\n};\n\nexport type RoomEventLocalVideoPublished = {\n  readonly localVideo: LocalVideo;\n};\n\nexport type RoomEventLocalVideoUnpublished = {\n  readonly localVideo: LocalVideo;\n};\n\nexport type RoomEventRemoteVideoPublished = {\n  readonly remoteParticipant: RemoteParticipant;\n  readonly remoteVideo: RemoteVideo;\n};\n\nexport type RoomEventRemoteVideoUnpublished = {\n  readonly remoteParticipant: RemoteParticipant;\n  readonly remoteVideo: RemoteVideo;\n};\n\nexport type RoomEventRemoteAudioPublished = {\n  readonly remoteParticipant: RemoteParticipant;\n  readonly remoteAudio: RemoteAudio;\n};\n\nexport type RoomEventRemoteAudioUnpublished = {\n  readonly remoteParticipant: RemoteParticipant;\n  readonly remoteAudio: RemoteAudio;\n};\n\nexport type RoomEventRemoteAudioSubscribed = {\n  readonly remoteParticipant: RemoteParticipant;\n};\n\nexport type RoomEventRemoteAudioUnsubscribed = {\n  readonly remoteParticipant: RemoteParticipant;\n};\n\nexport type RoomEventRemoteAudioStateChanged = {\n  readonly remoteParticipant: RemoteParticipant;\n  readonly remoteAudio: RemoteAudio;\n};\n\nexport type RoomEventRemoteVideoStateChanged = {\n  readonly remoteParticipant: RemoteParticipant;\n  readonly remoteVideo: RemoteVideo;\n};\n\nexport type RoomEventRecordFailed = {\n  readonly negotiationId: string;\n  readonly reason: 'NotPermitted' | 'LimitExceeded'\n};\n\nexport type RoomEventUserMessage = {\n  readonly senderId: string;\n  readonly message: string;\n  readonly type: string;\n};\n\nexport type RoomEventStat = {\n  qualityStat: QualityStat\n};","import EventEmitter from 'eventemitter3';\nimport { AuthConfig, AuthResponse } from './auth-api-client';\nimport { RoomApiClient } from './room-api-client';\nimport { Stats } from '../session/session';\nimport { DownSession, OnParticipantsInfoParams, OnUpdatedReceivers, OnAudioLevelParams, OnStreamChangedParams, OnUserMessageParams } from '../session/down-session';\nimport { UpSession } from '../session/up-session';\nimport { logger, Loggable, loggerSender } from '../../utils/logger';\nimport { GetRemoteVideoMediaStreamTrackFn, RemoteParticipant } from '../participant/remote-participant';\nimport { LocalParticipant } from '../participant/local-participant';\nimport { filterToArray, objectToArray } from '../../utils/object-util';\nimport { makeArray } from '../../utils/make-array';\nimport { LocalVideo } from '../local/local-video';\nimport { LocalAudio } from '../local/local-audio';\nimport { LocalMedia } from '../local/local-media';\nimport { RemoteAudioElements } from '../remote/remote-audio-elements';\nimport { RemoteVideo } from '../remote/remote-video';\nimport { Local } from '../local/local';\nimport { LocalScreen } from '../local/local-screen';\nimport { RemoteAudio } from '../remote/remote-audio';\nimport {\n  RoomEventName,\n  RoomEventConnecting,\n  RoomEventConnected,\n  RoomEventDisconnected,\n  RoomEventParticipantEntered,\n  RoomEventParticipantLeft,\n  RoomEventLocalAudioPublished,\n  RoomEventLocalAudioUnpublished,\n  RoomEventLocalVideoPublished,\n  RoomEventLocalVideoUnpublished,\n  RoomEventRemoteVideoPublished,\n  RoomEventRemoteVideoUnpublished,\n  RoomEventRemoteAudioPublished,\n  RoomEventRemoteAudioUnpublished,\n  RoomEventRemoteAudioSubscribed,\n  RoomEventRemoteAudioUnsubscribed,\n  RoomEventRemoteAudioStateChanged,\n  RoomEventRemoteVideoStateChanged,\n  RoomEventRecordFailed,\n  RoomEventUserMessage,\n  RoomEventStat,\n}\nfrom '../../utils/room-event-enum';\nimport { ClientError, ErrorException } from '../../utils/error-exception';\nimport { LocalAudioQualityMetricReport, LocalVideoQualityMetricReport, QualityMetricReportParams, RemoteAudioQualityMetricReport, RemoteVideoQualityMetricReport, QualityMetricReport } from '../../utils/log-send';\n\ntype RoomStatus = 'created' | 'initiated' | 'connected' | 'disconnected' | 'destroyed' | 'kicked';\nconst ConnectionStep = {\n  ENTERROOM: 1,\n  UPSESSION: 2,\n  DOWNSESSION: 3,\n  TOTALSTEP: 3\n}\n\nexport class Room extends EventEmitter {\n  upSession: UpSession;\n  downSession: DownSession;\n  roomApiClient: RoomApiClient;\n  authConfig: AuthConfig;\n  authResponse!: AuthResponse;\n  roomStatus: RoomStatus;\n  localParticipant: LocalParticipant;\n  participantMap: ParticipantMap = {}; // 참여자 아이디 - 참여자 객체\n  receiverMap: ReceiverMap = {}; // 리시버 아이디 - 스트림 아이디 or null\n  audioStreamIdMap: Record<string, string> = {}; // 오디오 스트림 아이디 - 참여자 아이디\n  config: RoomConfig = {\n    videoReceiverInitialCount: 10,\n    videoReceiverGrowthRate: 5,\n    videoReceiverMaximumCount: 50,\n    \n    cpuOveruseDetection: true,\n    maxFramerate: {\n      l: 10,\n      m: 20,\n      h: 30\n    },\n    voiceMode: true,\n    statInterval: 5000\n  };\n  remoteAudioElements: RemoteAudioElements;\n  audioOccupants: ParticipantMap = {};\n  audioLvlUpdateTs: number = 0;\n  subscribeStreamIdsQueue: {\n    key: string,\n    streamIds: number[]\n  }[] = [];\n  unsubscribeStreamIdsQueue: {\n    key: string,\n    pairs: {\n      receiverId: string;\n      streamId: number;\n    }[]\n  }[] = [];\n  streamIdsQueueInterval: number = -1;\n  isStreamIdsQueueWorking: boolean = false;\n  qualityMetricInterval: number = -1;\n\n  constructor(authConfig: AuthConfig, authResponse: AuthResponse, config: Partial<RoomConfig> = {}) {\n    super();\n    \n    Object.assign(this.config, config);\n\n    logger.debug(this.config);\n\n    this.roomApiClient = new RoomApiClient();\n    this.upSession = new UpSession(this.roomApiClient, {\n      cpuOveruseDetection: this.config.cpuOveruseDetection,\n      maxFramerate: this.config.maxFramerate,\n      voiceMode: this.config.voiceMode,\n    });\n    this.downSession = new DownSession(this.roomApiClient, {\n      cpuOveruseDetection: this.config.cpuOveruseDetection,\n      voiceMode: this.config.voiceMode,\n    });\n    this.localParticipant = new LocalParticipant();\n    this.remoteAudioElements = new RemoteAudioElements();\n    this.authConfig = authConfig;\n    this.authResponse = authResponse;\n    this.roomStatus = 'created';\n\n    this.roomApiClient.on('error', (err: ErrorException) => {\n      this._dispatch(RoomEventName.ERROR, err);\n    });\n\n    this.upSession.on('error', (err: ErrorException) => {\n      this._dispatch(RoomEventName.ERROR, err);\n    });\n\n    this.upSession.on('RecordFailed', (msg: undefined | RoomEventRecordFailed) => {\n      this._dispatch<RoomEventRecordFailed>(RoomEventName.RECORDFAILED, msg);\n    });\n\n    this.downSession.on('error', (err: ErrorException) => {\n      this._dispatch(RoomEventName.ERROR, err);\n    });\n\n    this._handleParticipantsInfo();\n    this._handleReceivers();\n\n    const apiServerUrl = this.authResponse.api;\n    const httpHeaders = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.authResponse.token}`,\n      },\n    };\n    this.roomApiClient.setHost(apiServerUrl);\n    this.roomApiClient.setHeaders(httpHeaders);\n\n    this.roomStatus = 'initiated';\n  }\n\n  get remoteParticipants() {\n    return filterToArray(this.participantMap, p => p.id !== this.localParticipant.id);\n  }\n\n  /**\n   * 미디어 서버로 부터 참여자 id를 발급받고, 세션을 생성한다.\n   */\n  @Loggable('info')\n  async connect(roomId: string) {\n    if(!/^[a-zA-Z0-9-]+$/.test(roomId) || roomId.length > 32) {\n      throw new ClientError(1301, '입력한 룸 id가 지원하지 않는 길이, 문자를 포함합니다.(32자 이하, 영문자/숫자/- 만 가능)');\n    }\n\n    this.roomApiClient.setRoomId(roomId);\n    const res = await this.roomApiClient.sendEnterRoom();\n    this.roomApiClient.setParticipantId(res.result.participantId);\n    this.localParticipant._setLocalParticipantId(res.result.participantId);\n\n    this._dispatch<RoomEventConnecting>(RoomEventName.CONNECTING, { progress: ConnectionStep.ENTERROOM / ConnectionStep.TOTALSTEP * 100 });\n\n    const iceServers = this.authResponse.iceServers;\n\n    await this.upSession.create({ iceServers });\n    this._dispatch<RoomEventConnecting>(RoomEventName.CONNECTING, { progress: ConnectionStep.UPSESSION / ConnectionStep.TOTALSTEP * 100 });\n    \n    await this.downSession.create({ iceServers });\n    this._dispatch<RoomEventConnecting>(RoomEventName.CONNECTING, { progress: ConnectionStep.DOWNSESSION / ConnectionStep.TOTALSTEP * 100 });\n\n    this.roomStatus = 'connected';\n\n    // subscribe시 큐에 저장된 streamId를 하나씩 꺼내서 assign 함\n    // unsubscribe시 큐에 저장된 receiverId와 streamId를 하나씩 꺼내서 assign을 요청함\n    this.streamIdsQueueInterval = window.setInterval(async ()=>{\n      if(this.isStreamIdsQueueWorking === false) {\n        // unsubscribe를 먼저 수행\n        if(this.unsubscribeStreamIdsQueue.length) {\n          const lastData = this.unsubscribeStreamIdsQueue.shift();\n          if(lastData) {\n            this.isStreamIdsQueueWorking = true;\n\n            const pairs = lastData.pairs;\n\n            try{\n              await this.downSession.assignStream(pairs);\n\n              let remoteVideos: RemoteVideo[] = [];\n              // 3. receiverMap에 stream 정보 업데이트\n              pairs.forEach(({ receiverId }) => {\n                this.remoteParticipants.forEach((participant)=>{\n                  const remoteVideo = participant.videos.find(remoteVideo => remoteVideo.receiverId === receiverId);\n                  if(remoteVideo) {\n                    remoteVideo._setReceiverId('');\n                    remoteVideo._setRemoteTrack(null);\n\n                    remoteVideos.push(remoteVideo);\n                  }\n                });\n\n                this.receiverMap[receiverId].streamId = null;\n              });\n\n              this.emit(lastData.key, remoteVideos);\n            } catch(err) {\n              this.emit(lastData.key, err);\n            }\n\n            this.isStreamIdsQueueWorking = false;\n          }\n        } else {\n          // subscribe 수행\n          if(this.subscribeStreamIdsQueue.length) {\n            const lastData = this.subscribeStreamIdsQueue.shift();\n            if(lastData) {\n              this.isStreamIdsQueueWorking = true;\n\n              let remoteVideos: RemoteVideo[] = [];\n              try {\n                for(let streamId of lastData.streamIds) {\n                  const removeVideo = await this._assignVideoStream([streamId]);\n                  if(removeVideo) remoteVideos = [ ...remoteVideos, ...removeVideo ];\n                }\n\n                this.emit(lastData.key, remoteVideos);\n              } catch(err) {\n                //assign stream error\n                this.emit(lastData.key, err);\n              }\n\n              this.isStreamIdsQueueWorking = false;\n            }\n          }\n        }\n      }\n    }, 100);\n\n    this._startQualityMetricReport(roomId);\n  }\n\n  /**\n   * 생성된 세션을 제거한다.\n   */\n  @Loggable('info')\n  async disconnect(reason: 'disconnected' | 'destroyed' | 'kicked' = 'disconnected') {\n    if (this.roomStatus !== 'connected') {\n      return logger.error('not connected.');\n    }\n\n    // subscribe, unsubscribe 타이머 및 배열 정리\n    window.clearInterval(this.streamIdsQueueInterval);\n    this.streamIdsQueueInterval = -1;\n\n    // quality Metric 타이머 정리\n    window.clearInterval(this.qualityMetricInterval);\n    this.qualityMetricInterval = -1;\n\n    this.isStreamIdsQueueWorking = false;\n    this.unsubscribeStreamIdsQueue = [];\n    this.subscribeStreamIdsQueue = [];\n    this.participantMap = {};\n    this.receiverMap = {};\n    this.audioStreamIdMap = {};\n    this.audioOccupants = {};\n    this.audioLvlUpdateTs = 0;\n\n    // 오디오 제거\n    this.remoteAudioElements.detach();\n    this.remoteAudioElements.stop();\n\n    // 리모트 비디오 stop\n    this.downSession.getTracks().forEach(track => track.stop());\n\n    if(reason === 'disconnected') {\n      // session destroy\n      await this.upSession.destroy();\n      await this.downSession.destroy();\n    } else {\n      this.upSession.close();\n      this.downSession.close();\n    }\n\n    this.roomStatus = reason;\n    this._dispatch<RoomEventDisconnected>(RoomEventName.DISCONNECTED, reason);\n  }\n\n  /**\n   * 내 미디어를 다른 참여자에게 공유한다.\n   */\n  @Loggable('info')\n  async publish(localMedias: LocalMedia[] | LocalScreen[] | Local[], isRecording: boolean = false) {\n    if(localMedias.length < 1) {\n      throw new ClientError(1324, '빈 배열이 전달되었습니다.');\n    }\n    const promise = (media: LocalMedia | LocalScreen | Local)=>{\n      let localAudio: LocalAudio | undefined;\n      let localVideo: LocalVideo | undefined;\n\n      if(media instanceof LocalMedia || media instanceof LocalScreen) {\n        localAudio = media.audio;\n        localVideo = media.video;\n      } else if(media instanceof LocalAudio) {\n        localAudio = media;\n      } else if(media instanceof LocalVideo) {\n        localVideo = media;\n      }\n      \n      return new Promise(async (resolve, reject)=>{\n        try {\n          const { audioOffer, videoOffer } = await this.upSession.addStream({\n            audioType: localAudio ? localAudio.type : 'none',\n            audioTrack: localAudio?.getMediaStreamTrack(),\n            audioExtraValue: localAudio?.extraValue,\n            videoType: localVideo ? localVideo.type : 'none',\n            localVideo: localVideo || undefined,\n            videoExtraValue: localVideo?.extraValue,\n            videoHd: localVideo?.hd,\n            record: isRecording\n          });\n          \n          if(media instanceof LocalMedia) {\n            media._setRoom(this);\n          }\n          \n          if(audioOffer && localAudio) {\n            localAudio._setStreamId(audioOffer.streamId, async config => {\n              await this.upSession.configureStream([config]);\n            });\n            this.localParticipant._setLocalAudio(localAudio);\n\n            this._dispatch<RoomEventLocalAudioPublished>(RoomEventName.LOCALAUDIOPUBLISHED, {\n              localAudio: localAudio\n            });\n          }\n          \n          if(videoOffer && localVideo) {\n            localVideo._setStreamId(videoOffer.streamId, async config => {\n              await this.upSession.configureStream([config]);\n            });\n\n            this.localParticipant._setLocalVideo(localVideo);\n\n            this._dispatch<RoomEventLocalVideoPublished>(RoomEventName.LOCALVIDEOPUBLISHED, {\n              localVideo: localVideo\n            });\n          }\n\n          resolve(media);\n        } catch(err) {\n          reject(err);\n        }\n      });\n    }\n\n    const promiseArr = localMedias.map(localMedia => promise(localMedia));\n    try {\n      await Promise.all(promiseArr);\n    } catch(err) {\n      throw err;\n    }\n  }\n\n  /**\n   * 다른 참여자에게 공유한 내 미디어를 취소한다.\n   */\n  @Loggable('info')\n  async unpublish(localMedias: LocalMedia[] | LocalScreen[] | Local[]) {\n    const streamIds: number[] = [];\n\n    localMedias.forEach((localMedia)=>{\n      if(localMedia instanceof LocalMedia || localMedia instanceof LocalScreen) {\n        localMedia.audio && streamIds.push(localMedia.audio.getStreamId());\n        localMedia.video && streamIds.push(localMedia.video.getStreamId());\n      } else {\n        streamIds.push(localMedia.getStreamId());\n      }\n    });\n\n    try {\n      await this.upSession.removeStream(streamIds);\n    } catch(err) {\n      throw err;\n    }\n  }\n\n  /**\n   * 다른 참여자의 비디오를 가져온다.\n   */\n  @Loggable('info')\n  subscribe(participantOrStreamIds: number[] | RemoteParticipant) {\n    return new Promise<RemoteVideo[]>((resolve, reject)=>{\n      let unsubscribedStreamIds: number[] = [];\n      if (Array.isArray(participantOrStreamIds)) {\n        unsubscribedStreamIds = participantOrStreamIds;\n      } else {\n        unsubscribedStreamIds = participantOrStreamIds._getUnsubscribedStreamIds();\n      }\n\n      const intersection = this._checkAlreadySubscribe(unsubscribedStreamIds);\n      if(intersection.length) {\n        return reject(new ClientError(1321, '이미 구독 중인 스트림입니다. ' + intersection));\n      }\n\n      const key = Math.random().toString(36).substring(2, 12);\n      this.subscribeStreamIdsQueue.push({\n        key: key,\n        streamIds: unsubscribedStreamIds\n      });\n      \n      this.once(key, (remoteVideos: RemoteVideo[] | Error)=>{\n        if (remoteVideos instanceof Error) {\n          return reject(remoteVideos);\n        }\n        //profile 기본값을 m으로 설정\n        remoteVideos.forEach((remoteVideo)=>{\n          remoteVideo.setQuality('m');\n        });\n        resolve(remoteVideos);\n      });\n    });\n  }\n\n  /**\n   * 다른 참여자의 비디오 가져오는걸 취소한다.\n   */\n  @Loggable('info')\n  async unsubscribe(participantOrStreamIds: number[] | RemoteParticipant) {\n    return new Promise<RemoteVideo[]>((resolve, reject)=>{\n      const videoStreamIds =\n        participantOrStreamIds instanceof RemoteParticipant\n          ? participantOrStreamIds._getSubscribedStreamIds()\n          : participantOrStreamIds;\n\n      // 1. streamId로 receiverId 찾기\n      const assignedStreamMap = Object.entries(this.receiverMap).reduce<StreamMap>(\n        (streamMap, [receiverId, { type, streamId }]) => {\n          if (streamId) streamMap[streamId] = { type, receiverId };\n          return streamMap;\n        },\n        {},\n      );\n      const receiverIds: string[] = [];\n      videoStreamIds.forEach(streamId => {\n        if(assignedStreamMap[streamId]) {\n          receiverIds.push(assignedStreamMap[streamId].receiverId);\n        }\n      });\n      // @NOTE: receiver에 할당된 stream을 지우기위해 0으로 전달\n      const pairs = receiverIds.map(receiverId => ({ receiverId, streamId: 0 }));\n\n      const key = Math.random().toString(36).substring(2, 12);\n      \n      this.unsubscribeStreamIdsQueue.push({\n        key: key,\n        pairs: pairs\n      });\n\n      this.once(key, (remoteVideos: RemoteVideo[] | Error)=>{\n        if (remoteVideos instanceof Error) {\n          return reject(remoteVideos);\n        }\n        resolve(remoteVideos);\n      });\n    });\n  }\n\n  @Loggable('debug')\n  getParticipant(participantId: string): RemoteParticipant | null {\n    return this.participantMap[participantId] || null;\n  }\n\n  @Loggable('debug')\n  getAudioOccupants(): RemoteParticipant[] {\n    return objectToArray(this.audioOccupants);\n  }\n\n  @Loggable('debug')\n  getRemoteVideo(videoId: number): RemoteVideo | null {\n    let remoteVideo = null;\n    this.remoteParticipants.some((remoteParticipant)=>{\n      remoteVideo = remoteParticipant.videos.find((remoteVideo)=>{\n        if(remoteVideo.videoId === videoId) {\n          return true;\n        }\n      });\n      if(remoteVideo) {\n        return true;\n      }\n    });\n\n    return remoteVideo;\n  }\n\n  @Loggable('debug')\n  getRemoteAudio(audioId: number): RemoteAudio | null {\n    let remoteAudio = null;\n    this.remoteParticipants.some((remoteParticipant)=>{\n      remoteAudio = remoteParticipant.audios.find((remoteVideo)=>{\n        if(remoteVideo.audioId === audioId) {\n          return true;\n        }\n      });\n      if(remoteAudio) {\n        return true;\n      }\n    });\n\n    return remoteAudio;\n  }\n\n  private _checkAlreadySubscribe(streamIds: number[]) {\n    const _streamIds = Object.values(this.receiverMap).filter(({ type, streamId }) => {\n      return type === 'video' && streamId !== null;\n    }).map(receiver => receiver.streamId);\n\n    const intersection = _streamIds.filter(streamId => {\n      if(streamId) {\n        return streamIds.includes(streamId);\n      }\n    });\n    return intersection;\n  }\n\n  /**\n   * 현재 리시버가 MAX를 초과했는지 체크한다.\n   */\n  @Loggable('info')\n  private _checkMaxReceiverCount(): boolean {\n    const currentCount = this._getCurrentReceiverCount();\n    if (currentCount >= this.config.videoReceiverMaximumCount) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 현재 리시버 갯수를 반환한다.\n   */\n  @Loggable('info')\n  private _getCurrentReceiverCount(): number {\n    const receiverMap: ReceiverMap = {};\n    Object.entries(this.receiverMap).forEach(([key, value])=>{\n      if(value.streamId) {\n        receiverMap[key] = value;\n      }\n    });\n\n    const receiverIds = Object.keys(receiverMap);\n    const currentVideoSize = receiverIds.filter(\n      receiverId => this.downSession.getTrack(receiverId)?.kind === 'video'\n    ).length;\n\n    return currentVideoSize;\n  }\n\n  /**\n   * 타입별 리시버 갯수를 조절한다.\n   */\n  @Loggable('debug')\n  async _setReceiverPool(videoSize: number) {\n    if (this._checkMaxReceiverCount()) throw new ClientError(1322, `리시버 갯수는 maxReceiverCount를 초과할 수 없습니다.`);\n\n    await this.downSession.addReceiver(makeArray(videoSize, { type: 'video' }));\n  }\n\n  @Loggable('info')\n  private async _assignVideoStream(streamIds: number[]): Promise<RemoteVideo[] | undefined> {\n    if (streamIds.length === 0) throw new ClientError(1323, `빈 streamIds이 전달되었습니다.`);\n\n    if (this._checkMaxReceiverCount()) throw new ClientError(1322, `리시버 갯수는 maxReceiverCount를 초과할 수 없습니다.`);\n\n    const intersection = this._checkAlreadySubscribe(streamIds);\n    if(intersection.length) {\n      throw new ClientError(1321, '이미 구독 중인 스트림입니다. ' + intersection);\n    }\n\n    // 1. 구독중이지 않은 streamId와 video receiverId 매핑.\n    const receiverIds = Object.entries(this.receiverMap)\n      .filter(([_, { type, streamId }]) => {\n        return type === 'video' && streamId === null;\n      })\n      .map(([receiverId]) => receiverId)\n      .slice(0, streamIds.length);\n\n    // 2. 가용 리시버 체크\n    if (receiverIds.length === 0 || streamIds.length > receiverIds.length) {\n      //리시버 추가\n      let receiverCount = this.config.videoReceiverGrowthRate;\n      const currentReceiverCount = this._getCurrentReceiverCount();\n      if (currentReceiverCount + this.config.videoReceiverGrowthRate > this.config.videoReceiverMaximumCount) {\n        receiverCount = this.config.videoReceiverMaximumCount - currentReceiverCount;\n      }\n\n      if (receiverCount > 0) {\n        await this._setReceiverPool(receiverCount);\n        return await this._assignVideoStream(streamIds);\n      }\n    } else {\n      const pairs = streamIds.map((streamId, i) => {\n        return { streamId, receiverId: receiverIds[i] };\n      });\n\n      // 3. receiverMap에 stream 정보 업데이트\n      pairs.forEach(({ streamId, receiverId }) => {\n        const next = { ...this.receiverMap[receiverId], streamId };\n        this.receiverMap[receiverId] = next;\n      });\n\n      try {\n        // 4. stream과 receiver 매핑\n        await this.downSession.assignStream(pairs);\n\n        let remoteVideos: RemoteVideo[] = [];\n        pairs.forEach(({ streamId, receiverId }) => {\n          const remoteVideoTrack = this.downSession.getTrack(receiverId);\n          if (remoteVideoTrack) {\n            const participant = Object.values(this.participantMap).find((participant) => !!participant.streamIdMap[streamId]);\n            if (participant) {\n              const remoteVideo = participant.getVideo(streamId);\n\n              remoteVideo._setReceiverId(receiverId, async config => {\n                await this.downSession.configureReceiver([config]);\n              });\n              remoteVideo._setRemoteTrack(remoteVideoTrack);\n              remoteVideos.push(remoteVideo);\n            }\n          }\n        });\n\n        return remoteVideos;\n      } catch (err) {\n        // 5. 요청 실패시 해당 receiver들을 다시 사용할 수 있도록 변경\n        pairs.forEach(({ receiverId }) => {\n          this.receiverMap[receiverId].streamId = null;\n        });\n\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * down session에서 전달된 참여자 정보를 처리한다.\n   */\n  @Loggable('debug')\n  private _handleParticipantsInfo() {\n    const getTrackFn: GetRemoteVideoMediaStreamTrackFn = (streamId: number) => {\n      for (const receiverId in this.receiverMap) {\n        if (this.receiverMap[receiverId].streamId === streamId) {\n          const found = this.downSession.getTrack(receiverId);\n          return found;\n        }\n      }\n    };\n\n    // TODO: 참여자 클래스 만들어서 room.participants 이런식으로 조회하기?\n    this.downSession.on<OnParticipantsInfoParams>('ChangedParticipantsInfo', ({ change }) => {\n      if (change.fullData) {\n        change.fullData.forEach(({ participantId, streams }) => {\n          if (participantId !== this.localParticipant.id) {\n            this.participantMap[participantId] = new RemoteParticipant(participantId, getTrackFn, streams);\n\n            // @NOTE: 오디오 아이디로 참여자 아이디랑 바로 매치하기 위함\n            streams?.filter(stream => {\n              if (stream.media === 'audio') {\n                this.audioStreamIdMap[stream.streamId.toString()] = participantId;\n              }\n            });\n          }\n        });\n      } \n      \n      if (change.participantsEnter) {\n        change.participantsEnter.forEach(participantId => {\n          if (participantId !== this.localParticipant.id) {\n            this.participantMap[participantId] = new RemoteParticipant(participantId, getTrackFn);\n          }\n        });\n\n        change.participantsEnter.forEach(participantId => {\n          if (participantId !== this.localParticipant.id) {\n            return this._dispatch<RoomEventParticipantEntered>(RoomEventName.PARTICIPANTENTERED, { remoteParticipant: this.participantMap[participantId] });\n          }\n        });\n      } \n      \n      if (change.participantsLeave) {\n        change.participantsLeave.forEach(participantId => {\n          if (participantId !== this.localParticipant.id) {\n            delete this.participantMap[participantId];\n            return this._dispatch<RoomEventParticipantLeft>(RoomEventName.PARTICIPANTLEFT, { remoteParticipantId: participantId });\n          }\n        });\n      } \n      \n      if (change.streamsAdded) {\n        change.streamsAdded.forEach(({ participantId, ...stream }) => {\n          this.participantMap[participantId]?._addStream(stream);\n          // @NOTE: 오디오 아이디로 참여자 아이디랑 바로 매치하기 위함\n          if (stream.media === 'audio') {\n            this.audioStreamIdMap[stream.streamId.toString()] = participantId;\n          }\n        });\n\n        const audioStreams = change.streamsAdded.filter(({ participantId, media }) => {\n          return participantId !== this.localParticipant.id && media === 'audio';\n        });\n\n        audioStreams.forEach(audioStream => {\n          const participant = this.participantMap[audioStream.participantId];\n          if(participant) {\n            this._dispatch<RoomEventRemoteAudioPublished>(RoomEventName.REMOTEAUDIOPUBLISHED, {\n              remoteParticipant: participant,\n              remoteAudio: participant.getAudio(audioStream.streamId)\n            });\n          }\n        });\n\n        const videoStreams = change.streamsAdded.filter(({ participantId, media }) => {\n          return participantId !== this.localParticipant.id && media === 'video';\n        });\n\n        videoStreams.forEach(videoStream => {\n          const participant = this.participantMap[videoStream.participantId];\n          if(participant) {\n            const remoteVideo = participant.getVideo(videoStream.streamId);\n            this._dispatch<RoomEventRemoteVideoPublished>(RoomEventName.REMOTEVIDEOPUBLISHED, {\n              remoteParticipant: participant,\n              remoteVideo: remoteVideo\n            });\n          }\n        });\n      } \n      \n      if (change.streamsUpdated) {\n        change.streamsUpdated.forEach(({ participantId, streamId, property }) => {\n          if (participantId !== this.localParticipant.id) {\n            this.participantMap[participantId]?._updateStream({ streamId, property });\n            if(property.hasOwnProperty('alwaysOn')) {\n              //audio\n              const participant = this.participantMap[participantId];\n              if(participant) {\n                const remoteAudio = participant.getAudio(streamId);\n                remoteAudio._setAlwaysOn(property.alwaysOn);\n                remoteAudio._setActive(property.active);\n\n                this._dispatch<RoomEventRemoteAudioStateChanged>(RoomEventName.REMOTEAUDIOSTATECHANGED, {\n                  remoteParticipant: participant,\n                  remoteAudio: remoteAudio,\n                });\n              }\n            } else {\n              //video\n              const participant = this.participantMap[participantId];\n              if(participant) {\n                const remoteVideo = participant.getVideo(streamId);\n                remoteVideo._setActive(property.active);\n                this._dispatch<RoomEventRemoteVideoStateChanged>(RoomEventName.REMOTEVIDEOSTATECHANGED, {\n                  remoteParticipant: participant,\n                  remoteVideo: remoteVideo,\n                });\n              }\n            }\n          }\n        });\n      } \n      \n      if (change.streamsRemoved) {\n        change.streamsRemoved.forEach(({ participantId, streamId }) => {\n          if(participantId === this.localParticipant.id) {\n            const localAudio = this.localParticipant.getAudio(streamId);\n            const localVideo = this.localParticipant.getVideo(streamId);\n\n            if(localAudio) {\n              this._dispatch<RoomEventLocalAudioUnpublished>(RoomEventName.LOCALAUDIOUNPUBLISHED, {\n                localAudio: localAudio\n              });\n            }\n\n            if (localVideo) {\n              this._dispatch<RoomEventLocalVideoUnpublished>(RoomEventName.LOCALVIDEOUNPUBLISHED, {\n                localVideo: localVideo\n              });\n            }\n          } else {\n            const remoteParticipant = this.participantMap[participantId];\n            if (remoteParticipant) {\n              const remoteAudio = remoteParticipant.getAudio(streamId);\n              const remoteVideo = remoteParticipant.getVideo(streamId);\n\n              if(remoteAudio) {\n                this._dispatch<RoomEventRemoteAudioUnpublished>(RoomEventName.REMOTEAUDIOUNPUBLISHED, {\n                  remoteParticipant: remoteParticipant,\n                  remoteAudio: remoteAudio\n                });\n              }\n\n              if (remoteVideo) {\n                this._dispatch<RoomEventRemoteVideoUnpublished>(RoomEventName.REMOTEVIDEOUNPUBLISHED, {\n                  remoteParticipant: remoteParticipant,\n                  remoteVideo: remoteVideo\n                });\n              }\n\n              remoteParticipant._removeStream(streamId);\n            }\n\n            const receiver = Object.values(this.receiverMap).find(receiver => {\n              return streamId === receiver.streamId;\n            });\n\n            if(receiver) {\n              receiver.streamId = null;\n            }\n          }\n        });\n      }\n    });\n\n    this.downSession.on<OnStreamChangedParams>('StreamChanged', ({ params }) => {\n      if(params.type === 'audio') {\n        const receiverId = params.receiverId;\n        const streamId = params.streamId;\n        const participantId = params.participantId;\n\n        if(streamId === 0) {\n          //기존 발화자 삭제\n          const _participant = this.audioOccupants[receiverId];\n          if(_participant) {\n            const participant = this.participantMap[_participant.id];\n            \n            const _receiverId = Object.keys(this.receiverMap).find((key) => {\n              return receiverId === key;\n            });\n            \n            if(participant && _receiverId) {\n              //참여자의 오디오 리시버 업데이트\n              const _streamId = this.receiverMap[_receiverId].streamId;\n              if(_streamId) {\n                const remoteAudio: RemoteAudio = participant.getAudio(_streamId);\n                if(remoteAudio) {\n                  remoteAudio._setReceiverId(receiverId);\n                }\n              }\n            }\n\n            this._dispatch<RoomEventRemoteAudioUnsubscribed>(RoomEventName.REMOTEAUDIOUNSUBSCRIBED, { remoteParticipant: participant });\n          }\n        } else {\n          const participant = this.participantMap[participantId];\n          //참여자의 오디오 리시버 업데이트\n          if(participant) {\n            const remoteAudio: RemoteAudio = participant.getAudio(streamId);\n            if(remoteAudio) {\n              remoteAudio._setReceiverId(receiverId);\n            }\n          }\n\n          //새 발화자 추가\n          if(this.audioOccupants[receiverId] !== participant) {\n            this.audioOccupants[receiverId] = participant;\n            this._dispatch<RoomEventRemoteAudioSubscribed>(RoomEventName.REMOTEAUDIOSUBSCRIBED, { remoteParticipant: participant });\n          }\n        }\n      }\n    });\n\n    this.downSession.on<OnUserMessageParams>('UserMessage', (data) => {\n      data.forEach((item)=>{\n        const senderId = item.sender;\n        const message = item.message;\n        const type = item.type;\n\n        if(senderId !== this.localParticipant.id) {\n          this._dispatch<RoomEventUserMessage>(RoomEventName.USERMESSAGE, { senderId, message, type });\n        }\n      });\n    });\n\n    // Admin 메시지\n    this.downSession.on('RoomDestroyed', () => {\n      this.disconnect('destroyed');\n    });\n\n    this.downSession.on('Kick', () => {\n      this.disconnect('kicked');\n    });\n\n    this.downSession.on('Inactivate', () => {\n      \n    });\n  }\n\n  @Loggable('debug')\n  private _handleReceivers() {\n    this.downSession.on<OnUpdatedReceivers>('UpdatedReceivers', async ({ name, receivers }) => {\n      // 리시버 아이디, 이벤트 따라 일단 저장\n      // 케이스 1: 초기에 할당받은 경우\n      // 케이스 2: 리시버 추가 요청 후 결과를 받는 경우\n      // 케이스 3: 리시버 삭제 요청 후 결과를 받는 경우\n      if (name === 'init' || name === 'add') {\n        receivers.forEach(({ type, receiverId }) => {\n          this.receiverMap[receiverId] = { type, streamId: null };\n        });\n      }\n\n      if (name === 'init') {\n        const participants: RemoteParticipant[] = [];\n        objectToArray(this.participantMap).forEach((participant: RemoteParticipant) => {\n          participants.push(participant);\n        });\n\n        const audioReceivers = this.downSession.getFixedAudioReceiver();\n        this.remoteAudioElements._setReceivers(audioReceivers);\n        const remoteAudioElements = this.remoteAudioElements.attach();\n        remoteAudioElements.forEach(element => document.body.appendChild(element));\n\n        await this._setReceiverPool(this.config.videoReceiverInitialCount);\n\n        this._dispatch<RoomEventConnected>(RoomEventName.CONNECTED, { remoteParticipants: participants });\n      }\n\n      if (name === 'remove') {\n        receivers.forEach(({ receiverId }) => {\n          delete this.receiverMap[receiverId];\n        });\n      }\n    });\n  }\n\n  getRemoteAudioLevels() {\n    const receivers = this.downSession.getFixedAudioReceiver();\n    const levels: {\n      remoteParticipants: { level: number; remoteParticipant: RemoteParticipant }[]\n    } = {\n      remoteParticipants: []\n    };\n    let lastTimestamp: number = 0;\n\n    receivers.forEach((receiver, i) => {\n      const sc = receiver.getContributingSources();\n      const ss = sc.find(ss => ss.timestamp > this.audioLvlUpdateTs);\n      if(ss) {\n        lastTimestamp = ss.timestamp;\n        //remote\n        const remoteParticipant = this.participantMap[this.audioStreamIdMap[ss.source]];\n        if(remoteParticipant) {\n          const dBFS = Math.log10(ss.audioLevel || 0) * 20 + 3.0103;\n          let aLvl = (65 + dBFS) / 70 * 100;\n          if (aLvl > 100) {\n            aLvl = 100;\n          } else if (aLvl < 0) {\n            aLvl = 0;\n          }\n\n          aLvl = Math.floor(aLvl);\n\n          levels.remoteParticipants.push({\n            remoteParticipant: remoteParticipant,\n            level: aLvl\n          });\n        }\n      }\n    });\n    if (lastTimestamp > 0) {\n      this.audioLvlUpdateTs = lastTimestamp;\n    }\n    return levels;\n  }\n\n  @Loggable('debug')\n  async switchSpeaker(deviceId: string) {\n    const fn = (audioElement: HTMLAudioElement) => {\n      return new Promise((resolve, reject)=>{\n        // @ts-ignore\n        audioElement.setSinkId(deviceId).then(result => resolve(result)).catch(err => reject(err));\n      });\n    }\n\n    const promises = this.remoteAudioElements.audioElements.map((audioElement)=>{\n      return fn(audioElement);\n    });\n    await Promise.all(promises);\n  }\n\n  async getLocalStats(): Promise<Stats>{\n    const stats = await this.upSession.getAllStats();\n    return stats;\n  };\n\n  async getRemoteStats(): Promise<Stats>{\n    const stats = await this.downSession.getAllStats();\n    return stats;\n  };\n\n  private async _getLocalStatsReport(): Promise<LocalQualityStat> {\n    const upStats = await this.upSession.getStats();\n    const localAudioMetrics: LocalAudioMetrics[] = upStats.audioStats.map((item: any) => {\n      const track = objectToArray(this.localParticipant.audioMap).find(localAudio => localAudio.mediaStreamTrack.id === item.track.trackIdentifier);\n\n      const oldStats = this.upSession.oldAudioStats.find((oldStat)=>{\n        if(item.outboundRtp.id === oldStat.outboundRtp.id) {\n          return true;\n        }\n      });\n\n      let packetsSentPerInterval = 0;\n      if(oldStats) {\n        packetsSentPerInterval = item.outboundRtp.packetsSent - oldStats.outboundRtp.packetsSent;\n      }\n\n      let bytesSentPerInterval = 0;\n      if(oldStats) {\n        bytesSentPerInterval = item.outboundRtp.bytesSent - oldStats.outboundRtp.bytesSent;\n      }\n\n      return {\n        participantId: this.localParticipant.id,\n        streamId: track.streamId,\n        bytesSent: item.outboundRtp.bytesSent,\n        bytesSentPerInterval: bytesSentPerInterval,\n        packetsSent: item.outboundRtp.packetsSent,\n        packetsSentPerInterval: packetsSentPerInterval,\n        srcAudioLevel: item.mediaSource.audioLevel,\n      };\n    });\n\n    this.upSession._setOldAudioStats(upStats.audioStats);\n\n    const localVideoMetrics: LocalVideoMetrics[] = upStats.videoStats.map((item: any) => {\n      const track = objectToArray(this.localParticipant.videoMap).find((localVideo) => {\n        const videoTrack = localVideo.cloneMediaStreamTracks.find((cloneVideo: MediaStreamTrack) => cloneVideo.id === item.track.trackIdentifier);\n        if(videoTrack) {\n          return true;\n        }\n      });\n\n      const oldStats = this.upSession.oldVideoStats.find((oldStat)=>{\n        if(item.outboundRtp.id === oldStat.outboundRtp.id) {\n          return true;\n        }\n      });\n\n      const stream = this.upSession.streamIdMidMap[track.streamId];\n      let profile: 'l' | 'm' | 'h' = 'l';\n      if(stream.l === item.mid) profile = 'l';\n      else if(stream.m === item.mid) profile = 'm';\n      else if(stream.h === item.mid) profile = 'h';\n\n      let packetsSentPerInterval = 0;\n      if(oldStats) {\n        packetsSentPerInterval = item.outboundRtp.packetsSent - oldStats.outboundRtp.packetsSent;\n      }\n\n      let bytesSentPerInterval = 0;\n      if(oldStats) {\n        bytesSentPerInterval = item.outboundRtp.bytesSent - oldStats.outboundRtp.bytesSent;\n      }\n\n      return {\n        participantId: this.localParticipant.id,\n        streamId: track.streamId,\n        profile: profile,\n        bytesSent: item.outboundRtp.bytesSent,\n        bytesSentPerInterval: bytesSentPerInterval,\n        packetsSent: item.outboundRtp.packetsSent,\n        packetsSentPerInterval: packetsSentPerInterval,\n        framesEncoded: item.outboundRtp.framesEncoded,\n        framesSent: item.outboundRtp.framesSent,\n        pliCount: item.outboundRtp.pliCount,\n        srcFrames: item.mediaSource.frames,\n\n        frameWidth: item.outboundRtp.frameWidth || 0,\n        frameHeight: item.outboundRtp.frameHeight || 0,\n        framesPerSecond: item.outboundRtp.framesPerSecond || 0,\n      };\n    });\n\n    this.upSession._setOldVideoStats(upStats.videoStats);\n\n    const oldCandidatePair = this.upSession.oldCandidatePair;\n    let bytesSentPerInterval = 0;\n    let packetsSentPerInterval = 0;\n    if(oldCandidatePair) {\n      bytesSentPerInterval = (upStats.candidatePair.bytesSent || 0) - (oldCandidatePair.bytesSent || 0);\n      packetsSentPerInterval = (upStats.candidatePair.packetsSent || 0) - (oldCandidatePair.packetsSent || 0);\n    }\n\n    this.upSession._setOldCandidatePairStats(upStats.candidatePair);\n\n    return {\n      audioMetrics: localAudioMetrics,\n      videoMetrics: localVideoMetrics,\n      bytesSentPerInterval: bytesSentPerInterval,\n      packetsSentPerInterval: packetsSentPerInterval,\n      currentRTT: upStats.candidatePair.currentRoundTripTime || 0,\n    };\n  }\n\n  private async _getRemoteStatsReport(): Promise<RemoteQualityStat> {\n    const downStats = await this.downSession.getStats();\n    const remoteAudioMetrics: RemoteAudioMetrics[] = downStats.audioStats.map((item: any) => {\n      const transceiver = this.downSession.audioTransceivers.find(audioTransceiver => {\n        return audioTransceiver.receiver.track.id === item.track.trackIdentifier;\n      });\n\n      let audio: any;\n      this.remoteParticipants.find((participant: RemoteParticipant)=>{\n        audio = objectToArray(participant.audioMap).find((audioMap) => {\n          return audioMap.receiverId === transceiver?.mid;\n        });\n        if(audio) {\n          return true;\n        }\n      });\n\n      const oldStats = this.downSession.oldAudioStats.find((oldStat)=>{\n        if(item.inboundRtp.id === oldStat.inboundRtp.id) {\n          return true;\n        }\n      });\n\n      let packetsLostPerInterval = 0;\n      if(oldStats) {\n        packetsLostPerInterval = item.inboundRtp.packetsLost - oldStats.inboundRtp.packetsLost;\n      }\n\n      let bytesReceivedPerInterval = 0;\n      if(oldStats) {\n        bytesReceivedPerInterval = item.inboundRtp.bytesReceived - oldStats.inboundRtp.bytesReceived;\n      }\n\n      return {\n        participantId: audio ? audio.participantId : '',\n        receiverId: Number(item.mid),\n        streamId: audio ? audio.audioId : 0,\n        bytesReceived: item.inboundRtp.bytesReceived,\n        bytesReceivedPerInterval: bytesReceivedPerInterval,\n        totalSamplesReceived: item.inboundRtp.totalSamplesReceived,\n        audioLevel: item.inboundRtp.audioLevel,\n        packetsLost: item.inboundRtp.packetsLost,\n        packetsLostPerInterval: packetsLostPerInterval,\n      };\n    });\n\n    this.downSession._setOldAudioStats(downStats.audioStats);\n    \n    const remoteVideoMetrics: RemoteVideoMetrics[] = downStats.videoStats.map((item: any) => {\n      let video: any;\n      this.remoteParticipants.some((participant: RemoteParticipant)=>{\n        video = objectToArray(participant.videoMap).find((remoteVideo) => {\n          return remoteVideo.mediaStreamTrack && remoteVideo.mediaStreamTrack.id === item.track.trackIdentifier;\n        });\n        if(video) {\n          return true;\n        }\n      });\n\n      const oldStats = this.downSession.oldVideoStats.find((oldStat)=>{\n        if(item.inboundRtp.id === oldStat.inboundRtp.id) {\n          return true;\n        }\n      });\n\n      let packetsLostPerInterval = 0;\n      if(oldStats) {\n        packetsLostPerInterval = item.inboundRtp.packetsLost - oldStats.inboundRtp.packetsLost;\n      }\n\n      let bytesReceivedPerInterval = 0;\n      if(oldStats) {\n        bytesReceivedPerInterval = item.inboundRtp.bytesReceived - oldStats.inboundRtp.bytesReceived;\n      }\n\n      return {\n        participantId: video ? video.participantId : '',\n        receiverId: Number(item.mid),\n        streamId: video ? video.videoId : 0,\n        bytesReceived: item.inboundRtp.bytesReceived,\n        bytesReceivedPerInterval: bytesReceivedPerInterval,\n        framesReceived: item.inboundRtp.framesReceived,\n        framesDecoded: item.inboundRtp.framesDecoded,\n        packetsLost: item.inboundRtp.packetsLost,\n        packetsLostPerInterval: packetsLostPerInterval,\n        pliCount: item.inboundRtp.pliCount,\n\n        frameWidth: item.inboundRtp.frameWidth || 0,\n        frameHeight: item.inboundRtp.frameHeight || 0,\n        framesPerSecond: item.inboundRtp.framesPerSecond || 0,\n      };\n    });\n\n    this.downSession._setOldVideoStats(downStats.videoStats);\n    \n    const oldCandidatePair = this.downSession.oldCandidatePair;\n    let bytesReceivedPerInterval = 0;\n    let packetsReceivedPerInterval = 0;\n    if(oldCandidatePair) {\n      bytesReceivedPerInterval = (downStats.candidatePair.bytesReceived || 0) - (oldCandidatePair.bytesReceived || 0);\n      packetsReceivedPerInterval = (downStats.candidatePair.packetsReceived || 0) - (oldCandidatePair.packetsReceived || 0);\n    }\n\n    this.downSession._setOldCandidatePairStats(downStats.candidatePair);\n\n    return {\n      audioMetrics: remoteAudioMetrics,\n      videoMetrics: remoteVideoMetrics,\n      availableIncomingBitrate: downStats.candidatePair.availableIncomingBitrate || 0,\n      bytesReceivedPerInterval: bytesReceivedPerInterval,\n      packetsReceivedPerInterval: packetsReceivedPerInterval,\n      currentRTT: downStats.candidatePair.currentRoundTripTime || 0,\n    };\n  }\n\n  private _getStatsReport(localStats: LocalQualityStat, remoteStats: RemoteQualityStat) {\n    const localAudioMetrics: LocalAudioQualityMetricReport[] = localStats.audioMetrics.map((audioMetrics)=>{\n      return {\n        type: 'audio',\n        streamId: audioMetrics.streamId,\n        bytesSent: audioMetrics.bytesSent,\n        packetsSent: audioMetrics.packetsSent,\n        srcAudioLevel: audioMetrics.srcAudioLevel,\n      };\n    });\n\n    const localVideoMetrics: LocalVideoQualityMetricReport[] = localStats.videoMetrics.map((videoMetrics)=>{\n      return {\n        type: 'video',\n        streamId: videoMetrics.streamId,\n        profile: videoMetrics.profile,\n        bytesSent: videoMetrics.bytesSent,\n        framesEncoded: videoMetrics.framesEncoded,\n        framesSent: videoMetrics.framesSent,\n        pliCount: videoMetrics.pliCount,\n        srcFrames: videoMetrics.srcFrames,\n      };\n    });\n\n    const remoteAudioMetrics: RemoteAudioQualityMetricReport[] = remoteStats.audioMetrics.map((audioMetrics)=>{\n      return {\n        type: 'audio',\n        receiverId: audioMetrics.receiverId,\n        streamId: audioMetrics.streamId,\n        bytesReceived: audioMetrics.bytesReceived,\n        totalSamplesReceived: audioMetrics.totalSamplesReceived,\n        audioLevel: audioMetrics.audioLevel,\n        packetsLost: audioMetrics.packetsLost,\n      };\n    });\n\n    const remoteVideoMetrics: RemoteVideoQualityMetricReport[] = remoteStats.videoMetrics.map((videoMetrics)=>{\n      return {\n        type: 'video',\n        receiverId: videoMetrics.receiverId,\n        streamId: videoMetrics.streamId,\n        bytesReceived: videoMetrics.bytesReceived,\n        framesReceived: videoMetrics.framesReceived,\n        framesDecoded: videoMetrics.framesDecoded,\n        packetsLost: videoMetrics.packetsLost,\n        pliCount: videoMetrics.pliCount,\n      };\n    });\n\n    return {\n      upSession: {\n        audios: localAudioMetrics,\n        videos: localVideoMetrics\n      },\n      downSession: {\n        audios: remoteAudioMetrics,\n        videos: remoteVideoMetrics\n      }\n    };\n  }\n\n  private _dispatch<T>(type: string, data?: T) {\n    this.emit(type, data);\n  }\n\n  async sendUserMessage(targets: string[], message: string, type: string = 'normal') {\n    await this.upSession._callSendMessage({\n      targets: targets,\n      message: message,\n      type: type\n    });\n  }\n\n  _startQualityMetricReport(roomId: string) {\n    if(loggerSender.collectionPeriod > 0) {\n      let index = 0;\n      this.qualityMetricInterval = window.setInterval(async ()=>{\n        const localStats = await this._getLocalStatsReport();\n        const remoteStats = await this._getRemoteStatsReport();\n\n        const stats = this._getStatsReport(localStats, remoteStats);\n\n        const upSessions: QualityMetricReport = {\n          direction: 'up',\n          index: this.upSession.index,\n          metrics: [...stats.upSession.audios, ...stats.upSession.videos]\n        };\n\n        const downSessions: QualityMetricReport = {\n          direction: 'down',\n          index: this.downSession.index,\n          metrics: [...stats.downSession.audios, ...stats.downSession.videos]\n        };\n\n        index++;\n        if(index === loggerSender.collectionPeriod) {\n          const method = 'CnL.QualityMetrics';\n          const params: QualityMetricReportParams = {\n            serviceId: this.authConfig.serviceId,\n            roomId: roomId,\n            participantId: this.localParticipant.id,\n            sessions: [upSessions, downSessions]\n          };\n          loggerSender.send({ method, params });\n\n          index = 0;\n        }\n        \n        this._dispatch<RoomEventStat>(RoomEventName.STAT, {\n          qualityStat: {\n            localQualityStat: localStats,\n            remoteQualityStat: remoteStats,\n          }\n        });\n      }, this.config.statInterval);\n    }\n  }\n}\n\ntype ParticipantMap = {\n  [participantId: string]: RemoteParticipant;\n};\ntype ReceiverMap = {\n  [receiverId: string]: {\n    type: 'audio' | 'video';\n    streamId: number | null;\n  };\n};\ntype StreamMap = {\n  [streamId: number]: {\n    type: 'audio' | 'video';\n    receiverId: string;\n  };\n};\nexport type RoomConfig = {\n  videoReceiverInitialCount: number;\n  videoReceiverGrowthRate: number;\n  videoReceiverMaximumCount: number;\n  cpuOveruseDetection: boolean;\n  maxFramerate: {\n    l: number;\n    m: number;\n    h: number;\n  };\n  voiceMode: boolean;\n  statInterval: number;\n};\n\nexport type QualityStat = {\n  localQualityStat: LocalQualityStat;\n  remoteQualityStat: RemoteQualityStat;\n};\n\nexport type LocalQualityStat = {\n  audioMetrics: LocalAudioMetrics[];\n  videoMetrics: LocalVideoMetrics[];\n  bytesSentPerInterval: number;\n  packetsSentPerInterval: number;\n  currentRTT: number;\n};\n\nexport type LocalAudioMetrics = {\n  participantId: string;\n  streamId: number;\n  bytesSent: number;\n  bytesSentPerInterval: number;\n  packetsSent: number;\n  packetsSentPerInterval: number;\n  srcAudioLevel: number;\n};\nexport type LocalVideoMetrics = {\n  participantId: string;\n  streamId: number;\n  profile: 'l' | 'm' | 'h';\n  bytesSent: number;\n  bytesSentPerInterval: number;\n  packetsSent: number;\n  packetsSentPerInterval: number;\n  framesEncoded: number;\n  framesSent: number;\n  pliCount: number;\n  srcFrames: number;\n  frameWidth: number;\n  frameHeight: number;\n  framesPerSecond: number;\n};\n\nexport type RemoteQualityStat = {\n  audioMetrics: RemoteAudioMetrics[];\n  videoMetrics: RemoteVideoMetrics[];\n  availableIncomingBitrate: number;\n  bytesReceivedPerInterval: number;\n  packetsReceivedPerInterval: number;\n  currentRTT: number;\n};\n\nexport type RemoteAudioMetrics = {\n  participantId: string;\n  receiverId: number;\n  streamId: number;\n  bytesReceived: number;\n  bytesReceivedPerInterval: number;\n  totalSamplesReceived: number;\n  packetsLost: number;\n  packetsLostPerInterval: number;\n  audioLevel: number;\n};\nexport type RemoteVideoMetrics = {\n  participantId: string;\n  receiverId: number;\n  streamId: number;\n  bytesReceived: number;\n  bytesReceivedPerInterval: number;\n  framesReceived: number;\n  framesDecoded: number;\n  pliCount: number;\n  packetsLost: number;\n  packetsLostPerInterval: number;\n  frameWidth: number;\n  frameHeight: number;\n  framesPerSecond: number;\n};","export const makeArray = <T>(length: number, item: T) => new Array(length).fill(item) as T[];\n","import { AuthApiClient, AuthConfig, AuthResponse } from './modules/room/auth-api-client';\nimport { SDK_VERSION } from './config';\nimport { logger, Logger, loggerSender, Loggable } from './utils/logger';\nimport { Room, RoomConfig } from './modules/room/room';\nimport { LocalAudio } from './modules/local/local-audio';\nimport { LocalVideo } from './modules/local/local-video';\nimport { LocalScreen } from './modules/local/local-screen';\nimport { LocalMedia } from './modules/local/local-media';\nimport EventEmitter from 'eventemitter3';\nimport userAgentParser from './utils/user-agent';\nimport { ClientError } from './utils/error-exception';\nimport { setStorage, getStorage } from './utils/storage';\n\nexport const enum SignStatus {\n  SIGN_IN = 'signin',\n  SIGN_OUT = 'signout',\n};\n\nclass ConnectLive {\n  private static emitter = new EventEmitter();\n  private static authResponse: AuthResponse | null;\n  private static authApiClient: AuthApiClient = new AuthApiClient();\n  private static authRefreshTimer: number = -1;\n  private static authConfig: AuthConfig;\n  public static signStatus: SignStatus = SignStatus.SIGN_OUT;\n\n  public static version: string = SDK_VERSION;\n  public static logger: Logger = logger;\n\n  constructor() {\n    new ClientError(1901, 'ConnectLive로 부턱 직접 객체를 선언할 수 없습니다.');\n  }\n\n  public static on<T = any>(eventName: string, callback: (eventData: T) => void) {\n    this.emitter.on(eventName, callback);\n  }\n\n  private static _startAuthTimer() {\n    if (this.authResponse) {\n      const timeout = Math.floor(this.authResponse.ttl * 0.9 * 1000);\n      let restTtl = timeout;\n      const fn = async () => {\n        if (this.authResponse) {\n          try {\n            const res = await this.authApiClient.refreshToken(this.authConfig.serviceId, this.authResponse.token);\n            this.authResponse.token = res.token;\n            this.authResponse.ttl = res.ttl;\n\n            this._startAuthTimer();\n          } catch (err) {\n            logger.error('token refresh error');\n            const timeout = 600000;\n\n            restTtl = restTtl - timeout;\n            if (restTtl < 0) {\n              this.emitter.emit('tokenRefreshError', err);\n            } else {\n              this.emitter.emit('tokenRefreshWarning', err);\n              window.setTimeout(async () => {\n                fn();\n              }, timeout);\n            }\n          }\n        }\n      };\n\n      this.authRefreshTimer = window.setTimeout(async () => {\n        fn();\n      }, timeout);\n    }\n  }\n\n  static async signIn(authConfig: AuthConfig) {\n    if (this.authRefreshTimer > -1) {\n      this.signOut();\n    }\n    const fingerprint = getStorage('connectlive-fingerprint') || '';\n    this.authConfig = authConfig;\n\n    this.authResponse = await this.authApiClient.authorize(authConfig, fingerprint);\n    setStorage('connectlive-fingerprint', this.authResponse.fingerprint);\n\n    this._startAuthTimer();\n\n    await loggerSender.createWebSocket(this.authResponse.cnl, this.authResponse.token);\n\n    logger.info('[method][Function.signIn]', authConfig);\n\n    const device = userAgentParser.getDevice();\n    const engine = userAgentParser.getEngine();\n    const os = userAgentParser.getOS();\n    const browser = userAgentParser.getBrowser();\n    const cpu = userAgentParser.getCPU();\n\n    logger.debug(\n      'DEVICE TYPE =', device.type + ',',\n      'DEVICE VENDOR =', device.vendor + ',',\n      'DEVICE MODEL =', device.model + ',',\n      'ENGINE NAME =', engine.name + ',',\n      'ENGINE VERSION =', engine.version + ',',\n      'OS NAME =', os.name + ',',\n      'OS VERSION =', os.version + ',',\n      'BROWSER NAME =', browser.name + ',',\n      'BROWSER VERSION =', browser.version + ',',\n      'CPU =', cpu.architecture + ',',\n      'SDK VERSION =', SDK_VERSION\n    );\n\n    this.signStatus = SignStatus.SIGN_IN;\n  }\n\n  @Loggable('info')\n  static signOut() {\n    window.clearTimeout(this.authRefreshTimer);\n    this.authRefreshTimer = -1;\n    this.authResponse = null;\n\n    this.signStatus = SignStatus.SIGN_OUT;\n\n    loggerSender.destroy();\n  }\n\n  @Loggable('info')\n  static async createLocalMedia(constraints: MediaStreamConstraints | undefined) {\n    const localMedia = new LocalMedia(constraints || {});\n    if (constraints) {\n      await localMedia._getUserMedia();\n    }\n    return localMedia;\n  }\n\n  @Loggable('info')\n  static async createLocalScreen(constraints: MediaStreamConstraints) {\n    const localScreen = new LocalScreen(constraints);\n    await localScreen._getDisplayMedia();\n    return localScreen;\n  }\n\n  @Loggable('info')\n  static createRoom(config?: Partial<RoomConfig>): Room {\n    if (this.authResponse) {\n      return new Room(this.authConfig, this.authResponse, config);\n    }\n    throw new ClientError(1106, '룸 생성 전 인증이 필요합니다.');\n  }\n}\n\nexport default ConnectLive;\nexport type { Room as IRoom } from './modules/room/room';\nexport type { LocalMedia as ILocalMedia };\nexport type { LocalScreen as ILocalScreen };\nexport type { LocalAudio as ILocalAudio };\nexport type { LocalVideo as ILocalVideo };\nexport type { RemoteAudio as IRemoteAudio } from './modules/remote/remote-audio';\nexport type { RemoteVideo as IRemoteVideo } from './modules/remote/remote-video';\nexport type { LocalParticipant as ILocalParticipant } from './modules/participant/local-participant';\nexport type { RemoteParticipant as IRemoteParticipant } from './modules/participant/remote-participant';\nexport type {\n  ErrorException as IErrorException,\n  ServerError as IServerError,\n  ClientError as IClientError,\n} from './utils/error-exception';\n\nexport type {\n  RoomEventConnecting as IRoomEventConnecting,\n  RoomEventConnected as IRoomEventConnected,\n  RoomEventDisconnected as IRoomEventDisconnected,\n  RoomEventParticipantEntered as IRoomEventParticipantEntered,\n  RoomEventParticipantLeft as IRoomEventParticipantLeft,\n  RoomEventLocalAudioPublished as IRoomEventLocalAudioPublished,\n  RoomEventLocalAudioUnpublished as IRoomEventLocalAudioUnpublished,\n  RoomEventLocalVideoPublished as IRoomEventLocalVideoPublished,\n  RoomEventLocalVideoUnpublished as IRoomEventLocalVideoUnpublished,\n  RoomEventRemoteVideoPublished as IRoomEventRemoteVideoPublished,\n  RoomEventRemoteVideoUnpublished as IRoomEventRemoteVideoUnpublished,\n  RoomEventRemoteAudioPublished as IRoomEventRemoteAudioPublished,\n  RoomEventRemoteAudioUnpublished as IRoomEventRemoteAudioUnpublished,\n  RoomEventRemoteAudioSubscribed as IRoomEventRemoteAudioSubscribed,\n  RoomEventRemoteAudioUnsubscribed as IRoomEventRemoteAudioUnsubscribed,\n  RoomEventRemoteAudioStateChanged as IRoomEventRemoteAudioStateChanged,\n  RoomEventRemoteVideoStateChanged as IRoomEventRemoteVideoStateChanged,\n  RoomEventRecordFailed as IRoomEventRecordFailed,\n  RoomEventStat as IRoomEventStat\n} from './utils/room-event-enum';","export const setStorage = (key: string, value: string) => window.localStorage.setItem(key, value);\nexport const getStorage = (key: string) => window.localStorage.getItem(key);"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","SDK_VERSION","hash","message","data","TextEncoder","encode","hashArray","crypto","subtle","digest","Uint8Array","map","x","toString","padStart","join","hasOwnProperty","prototype","isInteger","Number","isSafeInteger","num","isFinite","Math","floor","abs","JsonRpc","constructor","this","jsonrpc","serialize","JSON","stringify","VERSION","RequestObject","id","method","params","super","undefined","NotificationObject","SuccessObject","ErrorObject","error","JsonRpcParsed","payload","type","JsonRpcError","code","request","object","validateMessage","parse","isString","invalidRequest","jsonrpcObj","err","parseError","Array","isArray","parseObject","parsedObjectArray","len","parseJsonRpcObject","obj","payloadType","call","tmp","internalError","errorObj","throwIt","checkId","checkMethod","checkParams","checkError","maybeNull","invalidParams","methodNotFound","indexer","get","reset","window","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MODEL","NAME","TYPE","VENDOR","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","FIREFOX","GOOGLE","HUAWEI","LG","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SONY","XIAOMI","ZEBRA","FACEBOOK","enumerize","arr","enums","toUpperCase","has","str1","str2","lowerize","indexOf","str","toLowerCase","trim","replace","substring","rgxMapper","ua","arrays","j","k","p","q","matches","match","regex","props","exec","test","strMapper","windowsVersionMap","ME","XP","Vista","RT","regexes","browser","CHROME","cpu","device","engine","EDGE","os","UAParser","extensions","getResult","_ua","navigator","userAgent","_rgxmap","mergedRegexes","concat","extend","getBrowser","version","_browser","major","split","getCPU","_cpu","getDevice","_device","getEngine","_engine","getOS","_os","getUA","setUA","BROWSER","CPU","DEVICE","ENGINE","OS","module","exports","$","jQuery","Zepto","parser","set","prop","LogLevel","verbose","trace","debug","information","warning","loggerSender","createWebSocket","host","token","close","clearKeepAliveTimer","ws","WebSocket","onopen","userAgentParser","userInfo","sdkVersion","platform","platformVersion","name","osName","osVersion","deviceModel","model","send","keepAliveInterval","setInterval","onerror","ConnectLive","signStatus","reconnect","onclose","onmessage","evt","setLevel","config","log_level","cnl","reconnectPeriod","reconnect_period","quality_metrics","collectionPeriod","collection_period","timeout","setTimeout","reconnectTimeGap","body","isLog","level","logs","logLevelNumber","stringified","jsonrpc.notification","jsonrpc.request","readyState","CONNECTING","CLOSED","CLOSING","timer","OPEN","clearInterval","destroy","logLevel","info","off","toNowDateString","now","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","getMilliseconds","toMsgString","msg","log","toISOString","logger","console","Loggable","propertyKey","descriptor","originalMethod","args","ErrorException","Error","setPrototypeOf","getCode","getMessage","ServerError","ClientError","origin","HttpWithJSONRpc","setHost","setHeaders","headers","options","httpMethod","path","url","res","fetch","json","AuthApiClient","authorize","authConfig","fingerprint","endpoint","externally","internally","refreshToken","serviceId","oldToken","response","serviceSecret","texts","serviceKey","secret","scheme","firstParams","firstResponse","nonce","ha","secondParams","auth","secondResponse","prefix","Events","EE","fn","context","once","addListener","emitter","event","TypeError","listener","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","listeners","handlers","l","ee","listenerCount","emit","a1","a2","a3","a4","a5","removeListener","on","removeAllListeners","prefixed","RoomApiClient","setRoomId","roomId","setParticipantId","participantId","sendEnterRoom","sign","sendCreateSession","direction","index","sdp","sendAddCandidate","candidate","sendRestartIce","sendDestroySession","callback","JSONRpc","methodMap","Map","toStream","warn","handleMessage","parsedObjects","jsonrpc.parse","handleParsedObject","parsedObject","hasId","hasMethod","String","forEach","requestObject","noop","Session","apiClient","cpuOveruseDetection","maxFramerate","m","h","voiceMode","roomApiClient","assign","dataChannel","rtcConfig","createPeerConnection","createDataChannel","peerConnection","_rtcConfig","bundlePolicy","iceTransportPolicy","rtcpMuxPolicy","iceCandidatePoolSize","sdpSemantics","extmapAllowMixed","opt","mandatory","optional","enableDscp","googCpuOveruseDetection","googCpuOveruseEncodeUsage","googCpuUnderuseThreshold","googCpuOveruseThreshold","googHighpassFilter","googEchoCancellation","googEchoCancellation2","googAutoGainControl","googAutoGainControl2","googNoiseSuppression","googNoiseSuppression2","googTypingNoiseDetection","echoCancellation","RTCPeerConnection","onicecandidate","ice","onnegotiationneeded","offer","createOffer","setLocalDescription","answer","RTCSessionDescription","setRemoteDescription","onconnectionstatechange","connectionState","_restartIceTimerStop","_restartIceTimerStart","oniceconnectionstatechange","iceConnectionState","ontrack","Response","text","restartIceInterval","onLine","_restartIce","iceRestart","getAllStats","stats","getStats","item","stat","some","filterToArray","filtered","objectToArray","values","DownSession","addListeners","notification","negotiationId","receivers","createAnswer","callSetAnswer","transceivers","getTransceivers","receiverTrackMap","reduce","transceiver","receiverId","mid","receiver","track","kind","audioTransceivers","filter","fixedAudioReceiver","getTrack","getTracks","addReceiver","find","callAddReceiver","getFixedAudioReceiver","removeReceiver","receiverIds","callRemoveReceiver","assignStream","callAssignStream","configureReceiver","_callConfigureReceiver","_audioStats","_videoStats","candidatePair","t","items","audioStats","inboundRtp","videoStats","_setOldAudioStats","oldAudioStats","_setOldVideoStats","oldVideoStats","_setOldCandidatePairStats","oldCandidatePair","UpSession","addStream","audioType","audioTrack","audioExtraValue","videoType","localVideo","videoExtraValue","videoHd","record","audio","audioOffer","video","videoOffer","_replaceAudioTrack","_replaceVideoTrack","_setVideoProfiles","_callSetAnswer","prev","streamIdMidMap","streamId","default","profiles","profile","_callAddStream","extraValue","hd","configureStream","streams","_callConfigureStream","removeStream","streamIds","_removeTracks","_callRemoveStream","_replaceVideoProfiles","_callSendMessage","audioTransceiver","sender","replaceTrack","videoTransceiver","getMediaStreamTrack","cloneTrack","_getCloneTrack","stream","getParameters","encodings","active","setParameters","activeProfile","removeTrack","maxBitrate","bitrate","settings","getSettings","width","scaleResolutionDownBy","mediaSource","outboundRtp","Remote","getParticipantId","getExtraValue","_setExtraValue","_setParticipantId","RemoteVideo","participant","videoId","videoElements","isEnabled","mediaStreamTrack","enabled","_setType","_setRemoteTrack","attach","element","videoElement","document","createElement","mediaStream","getMediaStream","srcObject","autoplay","playsInline","detach","remove","MediaStream","getVideoId","_setVideoId","_setReceiverId","statusUpdateFn","_setActive","setPaused","paused","pause","setQuality","quality","RemoteAudio","audioId","isAlwaysOn","property","alwaysOn","getAudioId","_setAlwaysOn","RemoteParticipant","trackFn","getTrackFn","streamIdMap","media","videoMap","audioMap","hasAudio","s","hasVideo","audios","videos","isEnabledVideo","isEnabledAudio","_getSubscribedStreamIds","_getFilterStreamIds","assigned","_getUnsubscribedStreamIds","notAssigned","getSubscribedVideos","_getFilterStreams","getUnsubscribedVideos","getAudio","getVideo","_getVideoStreamIdAll","_getVideoStreamAll","videoStreams","videoTracks","_","_addStream","_updateStream","_removeStream","LocalParticipant","_setLocalAudio","_setLocalVideo","_setLocalParticipantId","stop","Local","getStreamId","setExtraValue","setEnabled","_setStreamId","LocalVideo","cloneMediaStreamTracks","setHd","clone","LocalAudio","setAlwaysOn","LocalMedia","constraints","getDevices","mediaDevices","enumerateDevices","getMicDevices","deviceId","getSpeakerDevices","getCameraDevices","switchCamera","exact","room","unpublish","getUserMedia","videoTrack","getVideoTracks","label","muted","publish","switchMic","getAudioTracks","_getUserMedia","_setRoom","setMediaStream","RemoteAudioElements","audioElements","_setReceivers","audioReceivers","audioReceiver","audioElement","_getMediaStream","ms","addTrack","LocalScreen","switchDisplay","_getDisplayMedia","getDisplayMedia","RoomEventName","ConnectionStep","Room","authResponse","videoReceiverInitialCount","videoReceiverGrowthRate","videoReceiverMaximumCount","statInterval","upSession","downSession","localParticipant","remoteAudioElements","roomStatus","_dispatch","ERROR","RECORDFAILED","_handleParticipantsInfo","_handleReceivers","apiServerUrl","api","httpHeaders","Authorization","remoteParticipants","participantMap","connect","progress","iceServers","streamIdsQueueInterval","isStreamIdsQueueWorking","unsubscribeStreamIdsQueue","lastData","shift","pairs","remoteVideos","remoteVideo","receiverMap","subscribeStreamIdsQueue","removeVideo","_assignVideoStream","_startQualityMetricReport","disconnect","reason","qualityMetricInterval","audioStreamIdMap","audioOccupants","audioLvlUpdateTs","DISCONNECTED","localMedias","isRecording","promise","localAudio","LOCALAUDIOPUBLISHED","LOCALVIDEOPUBLISHED","promiseArr","localMedia","all","subscribe","participantOrStreamIds","unsubscribedStreamIds","intersection","_checkAlreadySubscribe","random","unsubscribe","videoStreamIds","assignedStreamMap","entries","streamMap","getParticipant","getAudioOccupants","getRemoteVideo","remoteParticipant","getRemoteAudio","remoteAudio","includes","_checkMaxReceiverCount","_getCurrentReceiverCount","keys","_setReceiverPool","videoSize","fill","receiverCount","currentReceiverCount","remoteVideoTrack","change","fullData","participantsEnter","PARTICIPANTENTERED","participantsLeave","PARTICIPANTLEFT","remoteParticipantId","streamsAdded","_a","propertyIsEnumerable","audioStream","REMOTEAUDIOPUBLISHED","videoStream","REMOTEVIDEOPUBLISHED","streamsUpdated","REMOTEAUDIOSTATECHANGED","REMOTEVIDEOSTATECHANGED","streamsRemoved","LOCALAUDIOUNPUBLISHED","LOCALVIDEOUNPUBLISHED","REMOTEAUDIOUNPUBLISHED","REMOTEVIDEOUNPUBLISHED","_participant","_receiverId","_streamId","REMOTEAUDIOUNSUBSCRIBED","REMOTEAUDIOSUBSCRIBED","senderId","USERMESSAGE","participants","appendChild","CONNECTED","getRemoteAudioLevels","levels","lastTimestamp","ss","getContributingSources","timestamp","source","aLvl","log10","audioLevel","switchSpeaker","promises","setSinkId","catch","getLocalStats","getRemoteStats","_getLocalStatsReport","upStats","localAudioMetrics","trackIdentifier","oldStats","oldStat","packetsSentPerInterval","packetsSent","bytesSentPerInterval","bytesSent","srcAudioLevel","localVideoMetrics","cloneVideo","framesEncoded","framesSent","pliCount","srcFrames","frames","frameWidth","frameHeight","framesPerSecond","audioMetrics","videoMetrics","currentRTT","currentRoundTripTime","_getRemoteStatsReport","downStats","remoteAudioMetrics","packetsLostPerInterval","packetsLost","bytesReceivedPerInterval","bytesReceived","totalSamplesReceived","remoteVideoMetrics","framesReceived","framesDecoded","packetsReceivedPerInterval","packetsReceived","availableIncomingBitrate","_getStatsReport","localStats","remoteStats","sendUserMessage","targets","upSessions","metrics","downSessions","sessions","STAT","qualityStat","localQualityStat","remoteQualityStat","static","eventName","ttl","restTtl","authApiClient","_startAuthTimer","authRefreshTimer","signOut","localStorage","getItem","setItem","setStorage","vendor","architecture","clearTimeout","localScreen"],"mappings":"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"}