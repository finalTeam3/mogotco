<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mogotco.mapper.MentoringMapper">

	<select id="select" parameterType="Integer"
		resultType="MentoringDTO">
		SELECT * FROM mentoring WHERE mentoringid=#{mentoringid}
	</select>

	<select id="selectAll" resultType="MentoringDTO">
		SELECT * FROM mentoring
	</select>

	<!-- 등록된 멘토링 리스트 출력을 위한 mybatis 연동 -->
	<select id="selectMentoringAll"
		resultType="MentoringDTO">
		SELECT mtc.mcateid, mt.mentoringid, mu.userid AS
		user_userid, mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,
		mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference, mt.mentorurl, mt.mcaring FROM mentoring
		mt
		INNER JOIN mentor mr ON
		mt.mentorid = mr.mentorid
		INNER JOIN user mu
		ON mr.userid = mu.userid
		INNER JOIN mcate mtc ON mt.mcateid =
		mtc.mcateid
		WHERE mtc.mname = #{mname} ORDER BY date_difference DESC LIMIT #{meningnum},6
	</select>

	<!-- 등록된 모든 멘토링 리스트 출력을 위한 mybatis 연동 -->
	<select id="viewMentoringAll" parameterType="Integer" resultType="MentoringDTO">
		SELECT mt.mentoringid, mt.mentorid,
		mu.userid AS user_userid, mr.mentorcom AS mentor_mentorcom, mt.mtitle,
		mt.mentoringimg, mt.mrdate, mt.mmemberidcnt, mt.mcaring, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference, mt.mentorurl, mt.mcaring FROM mentoring
		mt
		INNER JOIN mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN user mu
		ON mr.userid = mu.userid ORDER BY date_difference DESC LIMIT #{meningnum},6
	</select>

	<!-- 멘토링 옵션을 화면에 출력하기 위한 mybatis 연동 -->
	<select id="viewMentoringOp" parameterType="Integer"
		resultType="MentoringDTO">
		SELECT mt.mentoringid, mc.mname AS mcate_mname, mu.userid
		AS user_userid, mr.mentorimg AS mentor_mentorimg, mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,
		mt.mcontents, mt.mentoringdate,
		mt.mentoringimg, mt.mentoringprice,
		mt.mplace, mt.mentorurl, mt.mcaring,
		mt.mmemberidcnt, mt.mcaring, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl
		FROM mentoring mt
		INNER JOIN mcate mc ON
		mt.mcateid = mc.mcateid
		INNER JOIN mentor mr ON
		mt.mentorid =
		mr.mentorid
		INNER JOIN user mu ON mr.userid = mu.userid
		WHERE
		mt.mentoringid = #{mentoringid} ORDER BY date_difference DESC LIMIT #{meningnum},6
	</select>
	<!-- main에서 멘토링바로 할 수 있는 것들부터 하기 -->
	<select id="mentoringimmed" resultType="MentoringDTO">
		SELECT mentoringid,
		mtitle, u.username AS user_username, mentoringprice,
		mentoringimg,mentoringdate,
		mcontents,DATEDIFF(mentoringdate,sysdate()) AS date_difference, mentoring.mentorurl, mentoring.mcaring FROM
		mentoring mentoring
		INNER JOIN mentor men ON
		mentoring.mentorid=men.mentorid
		INNER JOIN user u ON
		men.userid=u.userid
		WHERE DATEDIFF(mentoringdate,sysdate())>=0 ORDER BY
		date_difference ASC
		LIMIT 3
	</select>
	<insert id="insert" parameterType="MentoringDTO">
		INSERT INTO mentoring VALUES
		(NULL,#{mentorid},#{mcateid},#{mentoringprice},#{mentoringdate},
		#{mentoringimg},#{mentorurl},#{mmemberidcnt},sysdate(),#{mplace},#{mcontents},#{mtitle},#{mcaring})
		<selectKey keyProperty="mentoringid" resultType="Integer"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="update" parameterType="MentoringDTO">
		UPDATE mentoring SET
		mentorid=#{mentorid}, mcateid=#{mcateid},
		mentoringprice=#{mentoringprice},
		mentoringdate=#{mentoringdate},
		mentoringimg=#{mentoringimg}, mentorurl=#{mentorurl},
		mmemberidcnt=#{mmemberidcnt}, mrdate=sysdate(), mplace=#{mplace},
		mcontents=#{mcontents},
		mtitle=#{mtitle}, mcaring=#{mcaring}
		WHERE
		mentoringid=#{mentoringid}
	</update>

	<delete id="delete" parameterType="Integer">
		DELETE FROM mentoring WHERE
		mentoringid=#{mentoringid}
	</delete>

	<!-- 전체검색 -->
	<select id="mentoringsearch" resultType="MentoringDTO">
		SELECT mt.mentoringid,
		mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,
		mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl , mt.mcaring FROM mentoring
		mt
		INNER JOIN mentor mr ON
		mt.mentorid = mr.mentorid
		INNER JOIN user mu
		ON mr.userid = mu.userid
		WHERE mt.mtitle LIKE CONCAT('%',#{txt},'%') ORDER BY date_difference DESC LIMIT #{meningnum},6

	</select>

	<!-- 카테고리별로 전체검색(mentoringpage에서) (choyunyoung add) -->
	<select id="mcatesearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, mc.mname AS mcate_mname, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN mentor mr ON
		mt.mentorid = mr.mentorid
		INNER JOIN user mu ON mr.userid = mu.userid
		WHERE mc.mname LIKE CONCAT('%',#{mname},'%') and mt.mtitle LIKE
		CONCAT('%',#{txt},'%') ORDER BY date_difference DESC LIMIT #{meningnum},6

	</select>

	<!-- 카테고리, 리뷰순(choyunyoung add) -->
	<select id="mcatereviewsearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, ROUND(avg(r.rating),1) AS avgrate, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM
		mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN
		mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN review r ON
		mt.mentoringid=r.mentoringid
		INNER JOIN user mu ON mr.userid =
		mu.userid
		WHERE mc.mname LIKE CONCAT('%',#{mname},'%') and mt.mtitle
		LIKE
		CONCAT('%',#{txt},'%') GROUP BY mt.mentoringid ORDER BY avgrate, date_difference
		DESC LIMIT #{meningnum},6

	</select>

	<!-- 카테고리, 가격순(choyunyoung add) -->
	<select id="mcatepricesearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, ROUND(avg(r.rating),1) AS avgrate, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM
		mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN
		mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN review r ON
		mt.mentoringid=r.mentoringid
		INNER JOIN user mu ON mr.userid =
		mu.userid
		WHERE mc.mname LIKE CONCAT('%',#{mname},'%') and mt.mtitle
		LIKE
		CONCAT('%',#{txt},'%') GROUP BY mt.mentoringid ORDER BY
		mt.mentoringprice, date_difference DESC LIMIT #{meningnum},6

	</select>

	<!-- 카테고리, 가장빨리 멘토링 가능한 순(choyunyoung add) -->
	<select id="mcaterecentsearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference, mt.mentoringprice, mt.mentorurl, mt.mcaring FROM mentoring mt
		INNER JOIN mcate mc ON mt.mcateid =
		mc.mcateid
		INNER JOIN mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN
		user mu ON mr.userid = mu.userid
		WHERE mc.mname LIKE
		CONCAT('%',#{mname},'%') and mt.mtitle
		LIKE
		CONCAT('%',#{txt},'%') and
		DATEDIFF(mentoringdate,sysdate())>=0 ORDER BY
		date_difference DESC LIMIT #{meningnum},6
	</select>

	<!-- 카테고리, 사후관리 유무(choyunyoung add) -->
	<select id="mcatemcaringoksearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid, mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate, mt.mentoringprice,
		mt.mmemberidcnt, mt.mcaring, DATEDIFF(mt.mentoringdate,sysdate()), mt.mentorurl AS
		date_difference, mt.mcaring  FROM mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN user mu ON mr.userid = mu.userid
		WHERE mc.mname LIKE
		CONCAT('%',#{mname},'%') and mt.mtitle
		LIKE
		CONCAT('%',#{txt},'%') and mt.mcaring=#{mcaring} ORDER BY date_difference DESC LIMIT #{meningnum},6
	</select>
	
	
		<!-- 전체 , 가격순(choyunyoung add) -->
	<select id="allreviewsearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, mt.mentoringprice, ROUND(avg(r.rating),1) AS avgrate, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM
		mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN
		mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN review r ON
		mt.mentoringid=r.mentoringid
		INNER JOIN user mu ON mr.userid =
		mu.userid
		WHERE mt.mtitle
		LIKE
		CONCAT('%',#{txt},'%') GROUP BY mt.mentoringid ORDER BY avgrate,date_difference
		DESC LIMIT #{meningnum},6
	</select>
		<!-- 전체 , 리뷰순(choyunyoung add) -->
	<select id="allpricesearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, ROUND(avg(r.rating),1) AS avgrate, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM
		mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN
		mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN review r ON
		mt.mentoringid=r.mentoringid
		INNER JOIN user mu ON mr.userid =
		mu.userid
		WHERE mt.mtitle
		LIKE
		CONCAT('%',#{txt},'%') GROUP BY mt.mentoringid ORDER BY
		mt.mentoringprice, date_difference DESC LIMIT #{meningnum},6
	</select>
		<!-- 전체, 가장빨리 멘토링 가능한 순(choyunyoung add)-->
	<select id="allrecentsearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference, mt.mentoringprice , mt.mentorurl, mt.mcaring FROM mentoring mt
		INNER JOIN mcate mc ON mt.mcateid =
		mc.mcateid
		INNER JOIN mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN
		user mu ON mr.userid = mu.userid
		WHERE mt.mtitle
		LIKE
		CONCAT('%',#{txt},'%') and
		DATEDIFF(mentoringdate,sysdate())>=0 ORDER BY
		date_difference DESC LIMIT #{meningnum},6
	</select>
		<!-- 전체, 사후관리 유무(choyunyoung add) -->
	<select id="allmcaringoksearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid, mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, mt.mentoringprice, mt.mentorurl, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference, mt.mcaring  FROM mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN user mu ON mr.userid = mu.userid
		WHERE mt.mtitle
		LIKE
		CONCAT('%',#{txt},'%') and mt.mcaring=#{mcaring} ORDER BY date_difference DESC LIMIT #{meningnum},6
	</select>

	<!-- txt없을 때 -->
	<!-- 카테고리, 리뷰순(choyunyoung add) -->
	<select id="nmcatereviewsearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, ROUND(avg(r.rating),1) AS avgrate, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM
		mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN
		mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN review r ON
		mt.mentoringid=r.mentoringid
		INNER JOIN user mu ON mr.userid =
		mu.userid
		WHERE mc.mname LIKE CONCAT('%',#{mname},'%') GROUP BY mt.mentoringid ORDER BY avgrate, date_difference
		DESC LIMIT #{meningnum},6

	</select>

	<!-- 카테고리, 가격순(choyunyoung add) -->
	<select id="nmcatepricesearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, ROUND(avg(r.rating),1) AS avgrate, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM
		mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN
		mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN review r ON
		mt.mentoringid=r.mentoringid
		INNER JOIN user mu ON mr.userid =
		mu.userid
		WHERE mc.mname LIKE CONCAT('%',#{mname},'%') GROUP BY mt.mentoringid ORDER BY
		mt.mentoringprice, date_difference DESC LIMIT #{meningnum},6

	</select>

	<!-- 카테고리, 가장빨리 멘토링 가능한 순(choyunyoung add) -->
	<select id="nmcaterecentsearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference, mt.mentoringprice , mt.mentorurl, mt.mcaring FROM mentoring mt
		INNER JOIN mcate mc ON mt.mcateid =
		mc.mcateid
		INNER JOIN mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN
		user mu ON mr.userid = mu.userid
		WHERE mc.mname LIKE
		CONCAT('%',#{mname},'%') and
		DATEDIFF(mentoringdate,sysdate())>=0 ORDER BY
		date_difference DESC LIMIT #{meningnum},6
	</select>

	<!-- 카테고리, 사후관리 유무(choyunyoung add) -->
	<select id="nmcatemcaringoksearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid, mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN user mu ON mr.userid = mu.userid
		WHERE mc.mname LIKE
		CONCAT('%',#{mname},'%') and mt.mcaring=#{mcaring} ORDER BY date_difference DESC LIMIT #{meningnum},6
	</select>
	
	
		<!-- 전체 , 가격순(choyunyoung add) -->
	<select id="nallreviewsearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, ROUND(avg(r.rating),1) AS avgrate, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM
		mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN
		mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN review r ON
		mt.mentoringid=r.mentoringid
		INNER JOIN user mu ON mr.userid =
		mu.userid GROUP BY mt.mentoringid ORDER BY avgrate, date_difference
		DESC LIMIT #{meningnum},6
	</select>
		<!-- 전체 , 리뷰순(choyunyoung add) -->
	<select id="nallpricesearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, ROUND(avg(r.rating),1) AS avgrate, mt.mentoringprice, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM
		mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN
		mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN review r ON
		mt.mentoringid=r.mentoringid
		INNER JOIN user mu ON mr.userid =
		mu.userid GROUP BY mt.mentoringid ORDER BY
		mt.mentoringprice, date_difference DESC LIMIT #{meningnum},6
	</select>
		<!-- 전체, 가장빨리 멘토링 가능한 순(choyunyoung add)-->
	<select id="nallrecentsearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid,
		mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,
		mt.mmemberidcnt, mt.mcaring, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference, mt.mentoringprice , mt.mentorurl, mt.mcaring FROM mentoring mt
		INNER JOIN mcate mc ON mt.mcateid =
		mc.mcateid
		INNER JOIN mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN
		user mu ON mr.userid = mu.userid WHERE
		DATEDIFF(mentoringdate,sysdate())>=0 ORDER BY
		date_difference DESC LIMIT #{meningnum},6
	</select>
		<!-- 전체, 사후관리 유무(choyunyoung add) -->
	<select id="nallmcaringoksearch" resultType="MentoringDTO">
		SELECT mt.mentoringid, mu.userid AS user_userid, mr.mentorcom AS
		mentor_mentorcom, mt.mtitle,mt.mentoringimg, mt.mrdate,mt.mentoringprice,
		mt.mmemberidcnt, mt.mcaring, DATEDIFF(mt.mentoringdate,sysdate()) AS
		date_difference , mt.mentorurl, mt.mcaring FROM mentoring mt
		INNER JOIN mcate mc ON mt.mcateid = mc.mcateid
		INNER JOIN mentor mr ON mt.mentorid = mr.mentorid
		INNER JOIN user mu ON mr.userid = mu.userid
		WHERE mt.mcaring=#{mcaring} ORDER BY date_difference DESC LIMIT #{meningnum},6
	</select>
</mapper>